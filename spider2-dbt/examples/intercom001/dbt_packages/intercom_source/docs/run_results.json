{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.0", "generated_at": "2023-11-06T15:28:56.050469Z", "invocation_id": "631f88b3-2326-4fe8-9710-5020bdf811e4", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T15:28:54.913337Z", "completed_at": "2023-11-06T15:28:54.929349Z"}, {"name": "execute", "started_at": "2023-11-06T15:28:54.931498Z", "completed_at": "2023-11-06T15:28:54.931517Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023175954818725586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.intercom_source.stg_intercom__admin_tmp", "compiled": true, "compiled_code": "select * \nfrom \"postgres\".\"intercom_source_integration_tests\".\"admin_data\"", "relation_name": "\"postgres\".\"intercom_source_integration_tests_stg_intercom\".\"stg_intercom__admin_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T15:28:54.919958Z", "completed_at": "2023-11-06T15:28:54.929924Z"}, {"name": "execute", "started_at": "2023-11-06T15:28:54.932117Z", "completed_at": "2023-11-06T15:28:54.932121Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02344202995300293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.intercom_source.stg_intercom__company_history_tmp", "compiled": true, "compiled_code": "--To disable this model, set the intercom__using_contact_company variable within your dbt_project.yml file to False.\n\n\nselect * \nfrom \"postgres\".\"intercom_source_integration_tests\".\"company_history_data\"", "relation_name": "\"postgres\".\"intercom_source_integration_tests_stg_intercom\".\"stg_intercom__company_history_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T15:28:54.923148Z", "completed_at": "2023-11-06T15:28:54.930591Z"}, {"name": "execute", "started_at": "2023-11-06T15:28:54.933347Z", "completed_at": "2023-11-06T15:28:54.933351Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02414989471435547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.intercom_source.stg_intercom__company_tag_history_tmp", "compiled": true, "compiled_code": "--To disable this model, set the intercom__using_company_tags variable within your dbt_project.yml file to False.\n\n\nselect * \nfrom \"postgres\".\"intercom_source_integration_tests\".\"company_tag_history_data\"", "relation_name": "\"postgres\".\"intercom_source_integration_tests_stg_intercom\".\"stg_intercom__company_tag_history_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T15:28:54.925891Z", "completed_at": "2023-11-06T15:28:54.931197Z"}, {"name": "execute", "started_at": "2023-11-06T15:28:54.934187Z", "completed_at": "2023-11-06T15:28:54.934191Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024631023406982422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.intercom_source.stg_intercom__contact_company_history_tmp", "compiled": true, "compiled_code": "--To disable this model, set the intercom__using_contact_company variable within your dbt_project.yml file to False.\n\n\nselect * \nfrom \"postgres\".\"intercom_source_integration_tests\".\"contact_company_history_data\"", "relation_name": "\"postgres\".\"intercom_source_integration_tests_stg_intercom\".\"stg_intercom__contact_company_history_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T15:28:54.939962Z", "completed_at": "2023-11-06T15:28:54.951984Z"}, {"name": "execute", "started_at": "2023-11-06T15:28:54.953976Z", "completed_at": "2023-11-06T15:28:54.953986Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.018696308135986328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.intercom_source.stg_intercom__contact_history_tmp", "compiled": true, "compiled_code": "select * \nfrom \"postgres\".\"intercom_source_integration_tests\".\"contact_history_data\"", "relation_name": "\"postgres\".\"intercom_source_integration_tests_stg_intercom\".\"stg_intercom__contact_history_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T15:28:54.943593Z", "completed_at": "2023-11-06T15:28:54.952515Z"}, {"name": "execute", "started_at": "2023-11-06T15:28:54.954811Z", "completed_at": "2023-11-06T15:28:54.954815Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.018653154373168945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.intercom_source.stg_intercom__contact_tag_history_tmp", "compiled": true, "compiled_code": "--To disable this model, set the intercom__using_contact_tags variable within your dbt_project.yml file to False.\n\n\nselect * \nfrom \"postgres\".\"intercom_source_integration_tests\".\"contact_tag_history_data\"", "relation_name": "\"postgres\".\"intercom_source_integration_tests_stg_intercom\".\"stg_intercom__contact_tag_history_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T15:28:54.946832Z", "completed_at": "2023-11-06T15:28:54.953337Z"}, {"name": "execute", "started_at": "2023-11-06T15:28:54.955962Z", "completed_at": "2023-11-06T15:28:54.955965Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.018649816513061523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.intercom_source.stg_intercom__conversation_contact_history_tmp", "compiled": true, "compiled_code": "select * \nfrom \"postgres\".\"intercom_source_integration_tests\".\"conversation_contact_history_data\"", "relation_name": "\"postgres\".\"intercom_source_integration_tests_stg_intercom\".\"stg_intercom__conversation_contact_history_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T15:28:54.949662Z", "completed_at": "2023-11-06T15:28:54.954286Z"}, {"name": "execute", "started_at": "2023-11-06T15:28:54.957012Z", "completed_at": "2023-11-06T15:28:54.957015Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.019164085388183594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.intercom_source.stg_intercom__conversation_history_tmp", "compiled": true, "compiled_code": "select * \nfrom \"postgres\".\"intercom_source_integration_tests\".\"conversation_history_data\"", "relation_name": "\"postgres\".\"intercom_source_integration_tests_stg_intercom\".\"stg_intercom__conversation_history_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T15:28:54.960877Z", "completed_at": "2023-11-06T15:28:54.970412Z"}, {"name": "execute", "started_at": "2023-11-06T15:28:54.973210Z", "completed_at": "2023-11-06T15:28:54.973218Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.016336917877197266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.intercom_source.stg_intercom__conversation_part_history_tmp", "compiled": true, "compiled_code": "select * \nfrom \"postgres\".\"intercom_source_integration_tests\".\"conversation_part_history_data\"", "relation_name": "\"postgres\".\"intercom_source_integration_tests_stg_intercom\".\"stg_intercom__conversation_part_history_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T15:28:54.970813Z", "completed_at": "2023-11-06T15:28:54.971941Z"}, {"name": "execute", "started_at": "2023-11-06T15:28:54.974019Z", "completed_at": "2023-11-06T15:28:54.974024Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.011887073516845703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.intercom_source_integration_tests.admin_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T15:28:54.964336Z", "completed_at": "2023-11-06T15:28:54.972650Z"}, {"name": "execute", "started_at": "2023-11-06T15:28:54.975039Z", "completed_at": "2023-11-06T15:28:54.975042Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.017174959182739258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.intercom_source.stg_intercom__conversation_tag_history_tmp", "compiled": true, "compiled_code": "--To disable this model, set the intercom__using_conversation_tags variable within your dbt_project.yml file to False.\n\n\nselect * \nfrom \"postgres\".\"intercom_source_integration_tests\".\"conversation_tag_history_data\"", "relation_name": "\"postgres\".\"intercom_source_integration_tests_stg_intercom\".\"stg_intercom__conversation_tag_history_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T15:28:54.968073Z", "completed_at": "2023-11-06T15:28:54.973510Z"}, {"name": "execute", "started_at": "2023-11-06T15:28:54.976095Z", "completed_at": "2023-11-06T15:28:54.976099Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01744699478149414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.intercom_source.stg_intercom__tag_tmp", "compiled": true, "compiled_code": "select * \nfrom \"postgres\".\"intercom_source_integration_tests\".\"tag_data\"", "relation_name": "\"postgres\".\"intercom_source_integration_tests_stg_intercom\".\"stg_intercom__tag_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T15:28:54.980317Z", "completed_at": "2023-11-06T15:28:54.981502Z"}, {"name": "execute", "started_at": "2023-11-06T15:28:54.985679Z", "completed_at": "2023-11-06T15:28:54.985685Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011656045913696289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.intercom_source_integration_tests.company_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T15:28:54.982539Z", "completed_at": "2023-11-06T15:28:54.983520Z"}, {"name": "execute", "started_at": "2023-11-06T15:28:54.988360Z", "completed_at": "2023-11-06T15:28:54.988365Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01126718521118164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.intercom_source_integration_tests.company_tag_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T15:28:54.984267Z", "completed_at": "2023-11-06T15:28:54.985150Z"}, {"name": "execute", "started_at": "2023-11-06T15:28:54.989350Z", "completed_at": "2023-11-06T15:28:54.989353Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.011401176452636719, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.intercom_source_integration_tests.contact_company_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T15:28:54.985944Z", "completed_at": "2023-11-06T15:28:54.987726Z"}, {"name": "execute", "started_at": "2023-11-06T15:28:54.990410Z", "completed_at": "2023-11-06T15:28:54.990420Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.010338068008422852, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.intercom_source_integration_tests.contact_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T15:28:54.994273Z", "completed_at": "2023-11-06T15:28:54.995459Z"}, {"name": "execute", "started_at": "2023-11-06T15:28:54.999680Z", "completed_at": "2023-11-06T15:28:54.999685Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010071039199829102, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.intercom_source_integration_tests.contact_tag_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T15:28:54.996633Z", "completed_at": "2023-11-06T15:28:54.997618Z"}, {"name": "execute", "started_at": "2023-11-06T15:28:55.001238Z", "completed_at": "2023-11-06T15:28:55.001241Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.009872198104858398, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.intercom_source_integration_tests.conversation_contact_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T15:28:54.998339Z", "completed_at": "2023-11-06T15:28:54.999192Z"}, {"name": "execute", "started_at": "2023-11-06T15:28:55.002197Z", "completed_at": "2023-11-06T15:28:55.002199Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.010341882705688477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.intercom_source_integration_tests.conversation_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T15:28:54.999925Z", "completed_at": "2023-11-06T15:28:55.000748Z"}, {"name": "execute", "started_at": "2023-11-06T15:28:55.003347Z", "completed_at": "2023-11-06T15:28:55.003356Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.009431123733520508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.intercom_source_integration_tests.conversation_part_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T15:28:55.007477Z", "completed_at": "2023-11-06T15:28:55.008602Z"}, {"name": "execute", "started_at": "2023-11-06T15:28:55.013646Z", "completed_at": "2023-11-06T15:28:55.013651Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010938167572021484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.intercom_source_integration_tests.conversation_tag_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T15:28:55.009558Z", "completed_at": "2023-11-06T15:28:55.011521Z"}, {"name": "execute", "started_at": "2023-11-06T15:28:55.015232Z", "completed_at": "2023-11-06T15:28:55.015235Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.010703802108764648, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.intercom_source_integration_tests.tag_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T15:28:55.012276Z", "completed_at": "2023-11-06T15:28:55.013154Z"}, {"name": "execute", "started_at": "2023-11-06T15:28:55.016175Z", "completed_at": "2023-11-06T15:28:55.016178Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.011108875274658203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.intercom_source_integration_tests.team_admin_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T15:28:55.013901Z", "completed_at": "2023-11-06T15:28:55.014748Z"}, {"name": "execute", "started_at": "2023-11-06T15:28:55.017208Z", "completed_at": "2023-11-06T15:28:55.017218Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01014399528503418, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.intercom_source_integration_tests.team_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T15:28:55.034374Z", "completed_at": "2023-11-06T15:28:55.368769Z"}, {"name": "execute", "started_at": "2023-11-06T15:28:55.380946Z", "completed_at": "2023-11-06T15:28:55.380956Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.3860478401184082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.intercom_source.stg_intercom__company_tag_history", "compiled": true, "compiled_code": "--To disable this model, set the intercom__using_company_tags variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from \"postgres\".\"intercom_source_integration_tests_stg_intercom\".\"stg_intercom__company_tag_history_tmp\"\n\n),\n\nfields as (\n\n    select\n    /*\n    The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n    that are expected/needed (staging_columns from dbt_intercom_source/models/tmp/) and compares it with columns \n    in the source (source_columns from dbt_intercom_source/macros/).\n    For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n    */\n        \n    \n    \n    _fivetran_active\n    \n as \n    \n    _fivetran_active\n    \n, \n    \n    \n    _fivetran_start\n    \n as \n    \n    _fivetran_start\n    \n, \n    \n    \n    _fivetran_end\n    \n as \n    \n    _fivetran_end\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    company_id\n    \n as \n    \n    company_id\n    \n, \n    \n    \n    company_updated_at\n    \n as \n    \n    company_updated_at\n    \n, \n    \n    \n    tag_id\n    \n as \n    \n    tag_id\n    \n\n\n   \n    from base\n),\n\nfinal as (\n    \n    select \n        company_id,\n        cast(company_updated_at as timestamp) as company_updated_at,\n        tag_id,\n        _fivetran_active,\n        _fivetran_start,\n        _fivetran_end\n    from fields\n)\n\nselect * \nfrom final\nwhere coalesce(_fivetran_active, true)", "relation_name": "\"postgres\".\"intercom_source_integration_tests_stg_intercom\".\"stg_intercom__company_tag_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T15:28:55.028787Z", "completed_at": "2023-11-06T15:28:55.381281Z"}, {"name": "execute", "started_at": "2023-11-06T15:28:55.383146Z", "completed_at": "2023-11-06T15:28:55.383149Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.3941819667816162, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.intercom_source.stg_intercom__company_history", "compiled": true, "compiled_code": "--To disable this model, set the intercom__using_contact_company variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from \"postgres\".\"intercom_source_integration_tests_stg_intercom\".\"stg_intercom__company_history_tmp\"\n\n),\n\nfields as (\n\n    select\n    /*\n    The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n    that are expected/needed (staging_columns from dbt_intercom_source/models/tmp/) and compares it with columns \n    in the source (source_columns from dbt_intercom_source/macros/).\n    For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n    */\n\n        \n    \n    \n    _fivetran_active\n    \n as \n    \n    _fivetran_active\n    \n, \n    \n    \n    _fivetran_start\n    \n as \n    \n    _fivetran_start\n    \n, \n    \n    \n    _fivetran_end\n    \n as \n    \n    _fivetran_end\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    industry\n    \n as \n    \n    industry\n    \n, \n    \n    \n    monthly_spend\n    \n as \n    \n    monthly_spend\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    plan_id\n    \n as \n    \n    plan_id\n    \n, \n    \n    \n    plan_name\n    \n as \n    \n    plan_name\n    \n, \n    \n    \n    session_count\n    \n as \n    \n    session_count\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    user_count\n    \n as \n    \n    user_count\n    \n, \n    \n    \n    website\n    \n as \n    \n    website\n    \n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        id as company_id,\n        name as company_name,\n        website,\n        industry,\n        cast(created_at as timestamp) as created_at,\n        cast(updated_at as timestamp) as updated_at,\n        user_count,\n        session_count,\n        monthly_spend,\n        plan_id,\n        plan_name,\n        _fivetran_active,\n        _fivetran_start,\n        _fivetran_end\n\n        --The below script allows for pass through columns.\n        \n\n\n\n\n    from fields\n)\n\nselect * \nfrom final\nwhere coalesce(_fivetran_active, true)", "relation_name": "\"postgres\".\"intercom_source_integration_tests_stg_intercom\".\"stg_intercom__company_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T15:28:55.021702Z", "completed_at": "2023-11-06T15:28:55.381863Z"}, {"name": "execute", "started_at": "2023-11-06T15:28:55.383644Z", "completed_at": "2023-11-06T15:28:55.383647Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.39793992042541504, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.intercom_source.stg_intercom__admin", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"intercom_source_integration_tests_stg_intercom\".\"stg_intercom__admin_tmp\"\n\n),\n\nfields as (\n\n    select\n    /*\n    The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n    that are expected/needed (staging_columns from dbt_intercom_source/models/tmp/) and compares it with columns \n    in the source (source_columns from dbt_intercom_source/macros/).\n    For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n    */\n    \n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    job_title\n    \n as \n    \n    job_title\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        cast(id as TEXT) as admin_id, \n        name,\n        job_title,\n        _fivetran_deleted \n    from fields \n)\n\nselect * \nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"intercom_source_integration_tests_stg_intercom\".\"stg_intercom__admin\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T15:28:55.039239Z", "completed_at": "2023-11-06T15:28:55.380578Z"}, {"name": "execute", "started_at": "2023-11-06T15:28:55.382629Z", "completed_at": "2023-11-06T15:28:55.382633Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.3888273239135742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.intercom_source.stg_intercom__contact_company_history", "compiled": true, "compiled_code": "--To disable this model, set the intercom__using_contact_company variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from \"postgres\".\"intercom_source_integration_tests_stg_intercom\".\"stg_intercom__contact_company_history_tmp\"\n\n),\n\nfields as (\n\n    select\n    /*\n    The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n    that are expected/needed (staging_columns from dbt_intercom_source/models/tmp/) and compares it with columns \n    in the source (source_columns from dbt_intercom_source/macros/).\n    For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n    */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    _fivetran_active\n    \n as \n    \n    _fivetran_active\n    \n, \n    \n    \n    _fivetran_start\n    \n as \n    \n    _fivetran_start\n    \n, \n    \n    \n    _fivetran_end\n    \n as \n    \n    _fivetran_end\n    \n, \n    \n    \n    company_id\n    \n as \n    \n    company_id\n    \n, \n    \n    \n    contact_id\n    \n as \n    \n    contact_id\n    \n, \n    \n    \n    contact_updated_at\n    \n as \n    \n    contact_updated_at\n    \n\n\n   \n    from base\n),\n\nfinal as (\n    \n    select \n        company_id,\n        contact_id,\n        cast(contact_updated_at as timestamp) as contact_updated_at,\n        _fivetran_active,\n        _fivetran_start,\n        _fivetran_end\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"intercom_source_integration_tests_stg_intercom\".\"stg_intercom__contact_company_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T15:28:55.408667Z", "completed_at": "2023-11-06T15:28:55.663980Z"}, {"name": "execute", "started_at": "2023-11-06T15:28:55.664803Z", "completed_at": "2023-11-06T15:28:55.664815Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.2816319465637207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.intercom_source.stg_intercom__contact_history", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"intercom_source_integration_tests_stg_intercom\".\"stg_intercom__contact_history_tmp\"\n\n),\n\nfields as (\n\n    select\n    /*\n    The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n    that are expected/needed (staging_columns from dbt_intercom_source/models/tmp/) and compares it with columns \n    in the source (source_columns from dbt_intercom_source/macros/).\n    For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n    */\n    \n        \n    \n    \n    _fivetran_active\n    \n as \n    \n    _fivetran_active\n    \n, \n    \n    \n    _fivetran_start\n    \n as \n    \n    _fivetran_start\n    \n, \n    \n    \n    _fivetran_end\n    \n as \n    \n    _fivetran_end\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    admin_id\n    \n as \n    \n    admin_id\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    last_contacted_at\n    \n as \n    \n    last_contacted_at\n    \n, \n    \n    \n    last_email_clicked_at\n    \n as \n    \n    last_email_clicked_at\n    \n, \n    \n    \n    last_email_opened_at\n    \n as \n    \n    last_email_opened_at\n    \n, \n    \n    \n    last_replied_at\n    \n as \n    \n    last_replied_at\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    role\n    \n as \n    \n    role\n    \n, \n    \n    \n    signed_up_at\n    \n as \n    \n    signed_up_at\n    \n, \n    \n    \n    unsubscribed_from_emails\n    \n as \n    \n    unsubscribed_from_emails\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        id as contact_id,\n        admin_id,\n        cast(created_at as timestamp) as created_at,\n        cast(updated_at as timestamp) as updated_at,\n        cast(signed_up_at as timestamp) as signed_up_at,\n        name as contact_name, \n        role as contact_role,\n        email as contact_email,\n        cast(last_replied_at as timestamp) as last_replied_at,\n        cast(last_email_clicked_at as timestamp) as last_email_clicked_at,\n        cast(last_email_opened_at as timestamp) as last_email_opened_at,\n        cast(last_contacted_at as timestamp) as last_contacted_at,\n        unsubscribed_from_emails as is_unsubscribed_from_emails,\n        _fivetran_active,\n        _fivetran_start,\n        _fivetran_end\n\n        --The below script allows for pass through columns.\n        \n\n\n\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"intercom_source_integration_tests_stg_intercom\".\"stg_intercom__contact_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T15:28:55.429790Z", "completed_at": "2023-11-06T15:28:55.683925Z"}, {"name": "execute", "started_at": "2023-11-06T15:28:55.684533Z", "completed_at": "2023-11-06T15:28:55.684539Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.295975923538208, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.intercom_source.stg_intercom__conversation_history", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"intercom_source_integration_tests_stg_intercom\".\"stg_intercom__conversation_history_tmp\"\n\n),\n\nfields as (\n\n    select\n    /*\n    The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n    that are expected/needed (staging_columns from dbt_intercom_source/models/tmp/) and compares it with columns \n    in the source (source_columns from dbt_intercom_source/macros/).\n    For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n    */\n\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    _fivetran_active\n    \n as \n    \n    _fivetran_active\n    \n, \n    \n    \n    _fivetran_start\n    \n as \n    \n    _fivetran_start\n    \n, \n    \n    \n    _fivetran_end\n    \n as \n    \n    _fivetran_end\n    \n, \n    \n    \n    assignee_id\n    \n as \n    \n    assignee_id\n    \n, \n    \n    \n    assignee_type\n    \n as \n    \n    assignee_type\n    \n, \n    \n    \n    conversation_rating_remark\n    \n as \n    \n    conversation_rating_remark\n    \n, \n    \n    \n    conversation_rating_value\n    \n as \n    \n    conversation_rating_value\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    first_contact_reply_created_at\n    \n as \n    \n    first_contact_reply_created_at\n    \n, \n    \n    \n    first_contact_reply_type\n    \n as \n    \n    first_contact_reply_type\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    read\n    \n as \n    \n    read\n    \n, \n    \n    \n    sla_name\n    \n as \n    \n    sla_name\n    \n, \n    \n    \n    sla_status\n    \n as \n    \n    sla_status\n    \n, \n    \n    \n    snoozed_until\n    \n as \n    \n    snoozed_until\n    \n, \n    \n    \n    source_author_id\n    \n as \n    \n    source_author_id\n    \n, \n    \n    \n    source_author_type\n    \n as \n    \n    source_author_type\n    \n, \n    \n    \n    source_body\n    \n as \n    \n    source_body\n    \n, \n    \n    \n    source_delivered_as\n    \n as \n    \n    source_delivered_as\n    \n, \n    \n    \n    source_subject\n    \n as \n    \n    source_subject\n    \n, \n    \n    \n    source_type\n    \n as \n    \n    source_type\n    \n, \n    \n    \n    state\n    \n as \n    \n    state\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    waiting_since\n    \n as \n    \n    waiting_since\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        id as conversation_id,\n        cast(created_at as timestamp) as created_at,\n        assignee_id,\n        assignee_type,\n        conversation_rating_value,\n        conversation_rating_remark,\n        cast(first_contact_reply_created_at as timestamp) as first_contact_reply_created_at,\n        first_contact_reply_type,\n        read as is_read,\n        source_author_id,\n        source_author_type,\n        source_delivered_as,\n        source_type,\n        source_subject,\n        state,\n        cast(updated_at as timestamp) as updated_at,\n        cast(waiting_since as timestamp) as waiting_since,\n        cast(snoozed_until as timestamp) as snoozed_until,\n        sla_name,\n        sla_status,\n        _fivetran_active,\n        _fivetran_start,\n        _fivetran_end\n\n        --The below script allows for pass through columns.\n        \n\n\n\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"intercom_source_integration_tests_stg_intercom\".\"stg_intercom__conversation_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T15:28:55.419548Z", "completed_at": "2023-11-06T15:28:55.714431Z"}, {"name": "execute", "started_at": "2023-11-06T15:28:55.716620Z", "completed_at": "2023-11-06T15:28:55.716624Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.331787109375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.intercom_source.stg_intercom__contact_tag_history", "compiled": true, "compiled_code": "--To disable this model, set the intercom__using_contact_tags variable within your dbt_project.yml file to False. \n\n\nwith base as (\n\n    select * \n    from \"postgres\".\"intercom_source_integration_tests_stg_intercom\".\"stg_intercom__contact_tag_history_tmp\"\n\n),\n\nfields as (\n\n    select\n    /*\n    The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n    that are expected/needed (staging_columns from dbt_intercom_source/models/tmp/) and compares it with columns \n    in the source (source_columns from dbt_intercom_source/macros/).\n    For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n    */\n\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    _fivetran_active\n    \n as \n    \n    _fivetran_active\n    \n, \n    \n    \n    _fivetran_start\n    \n as \n    \n    _fivetran_start\n    \n, \n    \n    \n    _fivetran_end\n    \n as \n    \n    _fivetran_end\n    \n, \n    \n    \n    contact_id\n    \n as \n    \n    contact_id\n    \n, \n    \n    \n    contact_updated_at\n    \n as \n    \n    contact_updated_at\n    \n, \n    \n    \n    tag_id\n    \n as \n    \n    tag_id\n    \n\n\n \n    from base\n),\n\nfinal as (\n    \n    select \n        contact_id,\n        cast(contact_updated_at as timestamp) as contact_updated_at,\n        tag_id,\n        _fivetran_active,\n        _fivetran_start,\n        _fivetran_end\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"intercom_source_integration_tests_stg_intercom\".\"stg_intercom__contact_tag_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T15:28:55.425520Z", "completed_at": "2023-11-06T15:28:55.713816Z"}, {"name": "execute", "started_at": "2023-11-06T15:28:55.715390Z", "completed_at": "2023-11-06T15:28:55.715394Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.3369271755218506, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.intercom_source.stg_intercom__conversation_contact_history", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"intercom_source_integration_tests_stg_intercom\".\"stg_intercom__conversation_contact_history_tmp\"\n\n),\n\nfields as (\n\n    select\n    /*\n    The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n    that are expected/needed (staging_columns from dbt_intercom_source/models/tmp/) and compares it with columns \n    in the source (source_columns from dbt_intercom_source/macros/).\n    For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n    */\n    \n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    _fivetran_active\n    \n as \n    \n    _fivetran_active\n    \n, \n    \n    \n    _fivetran_start\n    \n as \n    \n    _fivetran_start\n    \n, \n    \n    \n    _fivetran_end\n    \n as \n    \n    _fivetran_end\n    \n, \n    \n    \n    contact_id\n    \n as \n    \n    contact_id\n    \n, \n    \n    \n    conversation_id\n    \n as \n    \n    conversation_id\n    \n, \n    \n    \n    conversation_updated_at\n    \n as \n    \n    conversation_updated_at\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        contact_id,\n        conversation_id,\n        cast(conversation_updated_at as timestamp) as conversation_updated_at,\n        _fivetran_active,\n        _fivetran_start,\n        _fivetran_end\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"intercom_source_integration_tests_stg_intercom\".\"stg_intercom__conversation_contact_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T15:28:55.757257Z", "completed_at": "2023-11-06T15:28:55.764896Z"}, {"name": "execute", "started_at": "2023-11-06T15:28:55.765428Z", "completed_at": "2023-11-06T15:28:55.765435Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009416341781616211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.intercom_source.not_null_stg_intercom__company_tag_history_company_id.7ce26b3077", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect company_id\nfrom \"postgres\".\"intercom_source_integration_tests_stg_intercom\".\"stg_intercom__company_tag_history\"\nwhere company_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T15:28:55.767112Z", "completed_at": "2023-11-06T15:28:55.770029Z"}, {"name": "execute", "started_at": "2023-11-06T15:28:55.770589Z", "completed_at": "2023-11-06T15:28:55.770596Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004636287689208984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.intercom_source.not_null_stg_intercom__company_tag_history_tag_id.a71b043180", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect tag_id\nfrom \"postgres\".\"intercom_source_integration_tests_stg_intercom\".\"stg_intercom__company_tag_history\"\nwhere tag_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T15:28:55.772436Z", "completed_at": "2023-11-06T15:28:55.776137Z"}, {"name": "execute", "started_at": "2023-11-06T15:28:55.776652Z", "completed_at": "2023-11-06T15:28:55.776657Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005413055419921875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.intercom_source.not_null_stg_intercom__company_history_company_id.29e68d8641", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect company_id\nfrom \"postgres\".\"intercom_source_integration_tests_stg_intercom\".\"stg_intercom__company_history\"\nwhere company_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T15:28:55.778694Z", "completed_at": "2023-11-06T15:28:55.782205Z"}, {"name": "execute", "started_at": "2023-11-06T15:28:55.782739Z", "completed_at": "2023-11-06T15:28:55.782745Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0052187442779541016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.intercom_source.not_null_stg_intercom__admin_admin_id.8630313ad7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect admin_id\nfrom \"postgres\".\"intercom_source_integration_tests_stg_intercom\".\"stg_intercom__admin\"\nwhere admin_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T15:28:55.784410Z", "completed_at": "2023-11-06T15:28:55.788568Z"}, {"name": "execute", "started_at": "2023-11-06T15:28:55.789299Z", "completed_at": "2023-11-06T15:28:55.789307Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005978822708129883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.intercom_source.unique_stg_intercom__admin_admin_id.10ac4663c1", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    admin_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"intercom_source_integration_tests_stg_intercom\".\"stg_intercom__admin\"\nwhere admin_id is not null\ngroup by admin_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T15:28:55.791303Z", "completed_at": "2023-11-06T15:28:55.794629Z"}, {"name": "execute", "started_at": "2023-11-06T15:28:55.795365Z", "completed_at": "2023-11-06T15:28:55.795371Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005388975143432617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.intercom_source.not_null_stg_intercom__contact_company_history_company_id.ba3e617037", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect company_id\nfrom \"postgres\".\"intercom_source_integration_tests_stg_intercom\".\"stg_intercom__contact_company_history\"\nwhere company_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T15:28:55.797460Z", "completed_at": "2023-11-06T15:28:55.800613Z"}, {"name": "execute", "started_at": "2023-11-06T15:28:55.801164Z", "completed_at": "2023-11-06T15:28:55.801170Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0049860477447509766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.intercom_source.not_null_stg_intercom__contact_company_history_contact_id.5e389a0d84", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contact_id\nfrom \"postgres\".\"intercom_source_integration_tests_stg_intercom\".\"stg_intercom__contact_company_history\"\nwhere contact_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T15:28:55.802986Z", "completed_at": "2023-11-06T15:28:55.807037Z"}, {"name": "execute", "started_at": "2023-11-06T15:28:55.807562Z", "completed_at": "2023-11-06T15:28:55.807568Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005647182464599609, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.intercom_source.not_null_stg_intercom__contact_history_contact_id.433f831acf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contact_id\nfrom \"postgres\".\"intercom_source_integration_tests_stg_intercom\".\"stg_intercom__contact_history\"\nwhere contact_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T15:28:55.809472Z", "completed_at": "2023-11-06T15:28:55.812704Z"}, {"name": "execute", "started_at": "2023-11-06T15:28:55.813216Z", "completed_at": "2023-11-06T15:28:55.813221Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004896879196166992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.intercom_source.not_null_stg_intercom__conversation_history_conversation_id.947be5d87e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect conversation_id\nfrom \"postgres\".\"intercom_source_integration_tests_stg_intercom\".\"stg_intercom__conversation_history\"\nwhere conversation_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T15:28:55.815111Z", "completed_at": "2023-11-06T15:28:55.818255Z"}, {"name": "execute", "started_at": "2023-11-06T15:28:55.818783Z", "completed_at": "2023-11-06T15:28:55.818789Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004906177520751953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.intercom_source.not_null_stg_intercom__contact_tag_history_contact_id.80f3693f49", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contact_id\nfrom \"postgres\".\"intercom_source_integration_tests_stg_intercom\".\"stg_intercom__contact_tag_history\"\nwhere contact_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T15:28:55.820726Z", "completed_at": "2023-11-06T15:28:55.823945Z"}, {"name": "execute", "started_at": "2023-11-06T15:28:55.824474Z", "completed_at": "2023-11-06T15:28:55.824481Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004950046539306641, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.intercom_source.not_null_stg_intercom__contact_tag_history_tag_id.24a4c9df63", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect tag_id\nfrom \"postgres\".\"intercom_source_integration_tests_stg_intercom\".\"stg_intercom__contact_tag_history\"\nwhere tag_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T15:28:55.826205Z", "completed_at": "2023-11-06T15:28:55.829218Z"}, {"name": "execute", "started_at": "2023-11-06T15:28:55.829704Z", "completed_at": "2023-11-06T15:28:55.829711Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004584074020385742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.intercom_source.not_null_stg_intercom__conversation_contact_history_contact_id.faa2dd69f0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contact_id\nfrom \"postgres\".\"intercom_source_integration_tests_stg_intercom\".\"stg_intercom__conversation_contact_history\"\nwhere contact_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T15:28:55.831537Z", "completed_at": "2023-11-06T15:28:55.835654Z"}, {"name": "execute", "started_at": "2023-11-06T15:28:55.836262Z", "completed_at": "2023-11-06T15:28:55.836269Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005957841873168945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.intercom_source.not_null_stg_intercom__conversation_contact_history_conversation_id.6619b609cf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect conversation_id\nfrom \"postgres\".\"intercom_source_integration_tests_stg_intercom\".\"stg_intercom__conversation_contact_history\"\nwhere conversation_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T15:28:55.690903Z", "completed_at": "2023-11-06T15:28:55.965359Z"}, {"name": "execute", "started_at": "2023-11-06T15:28:55.965966Z", "completed_at": "2023-11-06T15:28:55.965973Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.30954980850219727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.intercom_source.stg_intercom__conversation_part_history", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"intercom_source_integration_tests_stg_intercom\".\"stg_intercom__conversation_part_history_tmp\"\n\n),\n\nfields as (\n\n    select\n    /*\n    The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n    that are expected/needed (staging_columns from dbt_intercom_source/models/tmp/) and compares it with columns \n    in the source (source_columns from dbt_intercom_source/macros/).\n    For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n    */\n\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    _fivetran_active\n    \n as \n    \n    _fivetran_active\n    \n, \n    \n    \n    _fivetran_start\n    \n as \n    \n    _fivetran_start\n    \n, \n    \n    \n    _fivetran_end\n    \n as \n    \n    _fivetran_end\n    \n, \n    \n    \n    assigned_to_id\n    \n as \n    \n    assigned_to_id\n    \n, \n    \n    \n    assigned_to_type\n    \n as \n    \n    assigned_to_type\n    \n, \n    \n    \n    author_id\n    \n as \n    \n    author_id\n    \n, \n    \n    \n    body\n    \n as \n    \n    body\n    \n, \n    \n    \n    author_type\n    \n as \n    \n    author_type\n    \n, \n    \n    \n    conversation_id\n    \n as \n    \n    conversation_id\n    \n, \n    \n    \n    conversation_updated_at\n    \n as \n    \n    conversation_updated_at\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    part_type\n    \n as \n    \n    part_type\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n\n\n       \n    from base\n),\n\nfinal as (\n    \n    select \n        id as conversation_part_id,\n        part_type,\n        body,\n        conversation_id,\n        author_id,\n        author_type,\n        cast(created_at as timestamp) as created_at,\n        assigned_to_id,\n        assigned_to_type,\n        cast(conversation_updated_at as timestamp) as conversation_updated_at,\n        cast(updated_at as timestamp) as updated_at,\n        _fivetran_active,\n        _fivetran_start,\n        _fivetran_end\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"intercom_source_integration_tests_stg_intercom\".\"stg_intercom__conversation_part_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T15:28:56.008208Z", "completed_at": "2023-11-06T15:28:56.016037Z"}, {"name": "execute", "started_at": "2023-11-06T15:28:56.017188Z", "completed_at": "2023-11-06T15:28:56.017191Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.012051105499267578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.intercom_source.not_null_stg_intercom__conversation_part_history_conversation_part_id.53df1b68d4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect conversation_part_id\nfrom \"postgres\".\"intercom_source_integration_tests_stg_intercom\".\"stg_intercom__conversation_part_history\"\nwhere conversation_part_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T15:28:56.011665Z", "completed_at": "2023-11-06T15:28:56.016305Z"}, {"name": "execute", "started_at": "2023-11-06T15:28:56.017463Z", "completed_at": "2023-11-06T15:28:56.017465Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.011960029602050781, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.intercom_source.not_null_stg_intercom__conversation_part_history_created_at.7f5a7ff8d7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect created_at\nfrom \"postgres\".\"intercom_source_integration_tests_stg_intercom\".\"stg_intercom__conversation_part_history\"\nwhere created_at is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T15:28:55.717828Z", "completed_at": "2023-11-06T15:28:55.999156Z"}, {"name": "execute", "started_at": "2023-11-06T15:28:56.005333Z", "completed_at": "2023-11-06T15:28:56.005350Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.3183319568634033, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.intercom_source.stg_intercom__conversation_tag_history", "compiled": true, "compiled_code": "--To disable this model, set the intercom__using_conversation_tags variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from \"postgres\".\"intercom_source_integration_tests_stg_intercom\".\"stg_intercom__conversation_tag_history_tmp\"\n\n),\n\nfields as (\n\n    select\n    /*\n    The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n    that are expected/needed (staging_columns from dbt_intercom_source/models/tmp/) and compares it with columns \n    in the source (source_columns from dbt_intercom_source/macros/).\n    For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n    */\n\n        \n    \n    \n    _fivetran_active\n    \n as \n    \n    _fivetran_active\n    \n, \n    \n    \n    _fivetran_start\n    \n as \n    \n    _fivetran_start\n    \n, \n    \n    \n    _fivetran_end\n    \n as \n    \n    _fivetran_end\n    \n, \n    \n    \n    conversation_id\n    \n as \n    \n    conversation_id\n    \n, \n    \n    \n    conversation_updated_at\n    \n as \n    \n    conversation_updated_at\n    \n, \n    \n    \n    tag_id\n    \n as \n    \n    tag_id\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        conversation_id,\n        tag_id,\n        _fivetran_active,\n        _fivetran_start,\n        _fivetran_end\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"intercom_source_integration_tests_stg_intercom\".\"stg_intercom__conversation_tag_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T15:28:55.750334Z", "completed_at": "2023-11-06T15:28:56.007938Z"}, {"name": "execute", "started_at": "2023-11-06T15:28:56.015309Z", "completed_at": "2023-11-06T15:28:56.015321Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.2958791255950928, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.intercom_source.stg_intercom__tag", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"intercom_source_integration_tests_stg_intercom\".\"stg_intercom__tag_tmp\"\n\n),\n\nfields as (\n\n    select\n    /*\n    The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n    that are expected/needed (staging_columns from dbt_intercom_source/models/tmp/) and compares it with columns \n    in the source (source_columns from dbt_intercom_source/macros/).\n    For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n    */\n\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        id as tag_id,\n        trim(name) as name,\n        _fivetran_deleted\n    from fields\n)\n\nselect *\nfrom final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"intercom_source_integration_tests_stg_intercom\".\"stg_intercom__tag\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T15:28:56.037949Z", "completed_at": "2023-11-06T15:28:56.046223Z"}, {"name": "execute", "started_at": "2023-11-06T15:28:56.047401Z", "completed_at": "2023-11-06T15:28:56.047407Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011794805526733398, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.intercom_source.not_null_stg_intercom__conversation_tag_history_conversation_id.2b897a1922", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect conversation_id\nfrom \"postgres\".\"intercom_source_integration_tests_stg_intercom\".\"stg_intercom__conversation_tag_history\"\nwhere conversation_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-06T15:28:56.041497Z", "completed_at": "2023-11-06T15:28:56.046567Z"}, {"name": "execute", "started_at": "2023-11-06T15:28:56.047687Z", "completed_at": "2023-11-06T15:28:56.047690Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.011860132217407227, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.intercom_source.not_null_stg_intercom__conversation_tag_history_tag_id.11ffc3e16e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect tag_id\nfrom \"postgres\".\"intercom_source_integration_tests_stg_intercom\".\"stg_intercom__conversation_tag_history\"\nwhere tag_id is null\n\n\n", "relation_name": null}], "elapsed_time": 2.1375062465667725, "args": {"introspect": true, "log_level_file": "debug", "print": true, "strict_mode": false, "partial_parse_file_diff": true, "macro_debugging": false, "send_anonymous_usage_stats": true, "cache_selected_only": false, "static": false, "profiles_dir": "/Users/joseph.markiewicz/.dbt", "log_level": "info", "exclude": [], "defer": false, "invocation_command": "dbt docs generate -t postgres", "use_colors": true, "log_format_file": "debug", "write_json": true, "version_check": true, "partial_parse": true, "show_resource_report": false, "compile": true, "target": "postgres", "populate_cache": true, "empty_catalog": false, "indirect_selection": "eager", "log_path": "/Users/joseph.markiewicz/Documents/dbt_packages/intercom/dbt_intercom_source/integration_tests/logs", "use_colors_file": true, "warn_error_options": {"include": [], "exclude": []}, "printer_width": 80, "quiet": false, "log_format": "default", "project_dir": "/Users/joseph.markiewicz/Documents/dbt_packages/intercom/dbt_intercom_source/integration_tests", "select": [], "static_parser": true, "which": "generate", "log_file_max_bytes": 10485760, "enable_legacy_logger": false, "favor_state": false, "vars": {}}}