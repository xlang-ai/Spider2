# for source packages/pulling from the raw connector data

version: 2

sources:
  - name: jira 
    database: "{% if target.type != 'spark'%}{{ var('jira_database', target.database) }}{% endif %}"
    schema: "{{ var ('jira_schema', 'jira') }}"

    loader: fivetran
    loaded_at_field: _fivetran_synced
      
    freshness:
      warn_after: {count: 72, period: hour}
      error_after: {count: 96, period: hour}

    tables:
      - name: comment
        identifier: "{{ var('jira_comment_identifier', 'comment')}}"
        description: Table of comments made on issues.
        columns:
          - name: id 
            description: Unique ID of the comment.
          - name: author_id
            description: Foreign key referencing the `user` id of the comment's author.
          - name: body
            description: Content of the comment.
          - name: created
            description: Timestamp of when the comment was created.
          - name: is_public
            description: Boolean that is true if the comment is visible to all users.
          - name: issue_id 
            description: Foreign key referencing the id of the `issue` that was commented on.
          - name: update_author_id
            description: Foreign key referencing the id of the `user` who last updated this comment.
          - name: updated 
            description: Timestamp of when the comment was last updated.

      - name: component
        identifier: "{{ var('jira_component_identifier', 'component')}}"
        description: >
          Table of project components (subsections to group issues).
        config:
          enabled: "{{ var('jira_using_components', true) }}"
        columns:
          - name: id
            description: ID of the component.
          - name: description
            description: Description given to the component.
          - name: name
            description: UI-facing name of the component.
          - name: project_id
            description: Foreign key referencing the id of the component's `project`.
        
      - name: field
        identifier: "{{ var('jira_field_identifier', 'field')}}"
        description: Table of all issue fields.
        columns:
          - name: id
            description: >
              Unique ID of the field. Default fields will have descriptive IDs, whereas custom
              field IDs will be `'customfield_#####'`.
          - name: is_array
            description: Boolean that is true if a field can have multiple values (is mulitselect).
          - name: is_custom
            description: >
              Boolean that is true if the field is custom to this organization, and false if 
              it is default to Jira.
          - name: name
            description: Name of the field as it appears on issue cards.

      - name: field_option
        identifier: "{{ var('jira_field_option_identifier', 'field_option')}}"
        description: Table of all options related to custom fields.
        columns:
          - name: id
            description: The ID of the custom field.
          - name: parent_id
            description: The ID of the parent custom field.
          - name: name
            description: Name of the field option.

      - name: issue
        identifier: "{{ var('jira_issue_identifier', 'issue')}}"
        description: Table of all issues in your organization's Jira (captures soft deletes).
        columns:
          - name: id
            description: Unique ID of the issue. 
          - name: _fivetran_deleted
            description: Boolean that is true if the row has been soft-deleted from the source.
          - name: assignee
            description: Foreign key referencing the ID of the `user` currently assigned to this task.
          - name: created
            description: Timestamp of when the issue was created (in UTC).
          - name: creator
            description: Foreign key referencing the `user` who first created the issue. Cannot be changed.
          - name: description
            description: The issue description, if given.
          - name: due_date
            description: Calendar day on which the issue is due, if a due date is provided.
          - name: environment
            description: Text field describing the environment in which the issue occurred (ie "IE9 on Windows 7").
          - name: issue_type
            description: Foreign key referencing the ID of the `issue_type`. 
          - name: key
            description: UI-facing id of the issue.
          - name: last_viewed
            description: Timestamp of when the user who set up the connector last viewed the issue.
          - name: original_estimate
            description: The original estimate of how long working on this issue would take, in seconds.
          - name: parent_id
            description: Self-referencing ID of the parent `issue`. 
          - name: priority
            description: Foreign key referencing the ID of the issue's current `priority`.
          - name: project
            description: Foreign key referencing the ID of the `project` that the issue belongs to.
          - name: remaining_estimate
            description: The estimate of how much longer working on this issue will take, in seconds.
          - name: reporter
            description: >
              Foreign key referencing the ID of the `user` who reported the issue. This differs from the `creator` column 
              in that the reporter can be changed in-app.
          - name: resolution
            description: Foreign key referencing the ID of the issue's type of `resolution`.
          - name: resolved
            description: >
              Timestamp of when the issue was resolved (ie completed, marked as duplicate). If an 
              issue is marked as un-resolved, this is null.
          - name: status
            description: >
              Foreign key referencing the ID of the issue's `status` (the step that the issue is currently at 
              in the project's workflow).
          - name: status_category_changed
            description: Timestamp of when the status was last changed.
          - name: summary
            description: Title of the issue.
          - name: time_spent
            description: The time that was spent working on this issue, in seconds.
          - name: updated
            description: Timestamp of when the issue was last updated in some way.
          - name: work_ratio
            description: >
              The percentage of work that has been logged against the issue (time_spent) vs the original estimate of worktime.
              Equals -1.0 when the fields required for calculation are not provided.

      - name: issue_field_history
        identifier: "{{ var('jira_issue_field_history_identifier', 'issue_field_history')}}"
        description: Table of every value that each **custom non-array** (not multiselect) field has been set to.
        columns:
          - name: field_id
            description: Foreign key referencing the ID of the `field` that was changed.
          - name: issue_id
            description: Foreign key referencing the ID of the `issue` whose field was updated.
          - name: time
            description: Timestamp of when the issue field was set to this value.
          - name: value
            description: Content of the value of that the field was set to.

      - name: issue_link 
        identifier: "{{ var('jira_issue_link_identifier', 'issue_link')}}"
        description: >
          Table of relationships (links) created between issues. Issue links can include blockers, clones/duplicates, and general relationships.
        columns:
          - name: issue_id
            description: Foreign key referencing the ID of the `issue` that is the subject of this relationship (the linker).
          - name: related_issue_id
            description: Foreign key referencing the ID of the `issue` that is the object of this relationship (the linkee).
          - name: relationship
            description: The nature of the link between the two issues ("blocks", "is duplicated by", "relates to", etc.)

      - name: issue_multiselect_history
        identifier: "{{ var('jira_issue_multiselect_history_identifier', 'issue_multiselect_history')}}"
        description: >
          Table of every value that each array-type (multiselect) field has been set to. Each row will pertain to **one** value.
        columns:
          - name: _fivetran_id 
            description: Fivetran-generated ID hashed on field, issue, and value.
          - name: time
            description: Timestamp of when the issue field was updated to included this value.
          - name: field_id
            description: Foreign key referencing the ID of the `field` that was changed.
          - name: issue_id
            description: Foreign key referencing the ID of the `issue` whose field was updated.
          - name: value
            description: Content of the value of that the field was set to. 
        
      - name: issue_type
        identifier: "{{ var('jira_issue_type_identifier', 'issue_type')}}"
        description: >
          Table containing information about issue types. Issue types can have identical names in different projects, but they may have 
          differing descriptions.
        columns:
          - name: id 
            description: Unique ID of the issue type. 
          - name: description
            description: Project-level description given to the issue type.
          - name: name
            description: Name of the issue type (ie Epic, Task, Subtask, any custom types)
          - name: subtask
            description: Boolean that is true if this type of issue is a subtask.

      - name: priority
        identifier: "{{ var('jira_priority_identifier', 'priority')}}"
        description: Table of issue priority levels (global).
        config:
          enabled: "{{ var('jira_using_priorities', true) }}"
        columns:
          - name: id
            description: Unique ID of the priority level.
          - name: description
            description: Description of the priority level.
          - name: name
            description: Name of the priority as it appears in the UI.

      - name: project
        identifier: "{{ var('jira_project_identifier', 'project')}}"
        description: Table of all projects in your organization.
        columns:
          - name: id
            description: Unique ID of the project.
          - name: description
            description: Description of the project, if given.
          - name: key
            description: UI-facing ID of the project. This becomes the default prefix for tasks created within this project.
          - name: lead_id
            description: Foreign key referencing the ID of the `user` who leads this project.
          - name: name
            description: Title of the project. 
          - name: permission_scheme_id
            description: Foreign key referencing the ID of the `permission_scheme` that the project ascribes to. 
          - name: project_category_id
            description: Foreign key referencing the ID of the `project_category` that the project is associated with, if any.
          - name: project_type_key
            description: ID of the type of project (ie 'software').

      - name: resolution
        identifier: "{{ var('jira_resolution_identifier', 'resolution')}}"
        description: Table storing the types of resolutions used by your organization.
        columns: 
          - name: id
            description: Unique ID of the resolution type.
          - name: description
            description: Description given to the resolution.
          - name: name 
            description: Display name of the resolution.

      - name: sprint
        identifier: "{{ var('jira_sprint_identifier', 'sprint')}}"
        config:
          enabled: "{{ var('jira_using_sprints', true) }}"
        description: Table of all sprints.
        columns:
          - name: id
            description: Unique ID of the sprint.
          - name: board_id
            description: Foreign key referencing the ID of the `board` that the sprint lives in.
          - name: complete_date
            description: Timestamp of when the sprint was completed.
          - name: end_date
            description: Timestamp of when the sprint is planned to end.
          - name: name  
            description: Title of the sprint.
          - name: start_date
            description: Timestamp of when the sprint began. 

      - name: status
        identifier: "{{ var('jira_status_identifier', 'status')}}"
        description: Table of project-level statuses (which may have the same umbrella `status_category`).
        columns:
          - name: id
            description: Unique ID of the project status.
          - name: description
            description: >
              Description of the project status. Different projects may all have a status called "Backlog", but their definitions 
              of "backlog" may differ.
          - name: name
            description: Title of the status.
          - name: status_category_id
            description: Foreign key referencing the ID of the `status_category` that this project status falls under.

      - name: status_category
        identifier: "{{ var('jira_status_category_identifier', 'status_category')}}"
        description: Table of overarching status categories.
        columns:
          - name: id
            description: Unique ID of the status category.
          - name: name
            description: Title of the status category.

      - name: user
        identifier: "{{ var('jira_user_identifier', 'user')}}"
        description: Table of users associated with your organization.
        columns:
          - name: id  
            description: Unique ID of the user. 
          - name: email
            description: Email associated with the user account.
          - name: locale
            description: The Java locale of the user. 
          - name: name
            description: Name of the user as it appears in the UI.
          - name: time_zone
            description: The user's timezone, as defined in their settings.
          - name: username
            description: Account username.
      
      - name: version
        identifier: "{{ var('jira_version_identifier', 'version')}}"
        description: Table of project versions in your organization.
        config:
          enabled: "{{ var('jira_using_versions', true) }}"
        columns:
          - name: archived
            description: Boolean that is true if the project version has been archived.
          - name: description
            description: The optional description given to the version.
          - name: id
            description: Unique ID of the version.
          - name: name
            description: Unique name of the version.
          - name: overdue
            description: Boolean that is true if the version is past its optional release date, false if it is not or if it does not have a due date.
          - name: project_id
            description: Foreign key referencing the `PROJECT` to which this version is attached.
          - name: release_date
            description: The optional release date of the version. Expressed in ISO 8601 format (yyyy-mm-dd).
          - name: released
            description: Boolean that is true if the version has been released. If the version is released a request to release again is ignored
          - name: start_date
            description: The start date of the version. Expressed in ISO 8601 format (yyyy-mm-dd).
