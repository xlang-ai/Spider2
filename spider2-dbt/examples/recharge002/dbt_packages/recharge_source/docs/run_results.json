{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.9", "generated_at": "2024-08-19T16:40:58.059643Z", "invocation_id": "bb2350a5-c68e-49ed-bc3b-f2b34306a37e", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:56.004588Z", "completed_at": "2024-08-19T16:40:56.012231Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:56.013761Z", "completed_at": "2024-08-19T16:40:56.013776Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.018502235412597656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.recharge_source.stg_recharge__address_shipping_line_tmp", "compiled": true, "compiled_code": "select *\nfrom `dbt-package-testing`.`recharge_source_integration_tests_03`.`address_shipping_line_data`", "relation_name": "`dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__address_shipping_line_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:55.998578Z", "completed_at": "2024-08-19T16:40:56.012557Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:56.014124Z", "completed_at": "2024-08-19T16:40:56.014129Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019685029983520508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.recharge_source.stg_recharge__address_discounts_tmp", "compiled": true, "compiled_code": "select *\nfrom `dbt-package-testing`.`recharge_source_integration_tests_03`.`address_discounts_data`", "relation_name": "`dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__address_discounts_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:56.009133Z", "completed_at": "2024-08-19T16:40:56.012777Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:56.014305Z", "completed_at": "2024-08-19T16:40:56.014308Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.020766258239746094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.recharge_source.stg_recharge__charge_discount_tmp", "compiled": true, "compiled_code": "select *\nfrom `dbt-package-testing`.`recharge_source_integration_tests_03`.`charge_discount_data`", "relation_name": "`dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__charge_discount_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:56.006789Z", "completed_at": "2024-08-19T16:40:56.013221Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:56.015105Z", "completed_at": "2024-08-19T16:40:56.015108Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.023200035095214844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.recharge_source.stg_recharge__address_tmp", "compiled": true, "compiled_code": "select *\nfrom `dbt-package-testing`.`recharge_source_integration_tests_03`.`address_data`", "relation_name": "`dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__address_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:56.023108Z", "completed_at": "2024-08-19T16:40:56.038661Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:56.040284Z", "completed_at": "2024-08-19T16:40:56.040290Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.020571231842041016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.recharge_source.stg_recharge__charge_line_item_tmp", "compiled": true, "compiled_code": "select *\nfrom `dbt-package-testing`.`recharge_source_integration_tests_03`.`charge_line_item_data`", "relation_name": "`dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__charge_line_item_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:56.026167Z", "completed_at": "2024-08-19T16:40:56.039125Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:56.040839Z", "completed_at": "2024-08-19T16:40:56.040844Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02081608772277832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.recharge_source.stg_recharge__charge_order_attribute_tmp", "compiled": true, "compiled_code": "select *\nfrom `dbt-package-testing`.`recharge_source_integration_tests_03`.`charge_order_attribute_data`", "relation_name": "`dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__charge_order_attribute_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:56.028246Z", "completed_at": "2024-08-19T16:40:56.039587Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:56.041583Z", "completed_at": "2024-08-19T16:40:56.041587Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.021145105361938477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.recharge_source.stg_recharge__charge_shipping_line_tmp", "compiled": true, "compiled_code": "select *\nfrom `dbt-package-testing`.`recharge_source_integration_tests_03`.`charge_shipping_line_data`", "relation_name": "`dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__charge_shipping_line_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:56.031133Z", "completed_at": "2024-08-19T16:40:56.039817Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:56.041784Z", "completed_at": "2024-08-19T16:40:56.041788Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.020986080169677734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.recharge_source.stg_recharge__charge_tax_line_tmp", "compiled": true, "compiled_code": "\nselect *\nfrom `dbt-package-testing`.`recharge_source_integration_tests_03`.`charge_tax_line_data`", "relation_name": "`dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__charge_tax_line_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:56.046108Z", "completed_at": "2024-08-19T16:40:56.054571Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:56.055037Z", "completed_at": "2024-08-19T16:40:56.055043Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.012381792068481445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.recharge_source.stg_recharge__charge_tmp", "compiled": true, "compiled_code": "select *\nfrom `dbt-package-testing`.`recharge_source_integration_tests_03`.`charge_data`", "relation_name": "`dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__charge_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:56.048913Z", "completed_at": "2024-08-19T16:40:56.055300Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:56.057225Z", "completed_at": "2024-08-19T16:40:56.057228Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.013412714004516602, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.recharge_source.stg_recharge__customer_tmp", "compiled": true, "compiled_code": "select *\nfrom `dbt-package-testing`.`recharge_source_integration_tests_03`.`customer_data`", "relation_name": "`dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__customer_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:56.052688Z", "completed_at": "2024-08-19T16:40:56.055488Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:56.057440Z", "completed_at": "2024-08-19T16:40:56.057444Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.013013124465942383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.recharge_source.stg_recharge__one_time_product_tmp", "compiled": true, "compiled_code": "\nselect *\nfrom `dbt-package-testing`.`recharge_source_integration_tests_03`.`one_time_product_data`", "relation_name": "`dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__one_time_product_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:56.050779Z", "completed_at": "2024-08-19T16:40:56.055725Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:56.057630Z", "completed_at": "2024-08-19T16:40:56.057635Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01371002197265625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.recharge_source.stg_recharge__discount_tmp", "compiled": true, "compiled_code": "select *\nfrom `dbt-package-testing`.`recharge_source_integration_tests_03`.`discount_data`", "relation_name": "`dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__discount_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:56.060235Z", "completed_at": "2024-08-19T16:40:56.066144Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:56.069762Z", "completed_at": "2024-08-19T16:40:56.069769Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01288604736328125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.recharge_source.stg_recharge__order_line_item_tmp", "compiled": true, "compiled_code": "select *\nfrom `dbt-package-testing`.`recharge_source_integration_tests_03`.`order_line_item_data`", "relation_name": "`dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__order_line_item_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:56.067965Z", "completed_at": "2024-08-19T16:40:56.068814Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:56.069982Z", "completed_at": "2024-08-19T16:40:56.069986Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.008213043212890625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.recharge_source_integration_tests.address_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:56.063992Z", "completed_at": "2024-08-19T16:40:56.069571Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:56.071549Z", "completed_at": "2024-08-19T16:40:56.071552Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010231971740722656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.recharge_source.stg_recharge__subscription_history_tmp", "compiled": true, "compiled_code": "select *\nfrom `dbt-package-testing`.`recharge_source_integration_tests_03`.`subscription_history_data`", "relation_name": "`dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__subscription_history_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:56.066371Z", "completed_at": "2024-08-19T16:40:56.070152Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:56.072243Z", "completed_at": "2024-08-19T16:40:56.072246Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.010865926742553711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.recharge_source.stg_recharge__subscription_tmp", "compiled": true, "compiled_code": "select *\nfrom `dbt-package-testing`.`recharge_source_integration_tests_03`.`subscription_data`", "relation_name": "`dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__subscription_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:56.074799Z", "completed_at": "2024-08-19T16:40:56.075770Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:56.139740Z", "completed_at": "2024-08-19T16:40:56.139747Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0683600902557373, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.recharge_source_integration_tests.address_discounts_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:56.076062Z", "completed_at": "2024-08-19T16:40:56.137430Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:56.139935Z", "completed_at": "2024-08-19T16:40:56.139938Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.06844782829284668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.recharge_source_integration_tests.address_shipping_line_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:56.138859Z", "completed_at": "2024-08-19T16:40:56.139538Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:56.141911Z", "completed_at": "2024-08-19T16:40:56.141914Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.06830000877380371, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.recharge_source_integration_tests.charge_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:56.140113Z", "completed_at": "2024-08-19T16:40:56.140705Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:56.142531Z", "completed_at": "2024-08-19T16:40:56.142535Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0057981014251708984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.recharge_source_integration_tests.charge_discount_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:56.145014Z", "completed_at": "2024-08-19T16:40:56.145904Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:56.149086Z", "completed_at": "2024-08-19T16:40:56.149092Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0076961517333984375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.recharge_source_integration_tests.charge_line_item_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:56.146161Z", "completed_at": "2024-08-19T16:40:56.146767Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:56.149301Z", "completed_at": "2024-08-19T16:40:56.149305Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.007812738418579102, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.recharge_source_integration_tests.charge_order_attribute_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:56.148126Z", "completed_at": "2024-08-19T16:40:56.148864Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:56.151538Z", "completed_at": "2024-08-19T16:40:56.151541Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007820844650268555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.recharge_source_integration_tests.charge_shipping_line_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:56.149547Z", "completed_at": "2024-08-19T16:40:56.150187Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:56.152145Z", "completed_at": "2024-08-19T16:40:56.152148Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006381034851074219, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.recharge_source_integration_tests.charge_tax_line_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:56.154707Z", "completed_at": "2024-08-19T16:40:56.155400Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:56.157920Z", "completed_at": "2024-08-19T16:40:56.157924Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0075130462646484375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.recharge_source_integration_tests.checkout_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:56.155582Z", "completed_at": "2024-08-19T16:40:56.156118Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:56.158099Z", "completed_at": "2024-08-19T16:40:56.158102Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.007569313049316406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.recharge_source_integration_tests.customer_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:56.157145Z", "completed_at": "2024-08-19T16:40:56.157731Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:56.160916Z", "completed_at": "2024-08-19T16:40:56.160919Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007450103759765625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.recharge_source_integration_tests.discount_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:56.158271Z", "completed_at": "2024-08-19T16:40:56.159724Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:56.161536Z", "completed_at": "2024-08-19T16:40:56.161539Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006292104721069336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.recharge_source_integration_tests.one_time_product_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:56.163794Z", "completed_at": "2024-08-19T16:40:56.164461Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:56.166828Z", "completed_at": "2024-08-19T16:40:56.166832Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.006193876266479492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.recharge_source_integration_tests.order_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:56.164640Z", "completed_at": "2024-08-19T16:40:56.165152Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:56.167015Z", "completed_at": "2024-08-19T16:40:56.167018Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0063588619232177734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.recharge_source_integration_tests.order_line_item_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:56.166149Z", "completed_at": "2024-08-19T16:40:56.166652Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:56.168978Z", "completed_at": "2024-08-19T16:40:56.168981Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006405830383300781, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.recharge_source_integration_tests.orders_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:56.167193Z", "completed_at": "2024-08-19T16:40:56.167763Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:56.169607Z", "completed_at": "2024-08-19T16:40:56.169610Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.005299091339111328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.recharge_source_integration_tests.subscription_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:56.171798Z", "completed_at": "2024-08-19T16:40:56.172369Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:56.177189Z", "completed_at": "2024-08-19T16:40:56.177194Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.009245872497558594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.recharge_source_integration_tests.subscription_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:56.182028Z", "completed_at": "2024-08-19T16:40:56.532273Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:56.532835Z", "completed_at": "2024-08-19T16:40:56.532845Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.35224294662475586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.recharge_source.stg_recharge__address", "compiled": true, "compiled_code": "with base as (\n\n    select *\n    from `dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__address_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    customer_id\n    \n as \n    \n    customer_id\n    \n, \n    \n    \n    first_name\n    \n as \n    \n    first_name\n    \n, \n    \n    \n    last_name\n    \n as \n    \n    last_name\n    \n, \n    \n    \n    address_1\n    \n as \n    \n    address_1\n    \n, \n    \n    \n    address_2\n    \n as \n    \n    address_2\n    \n, \n    \n    \n    city\n    \n as \n    \n    city\n    \n, \n    \n    \n    province\n    \n as \n    \n    province\n    \n, \n    \n    \n    country_code\n    \n as \n    \n    country_code\n    \n, \n    cast(null as string) as \n    \n    country\n    \n , \n    \n    \n    zip\n    \n as \n    \n    zip\n    \n, \n    \n    \n    company\n    \n as \n    \n    company\n    \n, \n    \n    \n    phone\n    \n as \n    \n    phone\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    cast(null as string) as \n    \n    payment_method_id\n    \n \n\n\n    from base\n),\n\nfinal as (\n\n    select\n        id as address_id,\n        customer_id,\n        first_name,\n        last_name,\n        cast(created_at as timestamp) as address_created_at,\n        cast(updated_at as timestamp) as address_updated_at,\n        address_1 as address_line_1,\n        address_2 as address_line_2,\n        city,\n        province,\n        zip,\n        country_code,\n        country,\n        company,\n        phone,\n        payment_method_id\n\n        \n\n\n\n\n\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__address`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:56.175399Z", "completed_at": "2024-08-19T16:40:56.570506Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:56.571010Z", "completed_at": "2024-08-19T16:40:56.571018Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.39984679222106934, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.recharge_source.stg_recharge__address_discounts", "compiled": true, "compiled_code": "with base as (\n\n    select *\n    from `dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__address_discounts_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    address_id\n    \n as \n    \n    address_id\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    index\n    \n as \n    \n    index\n    \n, \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        id as discount_id,\n        address_id,\n        index\n\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__address_discounts`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:56.177370Z", "completed_at": "2024-08-19T16:40:56.589739Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:56.590573Z", "completed_at": "2024-08-19T16:40:56.590581Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.4170191287994385, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.recharge_source.stg_recharge__charge_discount", "compiled": true, "compiled_code": "with base as (\n\n    select *\n    from `dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__charge_discount_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    charge_id\n    \n as \n    \n    charge_id\n    \n, \n    \n    \n    index\n    \n as \n    \n    index\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    code\n    \n as \n    \n    code\n    \n, \n    \n    \n    value\n    \n as \n    \n    value\n    \n, \n    \n    \n    value_type\n    \n as \n    \n    value_type\n    \n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        charge_id,\n        index,\n        id as discount_id, \n        code,\n        cast(value as FLOAT64) as discount_value,\n        value_type\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__charge_discount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:56.172536Z", "completed_at": "2024-08-19T16:40:56.589994Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:56.590782Z", "completed_at": "2024-08-19T16:40:56.590786Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.4215371608734131, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.recharge_source.stg_recharge__address_shipping_line", "compiled": true, "compiled_code": "with base as (\n\n    select *\n    from `dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__address_shipping_line_tmp`\n),\n\nfields as (\n    \n    select\n        \n    \n    \n    address_id\n    \n as \n    \n    address_id\n    \n, \n    \n    \n    index\n    \n as \n    \n    index\n    \n, \n    \n    \n    price\n    \n as \n    \n    price\n    \n, \n    \n    \n    code\n    \n as \n    \n    code\n    \n, \n    \n    \n    title\n    \n as \n    \n    title\n    \n, \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        address_id,\n        index,\n        price,\n        code,\n        title\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__address_shipping_line`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:56.534537Z", "completed_at": "2024-08-19T16:40:56.866820Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:56.867491Z", "completed_at": "2024-08-19T16:40:56.867502Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.3340718746185303, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.recharge_source.stg_recharge__charge_line_item", "compiled": true, "compiled_code": "with base as (\n\n    select *\n    from `dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__charge_line_item_tmp`\n),\n\nfields as (\n    \n    select\n        \n    \n    \n    charge_id\n    \n as \n    \n    charge_id\n    \n, \n    \n    \n    index\n    \n as \n    \n    index\n    \n, \n    \n    \n    variant_title\n    \n as \n    \n    variant_title\n    \n, \n    \n    \n    title\n    \n as \n    \n    title\n    \n, \n    \n    \n    quantity\n    \n as \n    \n    quantity\n    \n, \n    \n    \n    grams\n    \n as \n    \n    grams\n    \n, \n    \n    \n    total_price\n    \n as \n    \n    total_price\n    \n, \n    \n    \n    unit_price\n    \n as \n    \n    unit_price\n    \n, \n    \n    \n    tax_due\n    \n as \n    \n    tax_due\n    \n, \n    \n    \n    taxable\n    \n as \n    \n    taxable\n    \n, \n    \n    \n    taxable_amount\n    \n as \n    \n    taxable_amount\n    \n, \n    \n    \n    unit_price_includes_tax\n    \n as \n    \n    unit_price_includes_tax\n    \n, \n    \n    \n    sku\n    \n as \n    \n    sku\n    \n, \n    \n    \n    external_product_id_ecommerce\n    \n as \n    \n    external_product_id_ecommerce\n    \n, \n    \n    \n    external_variant_id_ecommerce\n    \n as \n    \n    external_variant_id_ecommerce\n    \n, \n    \n    \n    vendor\n    \n as \n    \n    vendor\n    \n, \n    \n    \n    purchase_item_id\n    \n as \n    \n    purchase_item_id\n    \n, \n    \n    \n    purchase_item_type\n    \n as \n    \n    purchase_item_type\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        charge_id,\n        index,\n        vendor,\n        title,\n        variant_title,\n        sku,\n        grams,\n        quantity,\n        cast(total_price as FLOAT64) as total_price,\n        unit_price,\n        tax_due,\n        taxable,\n        taxable_amount,\n        unit_price_includes_tax,\n        external_product_id_ecommerce,\n        external_variant_id_ecommerce,\n        purchase_item_id,\n        purchase_item_type\n\n        \n\n\n\n\n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__charge_line_item`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:56.572912Z", "completed_at": "2024-08-19T16:40:56.918146Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:56.918578Z", "completed_at": "2024-08-19T16:40:56.918584Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.3469119071960449, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.recharge_source.stg_recharge__charge_order_attribute", "compiled": true, "compiled_code": "with base as (\n\n    select *\n    from `dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__charge_order_attribute_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    charge_id\n    \n as \n    \n    charge_id\n    \n, \n    \n    \n    index\n    \n as \n    \n    index\n    \n, \n    \n    \n    order_attribute\n    \n as \n    \n    order_attribute\n    \n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        charge_id,\n        index,\n        order_attribute\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__charge_order_attribute`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:56.595953Z", "completed_at": "2024-08-19T16:40:56.962144Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:56.962564Z", "completed_at": "2024-08-19T16:40:56.962570Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.36989521980285645, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.recharge_source.stg_recharge__charge_tax_line", "compiled": true, "compiled_code": "\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__charge_tax_line_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    charge_id\n    \n as \n    \n    charge_id\n    \n, \n    \n    \n    index\n    \n as \n    \n    index\n    \n, \n    \n    \n    price\n    \n as \n    \n    price\n    \n, \n    \n    \n    rate\n    \n as \n    \n    rate\n    \n, \n    \n    \n    title\n    \n as \n    \n    title\n    \n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        charge_id,\n        index,\n        price,\n        rate,\n        title\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__charge_tax_line`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:56.868976Z", "completed_at": "2024-08-19T16:40:57.273804Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:57.276374Z", "completed_at": "2024-08-19T16:40:57.276410Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.40987324714660645, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.recharge_source.stg_recharge__charge", "compiled": true, "compiled_code": "with base as (\n\n    select *\n    from `dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__charge_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    address_id\n    \n as \n    \n    address_id\n    \n, \n    \n    \n    customer_id\n    \n as \n    \n    customer_id\n    \n, \n    \n    \n    customer_hash\n    \n as \n    \n    customer_hash\n    \n, \n    \n    \n    note\n    \n as \n    \n    note\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    processed_at\n    \n as \n    \n    processed_at\n    \n, \n    \n    \n    scheduled_at\n    \n as \n    \n    scheduled_at\n    \n, \n    \n    \n    orders_count\n    \n as \n    \n    orders_count\n    \n, \n    \n    \n    external_order_id_ecommerce\n    \n as \n    \n    external_order_id_ecommerce\n    \n, \n    \n    \n    subtotal_price\n    \n as \n    \n    subtotal_price\n    \n, \n    \n    \n    tags\n    \n as \n    \n    tags\n    \n, \n    \n    \n    tax_lines\n    \n as \n    \n    tax_lines\n    \n, \n    \n    \n    total_discounts\n    \n as \n    \n    total_discounts\n    \n, \n    \n    \n    total_line_items_price\n    \n as \n    \n    total_line_items_price\n    \n, \n    \n    \n    total_price\n    \n as \n    \n    total_price\n    \n, \n    \n    \n    total_tax\n    \n as \n    \n    total_tax\n    \n, \n    \n    \n    total_weight_grams\n    \n as \n    \n    total_weight_grams\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    total_refunds\n    \n as \n    \n    total_refunds\n    \n, \n    \n    \n    external_transaction_id_payment_processor\n    \n as \n    \n    external_transaction_id_payment_processor\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    payment_processor\n    \n as \n    \n    payment_processor\n    \n, \n    cast(null as boolean) as \n    \n    has_uncommitted_changes\n    \n , \n    \n    \n    retry_date\n    \n as \n    \n    retry_date\n    \n, \n    \n    \n    error_type\n    \n as \n    \n    error_type\n    \n, \n    \n    \n    error\n    \n as \n    \n    error\n    \n, \n    \n    \n    charge_attempts\n    \n as \n    \n    charge_attempts\n    \n, \n    \n    \n    external_variant_id_not_found\n    \n as \n    \n    external_variant_id_not_found\n    \n, \n    \n    \n    client_details_browser_ip\n    \n as \n    \n    client_details_browser_ip\n    \n, \n    \n    \n    client_details_user_agent\n    \n as \n    \n    client_details_user_agent\n    \n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        id as charge_id,\n        customer_id,\n        customer_hash,\n        email,\n        cast(created_at as timestamp) as charge_created_at,\n        type as charge_type,\n        status as charge_status,\n        cast(updated_at as timestamp) as charge_updated_at,\n        note,\n        subtotal_price,\n        tax_lines,\n        total_discounts,\n        total_line_items_price,\n        total_tax,\n        cast(total_price as FLOAT64) as total_price,\n        total_refunds,\n        total_weight_grams,\n        cast(scheduled_at as timestamp) as charge_scheduled_at,\n        cast(processed_at as timestamp) as charge_processed_at,\n        payment_processor,\n        external_transaction_id_payment_processor,\n        external_order_id_ecommerce,\n        orders_count,\n        has_uncommitted_changes,\n        cast(retry_date as timestamp) as retry_date,\n        error_type,\n        charge_attempts as times_retried,\n        address_id,\n        client_details_browser_ip,\n        client_details_user_agent,\n        tags,\n        error,\n        external_variant_id_not_found\n\n        \n\n\n\n\n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__charge`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:56.920087Z", "completed_at": "2024-08-19T16:40:57.308719Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:57.309192Z", "completed_at": "2024-08-19T16:40:57.309198Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.3901979923248291, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.recharge_source.stg_recharge__customer", "compiled": true, "compiled_code": "with base as (\n\n    select *\n    from `dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__customer_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    external_customer_id_ecommerce\n    \n as \n    \n    external_customer_id_ecommerce\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    first_charge_processed_at\n    \n as \n    \n    first_charge_processed_at\n    \n, \n    \n    \n    first_name\n    \n as \n    \n    first_name\n    \n, \n    \n    \n    last_name\n    \n as \n    \n    last_name\n    \n, \n    \n    \n    subscriptions_active_count\n    \n as \n    \n    subscriptions_active_count\n    \n, \n    \n    \n    subscriptions_total_count\n    \n as \n    \n    subscriptions_total_count\n    \n, \n    \n    \n    has_valid_payment_method\n    \n as \n    \n    has_valid_payment_method\n    \n, \n    \n    \n    has_payment_method_in_dunning\n    \n as \n    \n    has_payment_method_in_dunning\n    \n, \n    \n    \n    tax_exempt\n    \n as \n    \n    tax_exempt\n    \n, \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    cast(null as string) as \n    \n    billing_first_name\n    \n , \n    cast(null as string) as \n    \n    billing_last_name\n    \n , \n    cast(null as string) as \n    \n    billing_company\n    \n , \n    cast(null as string) as \n    \n    billing_city\n    \n , \n    cast(null as string) as \n    \n    billing_country\n    \n , \n    \n    \n        \n            \n            `hash`\n            \n        \n    \n as customer_hash \n\n\n    from base\n),\n\nfinal as (\n\n    select\n        id as customer_id,\n        customer_hash,\n        external_customer_id_ecommerce,\n        email,\n        first_name,\n        last_name,\n        cast(created_at as timestamp) as customer_created_at,\n        cast(updated_at as timestamp) as customer_updated_at,\n        cast(first_charge_processed_at as timestamp) as first_charge_processed_at,\n        subscriptions_active_count,\n        subscriptions_total_count,\n        has_valid_payment_method,\n        has_payment_method_in_dunning,\n        tax_exempt,\n        billing_first_name,\n        billing_last_name,\n        billing_company,\n        billing_city,\n        billing_country\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__customer`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:56.964298Z", "completed_at": "2024-08-19T16:40:57.338377Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:57.339143Z", "completed_at": "2024-08-19T16:40:57.339150Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.3767421245574951, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.recharge_source.stg_recharge__one_time_product", "compiled": true, "compiled_code": "\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__one_time_product_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    address_id\n    \n as \n    \n    address_id\n    \n, \n    \n    \n    customer_id\n    \n as \n    \n    customer_id\n    \n, \n    \n    \n    is_deleted\n    \n as \n    \n    is_deleted\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    next_charge_scheduled_at\n    \n as \n    \n    next_charge_scheduled_at\n    \n, \n    \n    \n    product_title\n    \n as \n    \n    product_title\n    \n, \n    \n    \n    variant_title\n    \n as \n    \n    variant_title\n    \n, \n    \n    \n    price\n    \n as \n    \n    price\n    \n, \n    \n    \n    quantity\n    \n as \n    \n    quantity\n    \n, \n    \n    \n    external_product_id_ecommerce\n    \n as \n    \n    external_product_id_ecommerce\n    \n, \n    \n    \n    external_variant_id_ecommerce\n    \n as \n    \n    external_variant_id_ecommerce\n    \n, \n    \n    \n    sku\n    \n as \n    \n    sku\n    \n, \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n \n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        id as one_time_product_id,\n        address_id,\n        customer_id,\n        is_deleted,\n        cast(created_at as timestamp) as one_time_created_at,\n        cast(updated_at as timestamp) as one_time_updated_at,\n        next_charge_scheduled_at as one_time_next_charge_scheduled_at,\n        product_title,\n        variant_title,\n        price,\n        quantity,\n        external_product_id_ecommerce,\n        external_variant_id_ecommerce,\n        sku\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__one_time_product`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:56.593884Z", "completed_at": "2024-08-19T16:40:57.444054Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:57.444475Z", "completed_at": "2024-08-19T16:40:57.444481Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.8521468639373779, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.recharge_source.stg_recharge__charge_shipping_line", "compiled": true, "compiled_code": "with base as (\n\n    select *\n    from `dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__charge_shipping_line_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    charge_id\n    \n as \n    \n    charge_id\n    \n, \n    \n    \n    index\n    \n as \n    \n    index\n    \n, \n    \n    \n    price\n    \n as \n    \n    price\n    \n, \n    \n    \n    code\n    \n as \n    \n    code\n    \n, \n    \n    \n    title\n    \n as \n    \n    title\n    \n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        charge_id,\n        index,\n        price,\n        code,\n        title\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__charge_shipping_line`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:57.279837Z", "completed_at": "2024-08-19T16:40:57.614135Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:57.614781Z", "completed_at": "2024-08-19T16:40:57.614788Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.3359568119049072, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.recharge_source.stg_recharge__discount", "compiled": true, "compiled_code": "with base as (\n\n    select *\n    from `dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__discount_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    starts_at\n    \n as \n    \n    starts_at\n    \n, \n    \n    \n    ends_at\n    \n as \n    \n    ends_at\n    \n, \n    \n    \n    code\n    \n as \n    \n    code\n    \n, \n    \n    \n    value\n    \n as \n    \n    value\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    usage_limits\n    \n as \n    \n    usage_limits\n    \n, \n    \n    \n    applies_to\n    \n as \n    \n    applies_to\n    \n, \n    \n    \n    applies_to_resource\n    \n as \n    \n    applies_to_resource\n    \n, \n    \n    \n    applies_to_id\n    \n as \n    \n    applies_to_id\n    \n, \n    \n    \n    applies_to_product_type\n    \n as \n    \n    applies_to_product_type\n    \n, \n    \n    \n    minimum_order_amount\n    \n as \n    \n    minimum_order_amount\n    \n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        id as discount_id,\n        cast(created_at as timestamp) as discount_created_at,\n        cast(updated_at as timestamp) as discount_updated_at,\n        cast(starts_at as timestamp) as discount_starts_at,\n        cast(ends_at as timestamp) as discount_ends_at,\n        code,\n        value,\n        status,\n        usage_limits,\n        applies_to,\n        applies_to_resource,\n        applies_to_id,\n        applies_to_product_type,\n        minimum_order_amount\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__discount`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:57.616765Z", "completed_at": "2024-08-19T16:40:57.621842Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:57.622289Z", "completed_at": "2024-08-19T16:40:57.622295Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.006773948669433594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.recharge_source.stg_recharge__order_tmp", "compiled": true, "compiled_code": "select *\nfrom\n`dbt-package-testing`.`recharge_source_integration_tests_03`.`orders_data`", "relation_name": "`dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__order_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:57.310734Z", "completed_at": "2024-08-19T16:40:57.638684Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:57.639624Z", "completed_at": "2024-08-19T16:40:57.639630Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.33002710342407227, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.recharge_source.stg_recharge__order_line_item", "compiled": true, "compiled_code": "with base as (\n\n    select *\n    from `dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__order_line_item_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    order_id\n    \n as \n    \n    order_id\n    \n, \n    \n    \n    index\n    \n as \n    \n    index\n    \n, \n    \n    \n    variant_title\n    \n as \n    \n    variant_title\n    \n, \n    \n    \n    title\n    \n as \n    \n    title\n    \n, \n    \n    \n    quantity\n    \n as \n    \n    quantity\n    \n, \n    \n    \n    grams\n    \n as \n    \n    grams\n    \n, \n    \n    \n    total_price\n    \n as \n    \n    total_price\n    \n, \n    \n    \n    unit_price\n    \n as \n    \n    unit_price\n    \n, \n    \n    \n    tax_due\n    \n as \n    \n    tax_due\n    \n, \n    \n    \n    taxable\n    \n as \n    \n    taxable\n    \n, \n    \n    \n    taxable_amount\n    \n as \n    \n    taxable_amount\n    \n, \n    \n    \n    unit_price_includes_tax\n    \n as \n    \n    unit_price_includes_tax\n    \n, \n    \n    \n    sku\n    \n as \n    \n    sku\n    \n, \n    \n    \n    external_product_id_ecommerce\n    \n as \n    \n    external_product_id_ecommerce\n    \n, \n    \n    \n    external_variant_id_ecommerce\n    \n as \n    \n    external_variant_id_ecommerce\n    \n, \n    \n    \n    purchase_item_id\n    \n as \n    \n    purchase_item_id\n    \n, \n    \n    \n    purchase_item_type\n    \n as \n    \n    purchase_item_type\n    \n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        order_id,\n        index,\n        external_product_id_ecommerce,\n        external_variant_id_ecommerce,\n        title as order_line_item_title,\n        variant_title as product_variant_title,\n        sku,\n        quantity,\n        grams,\n        cast(total_price as FLOAT64) as total_price,\n        unit_price,\n        tax_due,\n        taxable,\n        taxable_amount,\n        unit_price_includes_tax,\n        purchase_item_id,\n        purchase_item_type\n\n        \n\n\n\n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__order_line_item`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:57.624114Z", "completed_at": "2024-08-19T16:40:57.639013Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:57.639834Z", "completed_at": "2024-08-19T16:40:57.639837Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.017381906509399414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recharge_source.not_null_stg_recharge__address_address_id.ffe947d70f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect address_id\nfrom `dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__address`\nwhere address_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:57.646632Z", "completed_at": "2024-08-19T16:40:57.652020Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:57.652635Z", "completed_at": "2024-08-19T16:40:57.652642Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.011475086212158203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recharge_source.dbt_utils_unique_combination_of_columns_stg_recharge__address_discounts_address_id__index.636bfd7451", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        address_id, index\n    from `dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__address_discounts`\n    group by address_id, index\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:57.642487Z", "completed_at": "2024-08-19T16:40:57.652408Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:57.653534Z", "completed_at": "2024-08-19T16:40:57.653539Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.012777090072631836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recharge_source.unique_stg_recharge__address_address_id.3ea4d98333", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select address_id as unique_field\n  from `dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__address`\n  where address_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:57.655480Z", "completed_at": "2024-08-19T16:40:57.660636Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:57.661197Z", "completed_at": "2024-08-19T16:40:57.661201Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.00720977783203125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recharge_source.not_null_stg_recharge__address_discounts_address_id.7225544f1b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect address_id\nfrom `dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__address_discounts`\nwhere address_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:57.658422Z", "completed_at": "2024-08-19T16:40:57.660992Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:57.661932Z", "completed_at": "2024-08-19T16:40:57.661935Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007264137268066406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recharge_source.dbt_utils_unique_combination_of_columns_stg_recharge__charge_discount_charge_id__index.87080ff978", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        charge_id, index\n    from `dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__charge_discount`\n    group by charge_id, index\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:57.663610Z", "completed_at": "2024-08-19T16:40:57.667582Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:57.668100Z", "completed_at": "2024-08-19T16:40:57.668103Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0058710575103759766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recharge_source.not_null_stg_recharge__charge_discount_charge_id.2efab5c017", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect charge_id\nfrom `dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__charge_discount`\nwhere charge_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:57.665767Z", "completed_at": "2024-08-19T16:40:57.667915Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:57.668773Z", "completed_at": "2024-08-19T16:40:57.668777Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005999088287353516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recharge_source.dbt_utils_unique_combination_of_columns_stg_recharge__address_shipping_line_address_id__index.ec269cbd74", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        address_id, index\n    from `dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__address_shipping_line`\n    group by address_id, index\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:57.670471Z", "completed_at": "2024-08-19T16:40:57.674398Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:57.674761Z", "completed_at": "2024-08-19T16:40:57.674764Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.005685091018676758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recharge_source.not_null_stg_recharge__address_shipping_line_address_id.f5fb6034fc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect address_id\nfrom `dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__address_shipping_line`\nwhere address_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:57.672583Z", "completed_at": "2024-08-19T16:40:57.674927Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:57.675779Z", "completed_at": "2024-08-19T16:40:57.675782Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006215810775756836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recharge_source.dbt_utils_unique_combination_of_columns_stg_recharge__charge_line_item_charge_id__index.cba28984fe", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        charge_id, index\n    from `dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__charge_line_item`\n    group by charge_id, index\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:57.677034Z", "completed_at": "2024-08-19T16:40:57.681702Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:57.682121Z", "completed_at": "2024-08-19T16:40:57.682126Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.006675004959106445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recharge_source.not_null_stg_recharge__charge_line_item_charge_id.555f3f4938", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect charge_id\nfrom `dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__charge_line_item`\nwhere charge_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:57.679445Z", "completed_at": "2024-08-19T16:40:57.682287Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:57.683323Z", "completed_at": "2024-08-19T16:40:57.683327Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0050199031829833984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recharge_source.dbt_utils_unique_combination_of_columns_stg_recharge__charge_order_attribute_charge_id__index.e3dda1974f", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        charge_id, index\n    from `dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__charge_order_attribute`\n    group by charge_id, index\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:57.684567Z", "completed_at": "2024-08-19T16:40:57.690333Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:57.691066Z", "completed_at": "2024-08-19T16:40:57.691071Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.008095026016235352, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recharge_source.not_null_stg_recharge__charge_order_attribute_charge_id.8419846588", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect charge_id\nfrom `dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__charge_order_attribute`\nwhere charge_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:57.688170Z", "completed_at": "2024-08-19T16:40:57.690535Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:57.691258Z", "completed_at": "2024-08-19T16:40:57.691261Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00433802604675293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recharge_source.dbt_utils_unique_combination_of_columns_stg_recharge__charge_tax_line_charge_id__index.9fc228fecf", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        charge_id, index\n    from `dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__charge_tax_line`\n    group by charge_id, index\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:57.695470Z", "completed_at": "2024-08-19T16:40:57.697572Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:57.698290Z", "completed_at": "2024-08-19T16:40:57.698295Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005909919738769531, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recharge_source.not_null_stg_recharge__charge_charge_id.e40d1f4998", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect charge_id\nfrom `dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__charge`\nwhere charge_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:57.693499Z", "completed_at": "2024-08-19T16:40:57.697770Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:57.698470Z", "completed_at": "2024-08-19T16:40:57.698473Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.006627082824707031, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recharge_source.not_null_stg_recharge__charge_tax_line_charge_id.f25f6cb759", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect charge_id\nfrom `dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__charge_tax_line`\nwhere charge_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:57.700746Z", "completed_at": "2024-08-19T16:40:57.704617Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:57.704973Z", "completed_at": "2024-08-19T16:40:57.704977Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005576133728027344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recharge_source.unique_stg_recharge__charge_charge_id.a013ccef10", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select charge_id as unique_field\n  from `dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__charge`\n  where charge_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:57.702699Z", "completed_at": "2024-08-19T16:40:57.705133Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:57.706018Z", "completed_at": "2024-08-19T16:40:57.706020Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.00642085075378418, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recharge_source.not_null_stg_recharge__customer_customer_id.0f267f14ba", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_id\nfrom `dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__customer`\nwhere customer_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:57.707140Z", "completed_at": "2024-08-19T16:40:57.711274Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:57.711663Z", "completed_at": "2024-08-19T16:40:57.711668Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0059740543365478516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recharge_source.unique_stg_recharge__customer_customer_id.1dcf3f6410", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select customer_id as unique_field\n  from `dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__customer`\n  where customer_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:57.709325Z", "completed_at": "2024-08-19T16:40:57.711848Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:57.712784Z", "completed_at": "2024-08-19T16:40:57.712787Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.004625082015991211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recharge_source.not_null_stg_recharge__one_time_product_one_time_product_id.03a2a12d7d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect one_time_product_id\nfrom `dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__one_time_product`\nwhere one_time_product_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:57.714011Z", "completed_at": "2024-08-19T16:40:57.720384Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:57.720800Z", "completed_at": "2024-08-19T16:40:57.720806Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0081939697265625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recharge_source.unique_stg_recharge__one_time_product_one_time_product_id.8ccb87ed5b", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select one_time_product_id as unique_field\n  from `dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__one_time_product`\n  where one_time_product_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:57.716117Z", "completed_at": "2024-08-19T16:40:57.721398Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:57.722219Z", "completed_at": "2024-08-19T16:40:57.722222Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.007010698318481445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recharge_source.dbt_utils_unique_combination_of_columns_stg_recharge__charge_shipping_line_charge_id__index.4b9ff30e99", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        charge_id, index\n    from `dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__charge_shipping_line`\n    group by charge_id, index\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:57.722893Z", "completed_at": "2024-08-19T16:40:57.727767Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:57.728168Z", "completed_at": "2024-08-19T16:40:57.728173Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0065460205078125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recharge_source.not_null_stg_recharge__charge_shipping_line_charge_id.2e2da51e26", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect charge_id\nfrom `dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__charge_shipping_line`\nwhere charge_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:57.725899Z", "completed_at": "2024-08-19T16:40:57.728730Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:57.729569Z", "completed_at": "2024-08-19T16:40:57.729572Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.004621028900146484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recharge_source.not_null_stg_recharge__discount_discount_id.71ea1251b3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect discount_id\nfrom `dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__discount`\nwhere discount_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:57.730281Z", "completed_at": "2024-08-19T16:40:57.734699Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:57.735382Z", "completed_at": "2024-08-19T16:40:57.735386Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0064961910247802734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recharge_source.unique_stg_recharge__discount_discount_id.5e928f569c", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select discount_id as unique_field\n  from `dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__discount`\n  where discount_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:57.736763Z", "completed_at": "2024-08-19T16:40:57.739842Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:57.740203Z", "completed_at": "2024-08-19T16:40:57.740208Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0042421817779541016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recharge_source.dbt_utils_unique_combination_of_columns_stg_recharge__order_line_item_order_id__index.e56621b39a", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        order_id, index\n    from `dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__order_line_item`\n    group by order_id, index\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:57.741393Z", "completed_at": "2024-08-19T16:40:57.743895Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:57.744219Z", "completed_at": "2024-08-19T16:40:57.744223Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0034990310668945312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recharge_source.not_null_stg_recharge__order_line_item_order_id.bf548aca5f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_id\nfrom `dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__order_line_item`\nwhere order_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:57.343016Z", "completed_at": "2024-08-19T16:40:57.761022Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:57.761344Z", "completed_at": "2024-08-19T16:40:57.761349Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.4201700687408447, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.recharge_source.stg_recharge__subscription_history", "compiled": true, "compiled_code": "with base as (\n\n    select *\n    from `dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__subscription_history_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    subscription_id\n    \n as \n    \n    subscription_id\n    \n, \n    cast(null as INT64) as \n    \n    id\n    \n , \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    address_id\n    \n as \n    \n    address_id\n    \n, \n    \n    \n    customer_id\n    \n as \n    \n    customer_id\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    cancelled_at\n    \n as \n    \n    cancelled_at\n    \n, \n    \n    \n    next_charge_scheduled_at\n    \n as \n    \n    next_charge_scheduled_at\n    \n, \n    \n    \n    price\n    \n as \n    \n    price\n    \n, \n    \n    \n    quantity\n    \n as \n    \n    quantity\n    \n, \n    \n    \n    cancellation_reason\n    \n as \n    \n    cancellation_reason\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    cancellation_reason_comments\n    \n as \n    \n    cancellation_reason_comments\n    \n, \n    \n    \n    product_title\n    \n as \n    \n    product_title\n    \n, \n    \n    \n    variant_title\n    \n as \n    \n    variant_title\n    \n, \n    \n    \n    external_product_id_ecommerce\n    \n as \n    \n    external_product_id_ecommerce\n    \n, \n    \n    \n    external_variant_id_ecommerce\n    \n as \n    \n    external_variant_id_ecommerce\n    \n, \n    \n    \n    sku\n    \n as \n    \n    sku\n    \n, \n    \n    \n    order_interval_unit\n    \n as \n    \n    order_interval_unit\n    \n, \n    \n    \n    order_interval_frequency\n    \n as \n    \n    order_interval_frequency\n    \n, \n    \n    \n    charge_interval_frequency\n    \n as \n    \n    charge_interval_frequency\n    \n, \n    \n    \n    order_day_of_week\n    \n as \n    \n    order_day_of_week\n    \n, \n    \n    \n    order_day_of_month\n    \n as \n    \n    order_day_of_month\n    \n, \n    \n    \n    expire_after_specific_number_of_charges\n    \n as \n    \n    expire_after_specific_number_of_charges\n    \n, \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        coalesce(cast(id as INT64), cast(subscription_id as INT64)) as subscription_id,\n        customer_id,\n        address_id,\n        cast(created_at as timestamp) as subscription_created_at,\n        external_product_id_ecommerce,\n        external_variant_id_ecommerce,\n        product_title,\n        variant_title,\n        sku,\n        cast(price as FLOAT64) as price,\n        quantity,\n        status as subscription_status,\n        charge_interval_frequency,\n        order_interval_unit,\n        order_interval_frequency,\n        order_day_of_month,\n        order_day_of_week,\n        expire_after_specific_number_of_charges,\n        cast(updated_at as timestamp) as subscription_updated_at,\n        cast(next_charge_scheduled_at as timestamp) as subscription_next_charge_scheduled_at,\n        cast(cancelled_at as timestamp) as subscription_cancelled_at,\n        cancellation_reason,\n        cancellation_reason_comments,\n        _fivetran_synced\n\n        \n\n\n\n\n\n    from fields\n)\n\nselect\n    *,\n    row_number() over (partition by subscription_id order by subscription_updated_at desc) = 1 as is_most_recent_record\nfrom final", "relation_name": "`dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__subscription_history`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:57.763275Z", "completed_at": "2024-08-19T16:40:57.767719Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:57.768409Z", "completed_at": "2024-08-19T16:40:57.768413Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0065059661865234375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recharge_source.dbt_utils_unique_combination_of_columns_stg_recharge__subscription_history_subscription_id__subscription_updated_at.7eefd56269", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        subscription_id, subscription_updated_at\n    from `dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__subscription_history`\n    group by subscription_id, subscription_updated_at\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:57.765734Z", "completed_at": "2024-08-19T16:40:57.767902Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:57.768593Z", "completed_at": "2024-08-19T16:40:57.768596Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.006536006927490234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recharge_source.not_null_stg_recharge__subscription_history_subscription_id.678aed985c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect subscription_id\nfrom `dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__subscription_history`\nwhere subscription_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:57.446045Z", "completed_at": "2024-08-19T16:40:57.788759Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:57.789105Z", "completed_at": "2024-08-19T16:40:57.789110Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.3439202308654785, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.recharge_source.stg_recharge__subscription", "compiled": true, "compiled_code": "with base as (\n\n    select *\n    from `dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__subscription_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    address_id\n    \n as \n    \n    address_id\n    \n, \n    \n    \n    customer_id\n    \n as \n    \n    customer_id\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    cancelled_at\n    \n as \n    \n    cancelled_at\n    \n, \n    \n    \n    next_charge_scheduled_at\n    \n as \n    \n    next_charge_scheduled_at\n    \n, \n    \n    \n    price\n    \n as \n    \n    price\n    \n, \n    \n    \n    quantity\n    \n as \n    \n    quantity\n    \n, \n    \n    \n    cancellation_reason\n    \n as \n    \n    cancellation_reason\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    cancellation_reason_comments\n    \n as \n    \n    cancellation_reason_comments\n    \n, \n    \n    \n    product_title\n    \n as \n    \n    product_title\n    \n, \n    \n    \n    variant_title\n    \n as \n    \n    variant_title\n    \n, \n    \n    \n    external_product_id_ecommerce\n    \n as \n    \n    external_product_id_ecommerce\n    \n, \n    \n    \n    external_variant_id_ecommerce\n    \n as \n    \n    external_variant_id_ecommerce\n    \n, \n    \n    \n    sku\n    \n as \n    \n    sku\n    \n, \n    \n    \n    order_interval_unit\n    \n as \n    \n    order_interval_unit\n    \n, \n    \n    \n    order_interval_frequency\n    \n as \n    \n    order_interval_frequency\n    \n, \n    \n    \n    charge_interval_frequency\n    \n as \n    \n    charge_interval_frequency\n    \n, \n    \n    \n    order_day_of_week\n    \n as \n    \n    order_day_of_week\n    \n, \n    \n    \n    order_day_of_month\n    \n as \n    \n    order_day_of_month\n    \n, \n    \n    \n    expire_after_specific_number_of_charges\n    \n as \n    \n    expire_after_specific_number_of_charges\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        id as subscription_id,\n        customer_id,\n        address_id,\n        cast(created_at as timestamp) as subscription_created_at,\n        product_title,\n        variant_title,\n        sku,\n        cast(price as FLOAT64) as price,\n        quantity,\n        status as subscription_status,\n        next_charge_scheduled_at as subscription_next_charge_scheduled_at,\n        charge_interval_frequency,\n        expire_after_specific_number_of_charges,\n        order_interval_frequency,\n        order_interval_unit,\n        order_day_of_week,\n        order_day_of_month,\n        cast(updated_at as timestamp) as subscription_updated_at,\n        external_product_id_ecommerce,\n        external_variant_id_ecommerce,\n        cast(cancelled_at as timestamp) as subscription_cancelled_at,\n        cancellation_reason,\n        cancellation_reason_comments\n\n        \n\n\n\n\n\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__subscription`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:57.792935Z", "completed_at": "2024-08-19T16:40:57.794993Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:57.795840Z", "completed_at": "2024-08-19T16:40:57.795845Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.006093025207519531, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recharge_source.unique_stg_recharge__subscription_subscription_id.bed39b80ea", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select subscription_id as unique_field\n  from `dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__subscription`\n  where subscription_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:57.790951Z", "completed_at": "2024-08-19T16:40:57.795172Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:57.796078Z", "completed_at": "2024-08-19T16:40:57.796081Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006790876388549805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recharge_source.not_null_stg_recharge__subscription_subscription_id.c2f0892c32", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect subscription_id\nfrom `dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__subscription`\nwhere subscription_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:57.732743Z", "completed_at": "2024-08-19T16:40:58.048898Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:58.049326Z", "completed_at": "2024-08-19T16:40:58.049332Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.3173551559448242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.recharge_source.stg_recharge__order", "compiled": true, "compiled_code": "with base as (\n\n    select *\n    from `dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__order_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    customer_id\n    \n as \n    \n    customer_id\n    \n, \n    \n    \n    address_id\n    \n as \n    \n    address_id\n    \n, \n    \n    \n    charge_id\n    \n as \n    \n    charge_id\n    \n, \n    \n    \n    is_deleted\n    \n as \n    \n    is_deleted\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    transaction_id\n    \n as \n    \n    transaction_id\n    \n, \n    \n    \n    charge_status\n    \n as \n    \n    charge_status\n    \n, \n    \n    \n    is_prepaid\n    \n as \n    \n    is_prepaid\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    total_price\n    \n as \n    \n    total_price\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n, \n    \n    \n    external_order_id_ecommerce\n    \n as \n    \n    external_order_id_ecommerce\n    \n, \n    \n    \n    external_order_number_ecommerce\n    \n as \n    \n    external_order_number_ecommerce\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    processed_at\n    \n as \n    \n    processed_at\n    \n, \n    \n    \n    scheduled_at\n    \n as \n    \n    scheduled_at\n    \n, \n    \n    \n    shipped_date\n    \n as \n    \n    shipped_date\n    \n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        id as order_id,\n        external_order_id_ecommerce,\n        external_order_number_ecommerce,\n        customer_id,\n        email,\n        cast(created_at as timestamp) as order_created_at,\n        status as order_status,\n        cast(updated_at as timestamp) as order_updated_at,\n        charge_id,\n        transaction_id,\n        charge_status,\n        is_prepaid,\n        cast(total_price as FLOAT64) as order_total_price,\n        type as order_type,\n        cast(processed_at as timestamp) as order_processed_at,\n        cast(scheduled_at as timestamp) as order_scheduled_at,\n        cast(shipped_date as timestamp) as order_shipped_date,\n        address_id,\n        is_deleted\n\n        \n\n\n\n\n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__order`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:58.051584Z", "completed_at": "2024-08-19T16:40:58.056749Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:58.057498Z", "completed_at": "2024-08-19T16:40:58.057504Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007395029067993164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recharge_source.not_null_stg_recharge__order_order_id.70fc03aaa7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_id\nfrom `dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__order`\nwhere order_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T16:40:58.054462Z", "completed_at": "2024-08-19T16:40:58.056963Z"}, {"name": "execute", "started_at": "2024-08-19T16:40:58.057717Z", "completed_at": "2024-08-19T16:40:58.057720Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.007440805435180664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.recharge_source.unique_stg_recharge__order_order_id.bab2588ddd", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select order_id as unique_field\n  from `dbt-package-testing`.`recharge_source_integration_tests_03_recharge_source`.`stg_recharge__order`\n  where order_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}], "elapsed_time": 3.460766077041626, "args": {"populate_cache": true, "print": true, "quiet": false, "send_anonymous_usage_stats": true, "defer": false, "indirect_selection": "eager", "static_parser": true, "favor_state": false, "log_path": "/Users/renee/Documents/dbt/recharge/dbt_recharge_source/integration_tests/logs", "printer_width": 80, "macro_debugging": false, "use_colors_file": true, "write_json": true, "strict_mode": false, "select": [], "partial_parse_file_diff": true, "log_level_file": "debug", "project_dir": "/Users/renee/Documents/dbt/recharge/dbt_recharge_source/integration_tests", "version_check": true, "log_format": "default", "use_colors": true, "vars": {}, "partial_parse": true, "enable_legacy_logger": false, "log_file_max_bytes": 10485760, "log_level": "info", "empty_catalog": false, "introspect": true, "static": false, "exclude": [], "show_resource_report": false, "profiles_dir": "/Users/renee/.dbt", "cache_selected_only": false, "warn_error_options": {"include": [], "exclude": []}, "which": "generate", "log_format_file": "debug", "compile": true, "invocation_command": "dbt docs generate"}}