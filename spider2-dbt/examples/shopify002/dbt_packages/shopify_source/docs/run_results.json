{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.13", "generated_at": "2024-06-07T20:32:38.334340Z", "invocation_id": "b697cebd-c250-47ae-9de7-60aef092bd17", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.018249Z", "completed_at": "2024-06-07T20:32:34.057222Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.058212Z", "completed_at": "2024-06-07T20:32:34.058227Z"}], "thread_id": "Thread-1", "execution_time": 0.04403400421142578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__abandoned_checkout_discount_code_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from `dbt-package-testing`.`shopify_source_tests`.`shopify_abandoned_checkout_discount_code_data`", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__abandoned_checkout_discount_code_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.044173Z", "completed_at": "2024-06-07T20:32:34.057876Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.059950Z", "completed_at": "2024-06-07T20:32:34.059953Z"}], "thread_id": "Thread-3", "execution_time": 0.04483795166015625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__abandoned_checkout_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from `dbt-package-testing`.`shopify_source_tests`.`shopify_abandoned_checkout_data`", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__abandoned_checkout_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.048438Z", "completed_at": "2024-06-07T20:32:34.058765Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.061630Z", "completed_at": "2024-06-07T20:32:34.061633Z"}], "thread_id": "Thread-4", "execution_time": 0.046225786209106445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__collection_product_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from `dbt-package-testing`.`shopify_source_tests`.`shopify_collection_product_data`", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__collection_product_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.030863Z", "completed_at": "2024-06-07T20:32:34.059028Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.061909Z", "completed_at": "2024-06-07T20:32:34.061912Z"}], "thread_id": "Thread-2", "execution_time": 0.04766392707824707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__abandoned_checkout_shipping_line_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from `dbt-package-testing`.`shopify_source_tests`.`shopify_abandoned_checkout_shipping_line_data`", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__abandoned_checkout_shipping_line_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.065220Z", "completed_at": "2024-06-07T20:32:34.076548Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.081179Z", "completed_at": "2024-06-07T20:32:34.081185Z"}], "thread_id": "Thread-1", "execution_time": 0.020040273666381836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__collection_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from `dbt-package-testing`.`shopify_source_tests`.`shopify_collection_data`", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__collection_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.069602Z", "completed_at": "2024-06-07T20:32:34.080867Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.082600Z", "completed_at": "2024-06-07T20:32:34.082604Z"}], "thread_id": "Thread-3", "execution_time": 0.019715070724487305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__customer_tag_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from `dbt-package-testing`.`shopify_source_tests`.`shopify_customer_tag_data`", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__customer_tag_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.073466Z", "completed_at": "2024-06-07T20:32:34.081723Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.084485Z", "completed_at": "2024-06-07T20:32:34.084488Z"}], "thread_id": "Thread-4", "execution_time": 0.017238855361938477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__customer_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from `dbt-package-testing`.`shopify_source_tests`.`shopify_customer_data`", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__customer_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.076865Z", "completed_at": "2024-06-07T20:32:34.082868Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.085469Z", "completed_at": "2024-06-07T20:32:34.085473Z"}], "thread_id": "Thread-2", "execution_time": 0.017949342727661133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__discount_code_tmp", "compiled": true, "compiled_code": "-- this model will be all NULL until you create a discount code in Shopify\n\n\n    \n    \n        \n        \n        \n        select * \n    from `dbt-package-testing`.`shopify_source_tests`.`shopify_discount_code_data`", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__discount_code_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.087740Z", "completed_at": "2024-06-07T20:32:34.095932Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.103530Z", "completed_at": "2024-06-07T20:32:34.103536Z"}], "thread_id": "Thread-1", "execution_time": 0.01960921287536621, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__fulfillment_event_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from `dbt-package-testing`.`shopify_source_tests`.`shopify_fulfillment_event_data`", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__fulfillment_event_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.092164Z", "completed_at": "2024-06-07T20:32:34.103827Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.106155Z", "completed_at": "2024-06-07T20:32:34.106159Z"}], "thread_id": "Thread-3", "execution_time": 0.021047115325927734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__fulfillment_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from `dbt-package-testing`.`shopify_source_tests`.`shopify_fulfillment_data`", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__fulfillment_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.096472Z", "completed_at": "2024-06-07T20:32:34.104748Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.107088Z", "completed_at": "2024-06-07T20:32:34.107092Z"}], "thread_id": "Thread-4", "execution_time": 0.016900062561035156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__inventory_item_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from `dbt-package-testing`.`shopify_source_tests`.`shopify_inventory_item_data`", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__inventory_item_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.099846Z", "completed_at": "2024-06-07T20:32:34.105582Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.108119Z", "completed_at": "2024-06-07T20:32:34.108123Z"}], "thread_id": "Thread-2", "execution_time": 0.01733994483947754, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__inventory_level_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from `dbt-package-testing`.`shopify_source_tests`.`shopify_inventory_level_data`", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__inventory_level_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.109193Z", "completed_at": "2024-06-07T20:32:34.115063Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.125869Z", "completed_at": "2024-06-07T20:32:34.125875Z"}], "thread_id": "Thread-1", "execution_time": 0.020402908325195312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__location_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from `dbt-package-testing`.`shopify_source_tests`.`shopify_location_data`", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__location_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.115550Z", "completed_at": "2024-06-07T20:32:34.126278Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.128754Z", "completed_at": "2024-06-07T20:32:34.128758Z"}], "thread_id": "Thread-3", "execution_time": 0.017094135284423828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__metafield_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from `dbt-package-testing`.`shopify_source_tests`.`shopify_metafield_data`", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__metafield_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.119188Z", "completed_at": "2024-06-07T20:32:34.127198Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.129433Z", "completed_at": "2024-06-07T20:32:34.129436Z"}], "thread_id": "Thread-4", "execution_time": 0.017052888870239258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__order_adjustment_tmp", "compiled": true, "compiled_code": "-- this model will be all NULL until you have made an order adjustment in Shopify\n\n\n    \n    \n        \n        \n        \n        select * \n    from `dbt-package-testing`.`shopify_source_tests`.`shopify_order_adjustment_data`", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__order_adjustment_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.122227Z", "completed_at": "2024-06-07T20:32:34.127457Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.129700Z", "completed_at": "2024-06-07T20:32:34.129703Z"}], "thread_id": "Thread-2", "execution_time": 0.01688098907470703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__order_discount_code_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from `dbt-package-testing`.`shopify_source_tests`.`shopify_order_discount_code_data`", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__order_discount_code_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.132145Z", "completed_at": "2024-06-07T20:32:34.137686Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.148398Z", "completed_at": "2024-06-07T20:32:34.148405Z"}], "thread_id": "Thread-1", "execution_time": 0.020142078399658203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__order_line_refund_tmp", "compiled": true, "compiled_code": "-- this model will be all NULL until you have made an order line refund in Shopify\n\n\n    \n    \n        \n        \n        \n        select * \n    from `dbt-package-testing`.`shopify_source_tests`.`shopify_order_line_refund_data`", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__order_line_refund_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.141380Z", "completed_at": "2024-06-07T20:32:34.149586Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.152301Z", "completed_at": "2024-06-07T20:32:34.152309Z"}], "thread_id": "Thread-4", "execution_time": 0.017147064208984375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__order_note_attribute_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from `dbt-package-testing`.`shopify_source_tests`.`shopify_order_note_attribute_data`", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__order_note_attribute_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.144632Z", "completed_at": "2024-06-07T20:32:34.150260Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.152818Z", "completed_at": "2024-06-07T20:32:34.152821Z"}], "thread_id": "Thread-2", "execution_time": 0.020561933517456055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__order_shipping_line_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from `dbt-package-testing`.`shopify_source_tests`.`shopify_order_shipping_line_data`", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__order_shipping_line_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.138177Z", "completed_at": "2024-06-07T20:32:34.150651Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.153081Z", "completed_at": "2024-06-07T20:32:34.153084Z"}], "thread_id": "Thread-3", "execution_time": 0.021962881088256836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__order_line_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from `dbt-package-testing`.`shopify_source_tests`.`shopify_order_line_data`", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__order_line_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.153884Z", "completed_at": "2024-06-07T20:32:34.159795Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.165155Z", "completed_at": "2024-06-07T20:32:34.165162Z"}], "thread_id": "Thread-1", "execution_time": 0.020487070083618164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__order_shipping_tax_line_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from `dbt-package-testing`.`shopify_source_tests`.`shopify_order_shipping_tax_line_data`", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__order_shipping_tax_line_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.161978Z", "completed_at": "2024-06-07T20:32:34.172399Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.174580Z", "completed_at": "2024-06-07T20:32:34.174585Z"}], "thread_id": "Thread-4", "execution_time": 0.01643514633178711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__order_tag_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from `dbt-package-testing`.`shopify_source_tests`.`shopify_order_tag_data`", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__order_tag_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.165462Z", "completed_at": "2024-06-07T20:32:34.173179Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.175284Z", "completed_at": "2024-06-07T20:32:34.175287Z"}], "thread_id": "Thread-2", "execution_time": 0.020483016967773438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__order_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from `dbt-package-testing`.`shopify_source_tests`.`shopify_order_data`", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__order_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.168497Z", "completed_at": "2024-06-07T20:32:34.173672Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.176065Z", "completed_at": "2024-06-07T20:32:34.176068Z"}], "thread_id": "Thread-3", "execution_time": 0.020793914794921875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__order_url_tag_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from `dbt-package-testing`.`shopify_source_tests`.`shopify_order_url_tag_data`", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__order_url_tag_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.176334Z", "completed_at": "2024-06-07T20:32:34.182942Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.188094Z", "completed_at": "2024-06-07T20:32:34.188100Z"}], "thread_id": "Thread-1", "execution_time": 0.02083301544189453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__price_rule_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from `dbt-package-testing`.`shopify_source_tests`.`shopify_price_rule_data`", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__price_rule_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.184739Z", "completed_at": "2024-06-07T20:32:34.195222Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.196955Z", "completed_at": "2024-06-07T20:32:34.196960Z"}], "thread_id": "Thread-4", "execution_time": 0.01601886749267578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__product_image_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from `dbt-package-testing`.`shopify_source_tests`.`shopify_product_image_data`", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__product_image_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.188376Z", "completed_at": "2024-06-07T20:32:34.196186Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.198724Z", "completed_at": "2024-06-07T20:32:34.198727Z"}], "thread_id": "Thread-2", "execution_time": 0.020676851272583008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__product_tag_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from `dbt-package-testing`.`shopify_source_tests`.`shopify_product_tag_data`", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__product_tag_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.191401Z", "completed_at": "2024-06-07T20:32:34.197216Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.203326Z", "completed_at": "2024-06-07T20:32:34.203330Z"}], "thread_id": "Thread-3", "execution_time": 0.021010875701904297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__product_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from `dbt-package-testing`.`shopify_source_tests`.`shopify_product_data`", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__product_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.198991Z", "completed_at": "2024-06-07T20:32:34.205490Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.210873Z", "completed_at": "2024-06-07T20:32:34.210879Z"}], "thread_id": "Thread-1", "execution_time": 0.018232107162475586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__product_variant_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from `dbt-package-testing`.`shopify_source_tests`.`shopify_product_variant_data`", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__product_variant_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.207023Z", "completed_at": "2024-06-07T20:32:34.218066Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.219861Z", "completed_at": "2024-06-07T20:32:34.219867Z"}], "thread_id": "Thread-4", "execution_time": 0.01679515838623047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__refund_tmp", "compiled": true, "compiled_code": "-- this model will be all NULL until you create a refund in Shopify\n\n\n    \n    \n        \n        \n        \n        select * \n    from `dbt-package-testing`.`shopify_source_tests`.`shopify_refund_data`", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__refund_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.211445Z", "completed_at": "2024-06-07T20:32:34.219593Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.225494Z", "completed_at": "2024-06-07T20:32:34.225499Z"}], "thread_id": "Thread-2", "execution_time": 0.020273208618164062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__shop_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from `dbt-package-testing`.`shopify_source_tests`.`shopify_shop_data`", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__shop_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.215108Z", "completed_at": "2024-06-07T20:32:34.220128Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.226112Z", "completed_at": "2024-06-07T20:32:34.226115Z"}], "thread_id": "Thread-3", "execution_time": 0.01736593246459961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__tax_line_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from `dbt-package-testing`.`shopify_source_tests`.`shopify_tax_line_data`", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__tax_line_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.221637Z", "completed_at": "2024-06-07T20:32:34.228261Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.233603Z", "completed_at": "2024-06-07T20:32:34.233608Z"}], "thread_id": "Thread-1", "execution_time": 0.01698780059814453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__tender_transaction_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from `dbt-package-testing`.`shopify_source_tests`.`shopify_tender_transaction_data`", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__tender_transaction_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.234171Z", "completed_at": "2024-06-07T20:32:34.235569Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.239350Z", "completed_at": "2024-06-07T20:32:34.239355Z"}], "thread_id": "Thread-2", "execution_time": 0.011713027954101562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_abandoned_checkout_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.236507Z", "completed_at": "2024-06-07T20:32:34.237759Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.240042Z", "completed_at": "2024-06-07T20:32:34.240046Z"}], "thread_id": "Thread-3", "execution_time": 0.008608102798461914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_abandoned_checkout_discount_code_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.229789Z", "completed_at": "2024-06-07T20:32:34.238034Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.240331Z", "completed_at": "2024-06-07T20:32:34.240334Z"}], "thread_id": "Thread-4", "execution_time": 0.015089988708496094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__transaction_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from `dbt-package-testing`.`shopify_source_tests`.`shopify_transaction_data`", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__transaction_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.242666Z", "completed_at": "2024-06-07T20:32:34.244084Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.246691Z", "completed_at": "2024-06-07T20:32:34.246696Z"}], "thread_id": "Thread-1", "execution_time": 0.010488748550415039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_abandoned_checkout_shipping_line_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.247427Z", "completed_at": "2024-06-07T20:32:34.249577Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.254446Z", "completed_at": "2024-06-07T20:32:34.254451Z"}], "thread_id": "Thread-2", "execution_time": 0.010860919952392578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_collection_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.250452Z", "completed_at": "2024-06-07T20:32:34.251713Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.255113Z", "completed_at": "2024-06-07T20:32:34.255116Z"}], "thread_id": "Thread-3", "execution_time": 0.010915040969848633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_collection_product_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.251998Z", "completed_at": "2024-06-07T20:32:34.253240Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.255373Z", "completed_at": "2024-06-07T20:32:34.255376Z"}], "thread_id": "Thread-4", "execution_time": 0.010966062545776367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_customer_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.257565Z", "completed_at": "2024-06-07T20:32:34.258889Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.261264Z", "completed_at": "2024-06-07T20:32:34.261269Z"}], "thread_id": "Thread-1", "execution_time": 0.009720087051391602, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_customer_tag_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.261938Z", "completed_at": "2024-06-07T20:32:34.263918Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.268755Z", "completed_at": "2024-06-07T20:32:34.268759Z"}], "thread_id": "Thread-2", "execution_time": 0.010406970977783203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_discount_code_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.264742Z", "completed_at": "2024-06-07T20:32:34.266020Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.269417Z", "completed_at": "2024-06-07T20:32:34.269421Z"}], "thread_id": "Thread-3", "execution_time": 0.01051187515258789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_fulfillment_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.266300Z", "completed_at": "2024-06-07T20:32:34.267551Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.269676Z", "completed_at": "2024-06-07T20:32:34.269679Z"}], "thread_id": "Thread-4", "execution_time": 0.010637044906616211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_fulfillment_event_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.271933Z", "completed_at": "2024-06-07T20:32:34.273268Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.275735Z", "completed_at": "2024-06-07T20:32:34.275740Z"}], "thread_id": "Thread-1", "execution_time": 0.009265899658203125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_inventory_item_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.276413Z", "completed_at": "2024-06-07T20:32:34.277776Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.283309Z", "completed_at": "2024-06-07T20:32:34.283313Z"}], "thread_id": "Thread-2", "execution_time": 0.010535955429077148, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_inventory_level_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.278601Z", "completed_at": "2024-06-07T20:32:34.280589Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.283969Z", "completed_at": "2024-06-07T20:32:34.283972Z"}], "thread_id": "Thread-3", "execution_time": 0.010618925094604492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_location_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.280878Z", "completed_at": "2024-06-07T20:32:34.282094Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.284222Z", "completed_at": "2024-06-07T20:32:34.284224Z"}], "thread_id": "Thread-4", "execution_time": 0.01071310043334961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_metafield_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.286405Z", "completed_at": "2024-06-07T20:32:34.287733Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.290118Z", "completed_at": "2024-06-07T20:32:34.290122Z"}], "thread_id": "Thread-1", "execution_time": 0.008996009826660156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_order_adjustment_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.290784Z", "completed_at": "2024-06-07T20:32:34.292094Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.297547Z", "completed_at": "2024-06-07T20:32:34.297551Z"}], "thread_id": "Thread-2", "execution_time": 0.010350942611694336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_order_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.292874Z", "completed_at": "2024-06-07T20:32:34.294759Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.298198Z", "completed_at": "2024-06-07T20:32:34.298201Z"}], "thread_id": "Thread-3", "execution_time": 0.010467767715454102, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_order_discount_code_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.295061Z", "completed_at": "2024-06-07T20:32:34.296313Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.298454Z", "completed_at": "2024-06-07T20:32:34.298457Z"}], "thread_id": "Thread-4", "execution_time": 0.010586023330688477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_order_line_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.300686Z", "completed_at": "2024-06-07T20:32:34.302033Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.304402Z", "completed_at": "2024-06-07T20:32:34.304405Z"}], "thread_id": "Thread-1", "execution_time": 0.00903773307800293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_order_line_refund_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.305075Z", "completed_at": "2024-06-07T20:32:34.306368Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.311851Z", "completed_at": "2024-06-07T20:32:34.311855Z"}], "thread_id": "Thread-2", "execution_time": 0.0103302001953125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_order_note_attribute_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.307156Z", "completed_at": "2024-06-07T20:32:34.308424Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.312508Z", "completed_at": "2024-06-07T20:32:34.312511Z"}], "thread_id": "Thread-3", "execution_time": 0.010421991348266602, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_order_shipping_line_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.308701Z", "completed_at": "2024-06-07T20:32:34.310631Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.312763Z", "completed_at": "2024-06-07T20:32:34.312765Z"}], "thread_id": "Thread-4", "execution_time": 0.010537147521972656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_order_shipping_tax_line_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.314917Z", "completed_at": "2024-06-07T20:32:34.316209Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.318585Z", "completed_at": "2024-06-07T20:32:34.318589Z"}], "thread_id": "Thread-1", "execution_time": 0.008927106857299805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_order_tag_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.319248Z", "completed_at": "2024-06-07T20:32:34.320566Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.325934Z", "completed_at": "2024-06-07T20:32:34.325938Z"}], "thread_id": "Thread-2", "execution_time": 0.010246038436889648, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_order_url_tag_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.321357Z", "completed_at": "2024-06-07T20:32:34.322614Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.326589Z", "completed_at": "2024-06-07T20:32:34.326592Z"}], "thread_id": "Thread-3", "execution_time": 0.010324954986572266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_price_rule_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.322890Z", "completed_at": "2024-06-07T20:32:34.324735Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.326841Z", "completed_at": "2024-06-07T20:32:34.326843Z"}], "thread_id": "Thread-4", "execution_time": 0.010428905487060547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_product_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.328970Z", "completed_at": "2024-06-07T20:32:34.330290Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.332672Z", "completed_at": "2024-06-07T20:32:34.332676Z"}], "thread_id": "Thread-1", "execution_time": 0.008941888809204102, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_product_image_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.333336Z", "completed_at": "2024-06-07T20:32:34.334656Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.339364Z", "completed_at": "2024-06-07T20:32:34.339368Z"}], "thread_id": "Thread-2", "execution_time": 0.009589910507202148, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_product_tag_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.335454Z", "completed_at": "2024-06-07T20:32:34.336681Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.340013Z", "completed_at": "2024-06-07T20:32:34.340016Z"}], "thread_id": "Thread-3", "execution_time": 0.00967097282409668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_product_variant_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.336947Z", "completed_at": "2024-06-07T20:32:34.338176Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.340265Z", "completed_at": "2024-06-07T20:32:34.340268Z"}], "thread_id": "Thread-4", "execution_time": 0.009778976440429688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_refund_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.342432Z", "completed_at": "2024-06-07T20:32:34.344498Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.347001Z", "completed_at": "2024-06-07T20:32:34.347006Z"}], "thread_id": "Thread-1", "execution_time": 0.009882926940917969, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_shop_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.347685Z", "completed_at": "2024-06-07T20:32:34.349019Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.353779Z", "completed_at": "2024-06-07T20:32:34.353783Z"}], "thread_id": "Thread-2", "execution_time": 0.00975179672241211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_tax_line_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.349817Z", "completed_at": "2024-06-07T20:32:34.351074Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.354449Z", "completed_at": "2024-06-07T20:32:34.354452Z"}], "thread_id": "Thread-3", "execution_time": 0.009810924530029297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_tender_transaction_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.351349Z", "completed_at": "2024-06-07T20:32:34.352561Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.354705Z", "completed_at": "2024-06-07T20:32:34.354707Z"}], "thread_id": "Thread-4", "execution_time": 0.009914875030517578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.shopify_source_integration_tests.shopify_transaction_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.373977Z", "completed_at": "2024-06-07T20:32:34.758712Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.759276Z", "completed_at": "2024-06-07T20:32:34.759282Z"}], "thread_id": "Thread-4", "execution_time": 0.39577698707580566, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__abandoned_checkout_shipping_line", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__abandoned_checkout_shipping_line_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    carrier_identifier\n    \n as \n    \n    carrier_identifier\n    \n, \n    \n    \n    checkout_id\n    \n as \n    \n    checkout_id\n    \n, \n    \n    \n    code\n    \n as \n    \n    code\n    \n, \n    \n    \n    delivery_category\n    \n as \n    \n    delivery_category\n    \n, \n    \n    \n    delivery_expectation_range\n    \n as \n    \n    delivery_expectation_range\n    \n, \n    \n    \n    delivery_expectation_range_max\n    \n as \n    \n    delivery_expectation_range_max\n    \n, \n    \n    \n    delivery_expectation_range_min\n    \n as \n    \n    delivery_expectation_range_min\n    \n, \n    \n    \n    delivery_expectation_type\n    \n as \n    \n    delivery_expectation_type\n    \n, \n    \n    \n    discounted_price\n    \n as \n    \n    discounted_price\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    index\n    \n as \n    \n    index\n    \n, \n    \n    \n    phone\n    \n as \n    \n    phone\n    \n, \n    \n    \n    price\n    \n as \n    \n    price\n    \n, \n    \n    \n    requested_fulfillment_service_id\n    \n as \n    \n    requested_fulfillment_service_id\n    \n, \n    \n    \n    source\n    \n as \n    \n    source\n    \n, \n    \n    \n    title\n    \n as \n    \n    title\n    \n\n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as abandoned_checkout_shipping_line_id,\n        checkout_id,\n        index,\n        carrier_identifier,\n        code as shipping_code,\n        delivery_category,\n        delivery_expectation_range,\n        delivery_expectation_range_max,\n        delivery_expectation_range_min,\n        delivery_expectation_type,\n        discounted_price,\n        phone,\n        price,\n        requested_fulfillment_service_id,\n        source,\n        title,\n        timestamp(datetime(cast(_fivetran_synced as timestamp), 'UTC')) as _fivetran_synced,\n        source_relation\n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__abandoned_checkout_shipping_line`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.356884Z", "completed_at": "2024-06-07T20:32:34.810639Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.811206Z", "completed_at": "2024-06-07T20:32:34.811213Z"}], "thread_id": "Thread-1", "execution_time": 0.457690954208374, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__abandoned_checkout_discount_code", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__abandoned_checkout_discount_code_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    checkout_id\n    \n as \n    \n    checkout_id\n    \n, \n    \n    \n    code\n    \n as \n    \n    code\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    discount_id\n    \n as \n    \n    discount_id\n    \n, \n    \n    \n    index\n    \n as \n    \n    index\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n\n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        checkout_id,\n        upper(code) as code,\n        discount_id,\n        amount,\n        type,\n        timestamp(datetime(cast(created_at as timestamp), 'UTC')) as created_at,\n        timestamp(datetime(cast(updated_at as timestamp), 'UTC')) as updated_at,\n        timestamp(datetime(cast(_fivetran_synced as timestamp), 'UTC')) as _fivetran_synced,\n        source_relation, \n        case when checkout_id is null and code is null and index is null\n            then row_number() over(partition by source_relation order by source_relation)\n            else row_number() over(partition by checkout_id, upper(code), source_relation order by index desc)\n        end as index\n\n    from fields\n    \n)\n\nselect *\nfrom final\nwhere index = 1", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__abandoned_checkout_discount_code`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.370631Z", "completed_at": "2024-06-07T20:32:34.813186Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.818029Z", "completed_at": "2024-06-07T20:32:34.818036Z"}], "thread_id": "Thread-3", "execution_time": 0.45551323890686035, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__collection_product", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__collection_product_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    collection_id\n    \n as \n    \n    collection_id\n    \n, \n    \n    \n    product_id\n    \n as \n    \n    product_id\n    \n\n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        collection_id,\n        product_id,\n        timestamp(datetime(cast(_fivetran_synced as timestamp), 'UTC')) as _fivetran_synced,\n        source_relation\n        \n    from fields\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__collection_product`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.365509Z", "completed_at": "2024-06-07T20:32:34.817506Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:34.819645Z", "completed_at": "2024-06-07T20:32:34.819649Z"}], "thread_id": "Thread-2", "execution_time": 0.4581277370452881, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__abandoned_checkout", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__abandoned_checkout_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    abandoned_checkout_url\n    \n as \n    \n    abandoned_checkout_url\n    \n, \n    \n    \n    billing_address_address_1\n    \n as \n    \n    billing_address_address_1\n    \n, \n    cast(null as string) as \n    \n    billing_address_address_2\n    \n , \n    \n    \n    billing_address_city\n    \n as \n    \n    billing_address_city\n    \n, \n    \n    \n    billing_address_company\n    \n as \n    \n    billing_address_company\n    \n, \n    \n    \n    billing_address_country\n    \n as \n    \n    billing_address_country\n    \n, \n    \n    \n    billing_address_country_code\n    \n as \n    \n    billing_address_country_code\n    \n, \n    \n    \n    billing_address_first_name\n    \n as \n    \n    billing_address_first_name\n    \n, \n    \n    \n    billing_address_last_name\n    \n as \n    \n    billing_address_last_name\n    \n, \n    \n    \n    billing_address_latitude\n    \n as \n    \n    billing_address_latitude\n    \n, \n    \n    \n    billing_address_longitude\n    \n as \n    \n    billing_address_longitude\n    \n, \n    \n    \n    billing_address_name\n    \n as \n    \n    billing_address_name\n    \n, \n    \n    \n    billing_address_phone\n    \n as \n    \n    billing_address_phone\n    \n, \n    \n    \n    billing_address_province\n    \n as \n    \n    billing_address_province\n    \n, \n    \n    \n    billing_address_province_code\n    \n as \n    \n    billing_address_province_code\n    \n, \n    \n    \n    billing_address_zip\n    \n as \n    \n    billing_address_zip\n    \n, \n    \n    \n    buyer_accepts_marketing\n    \n as \n    \n    buyer_accepts_marketing\n    \n, \n    \n    \n    cart_token\n    \n as \n    \n    cart_token\n    \n, \n    \n    \n    closed_at\n    \n as \n    \n    closed_at\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    customer_id\n    \n as \n    \n    customer_id\n    \n, \n    \n    \n    customer_locale\n    \n as \n    \n    customer_locale\n    \n, \n    \n    \n    device_id\n    \n as \n    \n    device_id\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    gateway\n    \n as \n    \n    gateway\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    landing_site_base_url\n    \n as \n    \n    landing_site_base_url\n    \n, \n    \n    \n    location_id\n    \n as \n    \n    location_id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    note\n    \n as \n    \n    note\n    \n, \n    \n    \n    phone\n    \n as \n    \n    phone\n    \n, \n    \n    \n    presentment_currency\n    \n as \n    \n    presentment_currency\n    \n, \n    \n    \n    referring_site\n    \n as \n    \n    referring_site\n    \n, \n    \n    \n    shipping_address_address_1\n    \n as \n    \n    shipping_address_address_1\n    \n, \n    cast(null as string) as \n    \n    shipping_address_address_2\n    \n , \n    \n    \n    shipping_address_city\n    \n as \n    \n    shipping_address_city\n    \n, \n    \n    \n    shipping_address_company\n    \n as \n    \n    shipping_address_company\n    \n, \n    \n    \n    shipping_address_country\n    \n as \n    \n    shipping_address_country\n    \n, \n    \n    \n    shipping_address_country_code\n    \n as \n    \n    shipping_address_country_code\n    \n, \n    \n    \n    shipping_address_first_name\n    \n as \n    \n    shipping_address_first_name\n    \n, \n    \n    \n    shipping_address_last_name\n    \n as \n    \n    shipping_address_last_name\n    \n, \n    \n    \n    shipping_address_latitude\n    \n as \n    \n    shipping_address_latitude\n    \n, \n    \n    \n    shipping_address_longitude\n    \n as \n    \n    shipping_address_longitude\n    \n, \n    \n    \n    shipping_address_name\n    \n as \n    \n    shipping_address_name\n    \n, \n    \n    \n    shipping_address_phone\n    \n as \n    \n    shipping_address_phone\n    \n, \n    \n    \n    shipping_address_province\n    \n as \n    \n    shipping_address_province\n    \n, \n    \n    \n    shipping_address_province_code\n    \n as \n    \n    shipping_address_province_code\n    \n, \n    \n    \n    shipping_address_zip\n    \n as \n    \n    shipping_address_zip\n    \n, \n    \n    \n    source_name\n    \n as \n    \n    source_name\n    \n, \n    \n    \n    subtotal_price\n    \n as \n    \n    subtotal_price\n    \n, \n    \n    \n    taxes_included\n    \n as \n    \n    taxes_included\n    \n, \n    \n    \n    token\n    \n as \n    \n    token\n    \n, \n    \n    \n    total_discounts\n    \n as \n    \n    total_discounts\n    \n, \n    \n    \n    total_duties\n    \n as \n    \n    total_duties\n    \n, \n    \n    \n    total_line_items_price\n    \n as \n    \n    total_line_items_price\n    \n, \n    \n    \n    total_price\n    \n as \n    \n    total_price\n    \n, \n    \n    \n    total_tax\n    \n as \n    \n    total_tax\n    \n, \n    \n    \n    total_weight\n    \n as \n    \n    total_weight\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    user_id\n    \n as \n    \n    user_id\n    \n\n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_deleted as is_deleted,\n        abandoned_checkout_url,\n        billing_address_address_1,\n        billing_address_address_2,\n        billing_address_city,\n        billing_address_company,\n        billing_address_country,\n        billing_address_country_code,\n        billing_address_first_name,\n        billing_address_last_name,\n        billing_address_latitude,\n        billing_address_longitude,\n        billing_address_name,\n        billing_address_phone,\n        billing_address_province,\n        billing_address_province_code,\n        billing_address_zip,\n        buyer_accepts_marketing as has_buyer_accepted_marketing,\n        cart_token,\n        timestamp(datetime(cast(created_at as timestamp), 'UTC')) as created_at,\n        timestamp(datetime(cast(closed_at as timestamp), 'UTC')) as closed_at,\n        currency as shop_currency,\n        customer_id,\n        customer_locale,\n        device_id,\n        email,\n        gateway,\n        id as checkout_id,\n        landing_site_base_url,\n        location_id,\n        name,\n        note,\n        phone,\n        presentment_currency,\n        referring_site,\n        shipping_address_address_1,\n        shipping_address_address_2,\n        shipping_address_city,\n        shipping_address_company,\n        shipping_address_country,\n        shipping_address_country_code,\n        shipping_address_first_name,\n        shipping_address_last_name,\n        shipping_address_latitude,\n        shipping_address_longitude,\n        shipping_address_name,\n        shipping_address_phone,\n        shipping_address_province,\n        shipping_address_province_code,\n        shipping_address_zip,\n        source_name,\n        subtotal_price,\n        taxes_included as has_taxes_included,\n        token,\n        total_discounts,\n        total_duties,\n        total_line_items_price,\n        total_price,\n        total_tax,\n        total_weight,\n        timestamp(datetime(cast(updated_at as timestamp), 'UTC')) as updated_at,\n        user_id,\n        timestamp(datetime(cast(_fivetran_synced as timestamp), 'UTC')) as _fivetran_synced,\n        source_relation\n        \n    from fields\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__abandoned_checkout`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.828556Z", "completed_at": "2024-06-07T20:32:35.219760Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:35.220310Z", "completed_at": "2024-06-07T20:32:35.220318Z"}], "thread_id": "Thread-2", "execution_time": 0.3985931873321533, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__discount_code", "compiled": true, "compiled_code": "-- this model will be all NULL until you create a discount code in Shopify\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__discount_code_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    code\n    \n as \n    \n    code\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    price_rule_id\n    \n as \n    \n    price_rule_id\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    usage_count\n    \n as \n    \n    usage_count\n    \n\n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        id as discount_code_id,\n        upper(code) as code,\n        price_rule_id,\n        usage_count,\n        timestamp(datetime(cast(created_at as timestamp), 'UTC')) as created_at,\n        timestamp(datetime(cast(updated_at as timestamp), 'UTC')) as updated_at,\n        timestamp(datetime(cast(_fivetran_synced as timestamp), 'UTC')) as _fivetran_synced,\n        source_relation\n        \n    from fields\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__discount_code`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.822643Z", "completed_at": "2024-06-07T20:32:35.221789Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:35.234019Z", "completed_at": "2024-06-07T20:32:35.234026Z"}], "thread_id": "Thread-3", "execution_time": 0.4783790111541748, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__customer", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__customer_tmp`\n\n),\n\nfields as (\n\n    select\n    \n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    accepts_marketing\n    \n as \n    \n    accepts_marketing\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    default_address_id\n    \n as \n    \n    default_address_id\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    first_name\n    \n as \n    \n    first_name\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    last_name\n    \n as \n    \n    last_name\n    \n, \n    \n    \n    orders_count\n    \n as \n    \n    orders_count\n    \n, \n    \n    \n    phone\n    \n as \n    \n    phone\n    \n, \n    \n    \n    state\n    \n as \n    \n    state\n    \n, \n    \n    \n    tax_exempt\n    \n as \n    \n    tax_exempt\n    \n, \n    \n    \n    total_spent\n    \n as \n    \n    total_spent\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    verified_email\n    \n as \n    \n    verified_email\n    \n, \n    cast(null as timestamp) as \n    \n    email_marketing_consent_consent_updated_at\n    \n , \n    cast(null as string) as \n    \n    email_marketing_consent_opt_in_level\n    \n , \n    cast(null as string) as \n    \n    email_marketing_consent_state\n    \n , \n    cast(null as string) as \n    \n    note\n    \n , \n    cast(null as timestamp) as \n    \n    accepts_marketing_updated_at\n    \n , \n    cast(null as string) as \n    \n    marketing_opt_in_level\n    \n , \n    cast(null as string) as \n    \n    currency\n    \n \n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n\n),\n\nfinal as (\n\n    select \n        id as customer_id,\n        lower(email) as email,\n        first_name,\n        last_name,\n        orders_count,\n        default_address_id,\n        phone,\n        lower(state) as account_state,\n        tax_exempt as is_tax_exempt,\n        total_spent,\n        verified_email as is_verified_email,\n        note,\n        currency,\n        case \n            when email_marketing_consent_state is null then\n                case \n                    when accepts_marketing is null then null\n                    when accepts_marketing then 'subscribed (legacy)' \n                    else 'not_subscribed (legacy)' end\n            else lower(email_marketing_consent_state) end as marketing_consent_state,\n        lower(coalesce(email_marketing_consent_opt_in_level, marketing_opt_in_level)) as marketing_opt_in_level,\n\n        timestamp(datetime(cast(coalesce(accepts_marketing_updated_at, email_marketing_consent_consent_updated_at) as timestamp), 'UTC')) as marketing_consent_updated_at,\n        timestamp(datetime(cast(created_at as timestamp), 'UTC')) as created_timestamp,\n        timestamp(datetime(cast(updated_at as timestamp), 'UTC')) as updated_timestamp,\n        timestamp(datetime(cast(_fivetran_synced as timestamp), 'UTC')) as _fivetran_synced,\n        source_relation\n        \n        \n\n\n\n\n\n    from fields\n    \n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__customer`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.760992Z", "completed_at": "2024-06-07T20:32:35.302349Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:35.308304Z", "completed_at": "2024-06-07T20:32:35.308310Z"}], "thread_id": "Thread-4", "execution_time": 0.5489678382873535, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__collection", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__collection_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    disjunctive\n    \n as \n    \n    disjunctive\n    \n, \n    \n    \n    handle\n    \n as \n    \n    handle\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    published_at\n    \n as \n    \n    published_at\n    \n, \n    \n    \n    published_scope\n    \n as \n    \n    published_scope\n    \n, \n    \n    \n    rules\n    \n as \n    \n    rules\n    \n, \n    \n    \n    sort_order\n    \n as \n    \n    sort_order\n    \n, \n    \n    \n    title\n    \n as \n    \n    title\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n\n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        id as collection_id,\n        _fivetran_deleted as is_deleted,\n        case \n            when disjunctive is null then null\n            when disjunctive then 'disjunctive'\n            else 'conjunctive' end as rule_logic,\n        handle,\n        published_scope,\n        rules,\n        sort_order,\n        title,\n        timestamp(datetime(cast(published_at as timestamp), 'UTC')) as published_at,\n        timestamp(datetime(cast(updated_at as timestamp), 'UTC')) as updated_at,\n        timestamp(datetime(cast(_fivetran_synced as timestamp), 'UTC')) as _fivetran_synced,\n        source_relation\n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__collection`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:34.813495Z", "completed_at": "2024-06-07T20:32:35.303192Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:35.309924Z", "completed_at": "2024-06-07T20:32:35.309928Z"}], "thread_id": "Thread-1", "execution_time": 0.49851202964782715, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__customer_tag", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__customer_tag_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    index\n    \n as \n    \n    index\n    \n, \n    \n    \n    customer_id\n    \n as \n    \n    customer_id\n    \n, \n    \n    \n    value\n    \n as \n    \n    value\n    \n\n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        customer_id,\n        index,\n        value,\n        timestamp(datetime(cast(_fivetran_synced as timestamp), 'UTC')) as _fivetran_synced,\n        source_relation\n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__customer_tag`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:35.313077Z", "completed_at": "2024-06-07T20:32:35.699827Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:35.700378Z", "completed_at": "2024-06-07T20:32:35.700385Z"}], "thread_id": "Thread-4", "execution_time": 0.389509916305542, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__inventory_item", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__inventory_item_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    cost\n    \n as \n    \n    cost\n    \n, \n    \n    \n    country_code_of_origin\n    \n as \n    \n    country_code_of_origin\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    province_code_of_origin\n    \n as \n    \n    province_code_of_origin\n    \n, \n    \n    \n    requires_shipping\n    \n as \n    \n    requires_shipping\n    \n, \n    \n    \n    sku\n    \n as \n    \n    sku\n    \n, \n    \n    \n    tracked\n    \n as \n    \n    tracked\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n\n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        id as inventory_item_id,\n        sku,\n        _fivetran_deleted as is_deleted, -- won't filter out for now\n        cost,\n        country_code_of_origin,\n        province_code_of_origin,\n        requires_shipping as is_shipping_required,\n        tracked as is_inventory_quantity_tracked,\n        timestamp(datetime(cast(created_at as timestamp), 'UTC')) as created_at,\n        timestamp(datetime(cast(updated_at as timestamp), 'UTC')) as updated_at,\n        timestamp(datetime(cast(_fivetran_synced as timestamp), 'UTC')) as _fivetran_synced,\n        source_relation\n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__inventory_item`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:35.318447Z", "completed_at": "2024-06-07T20:32:35.753806Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:35.754418Z", "completed_at": "2024-06-07T20:32:35.754425Z"}], "thread_id": "Thread-1", "execution_time": 0.4425969123840332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__inventory_level", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__inventory_level_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    available\n    \n as \n    \n    available\n    \n, \n    \n    \n    inventory_item_id\n    \n as \n    \n    inventory_item_id\n    \n, \n    \n    \n    location_id\n    \n as \n    \n    location_id\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n\n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        inventory_item_id,\n        location_id,\n        available as available_quantity,\n        timestamp(datetime(cast(updated_at as timestamp), 'UTC')) as updated_at,\n        timestamp(datetime(cast(_fivetran_synced as timestamp), 'UTC')) as _fivetran_synced,\n        source_relation\n        \n    from fields\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__inventory_level`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:35.303454Z", "completed_at": "2024-06-07T20:32:35.754688Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:35.756124Z", "completed_at": "2024-06-07T20:32:35.756128Z"}], "thread_id": "Thread-3", "execution_time": 0.45529985427856445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__fulfillment", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__fulfillment_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    location_id\n    \n as \n    \n    location_id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    order_id\n    \n as \n    \n    order_id\n    \n, \n    \n    \n    service\n    \n as \n    \n    service\n    \n, \n    \n    \n    shipment_status\n    \n as \n    \n    shipment_status\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    tracking_company\n    \n as \n    \n    tracking_company\n    \n, \n    \n    \n    tracking_number\n    \n as \n    \n    tracking_number\n    \n, \n    \n    \n    tracking_numbers\n    \n as \n    \n    tracking_numbers\n    \n, \n    \n    \n    tracking_urls\n    \n as \n    \n    tracking_urls\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n\n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        id as fulfillment_id,\n        location_id,\n        order_id,\n        name,\n        service,\n        shipment_status,\n        lower(status) as status,\n        tracking_company,\n        tracking_number,\n        tracking_numbers,\n        tracking_urls,\n        timestamp(datetime(cast(created_at as timestamp), 'UTC')) as created_at,\n        timestamp(datetime(cast(updated_at as timestamp), 'UTC')) as updated_at,\n        timestamp(datetime(cast(_fivetran_synced as timestamp), 'UTC')) as _fivetran_synced,\n        source_relation\n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__fulfillment`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:35.702110Z", "completed_at": "2024-06-07T20:32:36.033783Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:36.034345Z", "completed_at": "2024-06-07T20:32:36.034352Z"}], "thread_id": "Thread-4", "execution_time": 0.3333470821380615, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__location", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__location_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    active\n    \n as \n    \n    active\n    \n, \n    \n    \n    address_1\n    \n as \n    \n    address_1\n    \n, \n    \n    \n    address_2\n    \n as \n    \n    address_2\n    \n, \n    \n    \n    city\n    \n as \n    \n    city\n    \n, \n    \n    \n    country\n    \n as \n    \n    country\n    \n, \n    \n    \n    country_code\n    \n as \n    \n    country_code\n    \n, \n    \n    \n    country_name\n    \n as \n    \n    country_name\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    legacy\n    \n as \n    \n    legacy\n    \n, \n    \n    \n    localized_country_name\n    \n as \n    \n    localized_country_name\n    \n, \n    \n    \n    localized_province_name\n    \n as \n    \n    localized_province_name\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    phone\n    \n as \n    \n    phone\n    \n, \n    \n    \n    province\n    \n as \n    \n    province\n    \n, \n    \n    \n    province_code\n    \n as \n    \n    province_code\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    zip\n    \n as \n    \n    zip\n    \n\n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        id as location_id,\n        name,\n        _fivetran_deleted as is_deleted,\n        active as is_active,\n        address_1,\n        address_2,\n        city,\n        country,\n        country_code,\n        country_name,\n        legacy as is_legacy,\n        localized_country_name,\n        localized_province_name,\n        phone,\n        province,\n        province_code,\n        zip,\n        timestamp(datetime(cast(created_at as timestamp), 'UTC')) as created_at,\n        timestamp(datetime(cast(updated_at as timestamp), 'UTC')) as updated_at,\n        timestamp(datetime(cast(_fivetran_synced as timestamp), 'UTC')) as _fivetran_synced,\n        source_relation\n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__location`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:35.222943Z", "completed_at": "2024-06-07T20:32:36.058174Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:36.058722Z", "completed_at": "2024-06-07T20:32:36.058728Z"}], "thread_id": "Thread-2", "execution_time": 0.8378071784973145, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__fulfillment_event", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__fulfillment_event_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    address_1\n    \n as \n    \n    address_1\n    \n, \n    \n    \n    city\n    \n as \n    \n    city\n    \n, \n    \n    \n    country\n    \n as \n    \n    country\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    estimated_delivery_at\n    \n as \n    \n    estimated_delivery_at\n    \n, \n    \n    \n    fulfillment_id\n    \n as \n    \n    fulfillment_id\n    \n, \n    \n    \n    happened_at\n    \n as \n    \n    happened_at\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    latitude\n    \n as \n    \n    latitude\n    \n, \n    \n    \n    longitude\n    \n as \n    \n    longitude\n    \n, \n    \n    \n    message\n    \n as \n    \n    message\n    \n, \n    \n    \n    order_id\n    \n as \n    \n    order_id\n    \n, \n    \n    \n    province\n    \n as \n    \n    province\n    \n, \n    \n    \n    shop_id\n    \n as \n    \n    shop_id\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    zip\n    \n as \n    \n    zip\n    \n\n\n\n        \n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        id as fulfillment_event_id,\n        fulfillment_id,\n        shop_id,\n        order_id,\n        status,\n        message,\n        timestamp(datetime(cast(estimated_delivery_at as timestamp), 'UTC')) as estimated_delivery_at,\n        timestamp(datetime(cast(happened_at as timestamp), 'UTC')) as happened_at,\n        address_1,\n        city,\n        province,\n        country,\n        zip,\n        latitude,\n        longitude,\n        timestamp(datetime(cast(created_at as timestamp), 'UTC')) as created_at,\n        timestamp(datetime(cast(updated_at as timestamp), 'UTC')) as updated_at,\n        timestamp(datetime(cast(_fivetran_synced as timestamp), 'UTC')) as _fivetran_synced,\n        source_relation\n\n    from fields\n\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__fulfillment_event`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:35.758061Z", "completed_at": "2024-06-07T20:32:36.094775Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:36.095353Z", "completed_at": "2024-06-07T20:32:36.095360Z"}], "thread_id": "Thread-1", "execution_time": 0.3393971920013428, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__metafield", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__metafield_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    key\n    \n as \n    \n    key\n    \n, \n    \n    \n    namespace\n    \n as \n    \n    namespace\n    \n, \n    \n    \n    owner_id\n    \n as \n    \n    owner_id\n    \n, \n    \n    \n    owner_resource\n    \n as \n    \n    owner_resource\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n, \n    \n    \n    value_type\n    \n as \n    \n    value_type\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    value\n    \n as \n    \n    value\n    \n\n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        id as metafield_id,\n        description,\n        namespace,\n        key,\n        value,\n        lower(coalesce(type, value_type)) as value_type,\n        owner_id as owner_resource_id,\n        lower(owner_resource) as owner_resource,\n        timestamp(datetime(cast(created_at as timestamp), 'UTC')) as created_at,\n        timestamp(datetime(cast(updated_at as timestamp), 'UTC')) as updated_at,\n        timestamp(datetime(cast(_fivetran_synced as timestamp), 'UTC')) as _fivetran_synced,\n        lower(namespace || '_' || key) as metafield_reference,\n        case when id is null and updated_at is null\n            then row_number() over(partition by source_relation order by source_relation) = 1\n            else row_number() over(partition by id, source_relation order by updated_at desc) = 1\n        end as is_most_recent_record,\n        source_relation\n        \n    from fields\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__metafield`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:35.764273Z", "completed_at": "2024-06-07T20:32:36.193101Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:36.193650Z", "completed_at": "2024-06-07T20:32:36.193657Z"}], "thread_id": "Thread-3", "execution_time": 0.4311532974243164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__order_adjustment", "compiled": true, "compiled_code": "-- this model will be all NULL until you have made an order adjustment in Shopify\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__order_adjustment_tmp`\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    order_id\n    \n as \n    \n    order_id\n    \n, \n    \n    \n    refund_id\n    \n as \n    \n    refund_id\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    amount_set\n    \n as \n    \n    amount_set\n    \n, \n    \n    \n    tax_amount\n    \n as \n    \n    tax_amount\n    \n, \n    \n    \n    tax_amount_set\n    \n as \n    \n    tax_amount_set\n    \n, \n    \n    \n    kind\n    \n as \n    \n    kind\n    \n, \n    \n    \n    reason\n    \n as \n    \n    reason\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n\n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n        \n    from base\n),\n\nfinal as (\n\n    select\n        id as order_adjustment_id,\n        order_id,\n        refund_id,\n        amount,\n        amount_set,\n        tax_amount,\n        tax_amount_set,\n        kind,\n        reason,\n        timestamp(datetime(cast(_fivetran_synced as timestamp), 'UTC')) as _fivetran_synced,\n        source_relation\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__order_adjustment`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:36.097353Z", "completed_at": "2024-06-07T20:32:36.416773Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:36.417328Z", "completed_at": "2024-06-07T20:32:36.417335Z"}], "thread_id": "Thread-1", "execution_time": 0.3212447166442871, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__order_note_attribute", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__order_note_attribute_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    order_id\n    \n as \n    \n    order_id\n    \n, \n    \n    \n    value\n    \n as \n    \n    value\n    \n\n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        order_id,\n        name,\n        value,\n        timestamp(datetime(cast(_fivetran_synced as timestamp), 'UTC')) as _fivetran_synced,\n        source_relation\n        \n    from fields\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__order_note_attribute`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:36.036069Z", "completed_at": "2024-06-07T20:32:36.466501Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:36.467044Z", "completed_at": "2024-06-07T20:32:36.467050Z"}], "thread_id": "Thread-4", "execution_time": 0.43207693099975586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__order_discount_code", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__order_discount_code_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    code\n    \n as \n    \n    code\n    \n, \n    \n    \n    index\n    \n as \n    \n    index\n    \n, \n    \n    \n    order_id\n    \n as \n    \n    order_id\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n\n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        order_id,\n        index,\n        upper(code) as code,\n        type,\n        amount,\n        timestamp(datetime(cast(_fivetran_synced as timestamp), 'UTC')) as _fivetran_synced,\n        source_relation\n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__order_discount_code`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:36.060690Z", "completed_at": "2024-06-07T20:32:36.529008Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:36.529553Z", "completed_at": "2024-06-07T20:32:36.529559Z"}], "thread_id": "Thread-2", "execution_time": 0.47016024589538574, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__order_line_refund", "compiled": true, "compiled_code": "-- this model will be all NULL until you have made an order line refund in Shopify\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__order_line_refund_tmp`\n\n),\n\nfields as (\n\n    select\n    \n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    location_id\n    \n as \n    \n    location_id\n    \n, \n    \n    \n    order_line_id\n    \n as \n    \n    order_line_id\n    \n, \n    \n    \n    subtotal\n    \n as \n    \n    subtotal\n    \n, \n    \n    \n    subtotal_set\n    \n as \n    \n    subtotal_set\n    \n, \n    \n    \n    total_tax\n    \n as \n    \n    total_tax\n    \n, \n    \n    \n    total_tax_set\n    \n as \n    \n    total_tax_set\n    \n, \n    \n    \n    quantity\n    \n as \n    \n    quantity\n    \n, \n    \n    \n    refund_id\n    \n as \n    \n    refund_id\n    \n, \n    \n    \n    restock_type\n    \n as \n    \n    restock_type\n    \n\n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n\n),\n\nfinal as (\n\n    select\n        id as order_line_refund_id,\n        location_id,\n        order_line_id,\n        subtotal,\n        subtotal_set,\n        total_tax,\n        total_tax_set,\n        quantity,\n        refund_id,\n        restock_type,\n        timestamp(datetime(cast(_fivetran_synced as timestamp), 'UTC')) as _fivetran_synced,\n        source_relation\n\n        \n\n\n\n\n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__order_line_refund`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:36.195351Z", "completed_at": "2024-06-07T20:32:36.548914Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:36.549449Z", "completed_at": "2024-06-07T20:32:36.549455Z"}], "thread_id": "Thread-3", "execution_time": 0.35518598556518555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__order_shipping_line", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__order_shipping_line_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    carrier_identifier\n    \n as \n    \n    carrier_identifier\n    \n, \n    \n    \n    code\n    \n as \n    \n    code\n    \n, \n    \n    \n    delivery_category\n    \n as \n    \n    delivery_category\n    \n, \n    \n    \n    discounted_price\n    \n as \n    \n    discounted_price\n    \n, \n    \n    \n    discounted_price_set\n    \n as \n    \n    discounted_price_set\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    order_id\n    \n as \n    \n    order_id\n    \n, \n    \n    \n    phone\n    \n as \n    \n    phone\n    \n, \n    \n    \n    price\n    \n as \n    \n    price\n    \n, \n    \n    \n    price_set\n    \n as \n    \n    price_set\n    \n, \n    \n    \n    requested_fulfillment_service_id\n    \n as \n    \n    requested_fulfillment_service_id\n    \n, \n    \n    \n    source\n    \n as \n    \n    source\n    \n, \n    \n    \n    title\n    \n as \n    \n    title\n    \n\n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        id as order_shipping_line_id,\n        order_id,\n        carrier_identifier,\n        code,\n        delivery_category,\n        discounted_price,\n        discounted_price_set,\n        phone,\n        price,\n        price_set,\n        requested_fulfillment_service_id is not null as is_third_party_required,\n        source,\n        title,\n        timestamp(datetime(cast(_fivetran_synced as timestamp), 'UTC')) as _fivetran_synced,\n        source_relation\n        \n    from fields\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__order_shipping_line`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:36.419024Z", "completed_at": "2024-06-07T20:32:36.775808Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:36.776342Z", "completed_at": "2024-06-07T20:32:36.776349Z"}], "thread_id": "Thread-1", "execution_time": 0.358410120010376, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__order_line", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__order_line_tmp`\n\n),\n\nfields as (\n\n    select\n    \n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    fulfillable_quantity\n    \n as \n    \n    fulfillable_quantity\n    \n, \n    \n    \n    fulfillment_status\n    \n as \n    \n    fulfillment_status\n    \n, \n    \n    \n    gift_card\n    \n as \n    \n    gift_card\n    \n, \n    \n    \n    grams\n    \n as \n    \n    grams\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    index\n    \n as \n    \n    index\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    order_id\n    \n as \n    \n    order_id\n    \n, \n    \n    \n    pre_tax_price\n    \n as \n    \n    pre_tax_price\n    \n, \n    cast(null as string) as \n    \n    pre_tax_price_set\n    \n , \n    \n    \n    price\n    \n as \n    \n    price\n    \n, \n    cast(null as string) as \n    \n    price_set\n    \n , \n    \n    \n    product_id\n    \n as \n    \n    product_id\n    \n, \n    \n    \n    quantity\n    \n as \n    \n    quantity\n    \n, \n    \n    \n    requires_shipping\n    \n as \n    \n    requires_shipping\n    \n, \n    \n    \n    sku\n    \n as \n    \n    sku\n    \n, \n    \n    \n    taxable\n    \n as \n    \n    taxable\n    \n, \n    cast(null as string) as \n    \n    tax_code\n    \n , \n    \n    \n    title\n    \n as \n    \n    title\n    \n, \n    \n    \n    total_discount\n    \n as \n    \n    total_discount\n    \n, \n    cast(null as string) as \n    \n    total_discount_set\n    \n , \n    \n    \n    variant_id\n    \n as \n    \n    variant_id\n    \n, \n    cast(null as string) as \n    \n    variant_title\n    \n , \n    cast(null as string) as \n    \n    variant_inventory_management\n    \n , \n    \n    \n    vendor\n    \n as \n    \n    vendor\n    \n, \n    cast(null as string) as \n    \n    properties\n    \n \n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n\n),\n\nfinal as (\n    \n    select \n        id as order_line_id,\n        index,\n        name,\n        order_id,\n        fulfillable_quantity,\n        fulfillment_status,\n        gift_card as is_gift_card,\n        grams,\n        pre_tax_price,\n        pre_tax_price_set,\n        price,\n        price_set,\n        product_id,\n        quantity,\n        requires_shipping as is_shipping_required,\n        sku,\n        taxable as is_taxable,\n        tax_code,\n        title,\n        total_discount,\n        total_discount_set,\n        variant_id,\n        variant_title,\n        variant_inventory_management,\n        vendor,\n        properties,\n        timestamp(datetime(cast(_fivetran_synced as timestamp), 'UTC')) as _fivetran_synced,\n        source_relation\n\n        \n\n\n\n\n\n    from fields\n\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__order_line`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:36.468741Z", "completed_at": "2024-06-07T20:32:36.847886Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:36.848453Z", "completed_at": "2024-06-07T20:32:36.848460Z"}], "thread_id": "Thread-4", "execution_time": 0.38080406188964844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__order_shipping_tax_line", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__order_shipping_tax_line_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    index\n    \n as \n    \n    index\n    \n, \n    \n    \n    order_shipping_line_id\n    \n as \n    \n    order_shipping_line_id\n    \n, \n    \n    \n    price\n    \n as \n    \n    price\n    \n, \n    \n    \n    price_set\n    \n as \n    \n    price_set\n    \n, \n    \n    \n    rate\n    \n as \n    \n    rate\n    \n, \n    \n    \n    title\n    \n as \n    \n    title\n    \n\n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        order_shipping_line_id,\n        index,\n        price,\n        price_set,\n        rate,\n        title,\n        timestamp(datetime(cast(_fivetran_synced as timestamp), 'UTC')) as _fivetran_synced,\n        source_relation\n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__order_shipping_tax_line`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:36.531463Z", "completed_at": "2024-06-07T20:32:36.887059Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:36.887683Z", "completed_at": "2024-06-07T20:32:36.887690Z"}], "thread_id": "Thread-2", "execution_time": 0.35756397247314453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__order_tag", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__order_tag_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    index\n    \n as \n    \n    index\n    \n, \n    \n    \n    order_id\n    \n as \n    \n    order_id\n    \n, \n    \n    \n    value\n    \n as \n    \n    value\n    \n\n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        order_id,\n        index,\n        value,\n        timestamp(datetime(cast(_fivetran_synced as timestamp), 'UTC')) as _fivetran_synced,\n        source_relation\n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__order_tag`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:36.551129Z", "completed_at": "2024-06-07T20:32:36.947868Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:36.948422Z", "completed_at": "2024-06-07T20:32:36.948429Z"}], "thread_id": "Thread-3", "execution_time": 0.3983900547027588, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__order", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__order_tmp`\n\n),\n\nfields as (\n\n    select\n    \n        \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    processed_at\n    \n as \n    \n    processed_at\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    user_id\n    \n as \n    \n    user_id\n    \n, \n    \n    \n    total_discounts\n    \n as \n    \n    total_discounts\n    \n, \n    cast(null as string) as \n    \n    total_discounts_set\n    \n , \n    \n    \n    total_line_items_price\n    \n as \n    \n    total_line_items_price\n    \n, \n    cast(null as string) as \n    \n    total_line_items_price_set\n    \n , \n    \n    \n    total_price\n    \n as \n    \n    total_price\n    \n, \n    cast(null as string) as \n    \n    total_price_set\n    \n , \n    cast(null as string) as \n    \n    total_tax_set\n    \n , \n    \n    \n    total_tax\n    \n as \n    \n    total_tax\n    \n, \n    \n    \n    source_name\n    \n as \n    \n    source_name\n    \n, \n    \n    \n    subtotal_price\n    \n as \n    \n    subtotal_price\n    \n, \n    \n    \n    taxes_included\n    \n as \n    \n    taxes_included\n    \n, \n    \n    \n    total_weight\n    \n as \n    \n    total_weight\n    \n, \n    cast(null as FLOAT64) as \n    \n    total_tip_received\n    \n , \n    \n    \n    landing_site_base_url\n    \n as \n    \n    landing_site_base_url\n    \n, \n    \n    \n    location_id\n    \n as \n    \n    location_id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    note\n    \n as \n    \n    note\n    \n, \n    \n    \n    number\n    \n as \n    \n    number\n    \n, \n    \n    \n    order_number\n    \n as \n    \n    order_number\n    \n, \n    \n    \n    cancel_reason\n    \n as \n    \n    cancel_reason\n    \n, \n    \n    \n    cancelled_at\n    \n as \n    \n    cancelled_at\n    \n, \n    \n    \n    cart_token\n    \n as \n    \n    cart_token\n    \n, \n    \n    \n    checkout_token\n    \n as \n    \n    checkout_token\n    \n, \n    \n    \n    closed_at\n    \n as \n    \n    closed_at\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    customer_id\n    \n as \n    \n    customer_id\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    financial_status\n    \n as \n    \n    financial_status\n    \n, \n    \n    \n    fulfillment_status\n    \n as \n    \n    fulfillment_status\n    \n, \n    \n    \n    referring_site\n    \n as \n    \n    referring_site\n    \n, \n    \n    \n    billing_address_address_1\n    \n as \n    \n    billing_address_address_1\n    \n, \n    \n    \n    billing_address_address_2\n    \n as \n    \n    billing_address_address_2\n    \n, \n    \n    \n    billing_address_city\n    \n as \n    \n    billing_address_city\n    \n, \n    \n    \n    billing_address_company\n    \n as \n    \n    billing_address_company\n    \n, \n    \n    \n    billing_address_country\n    \n as \n    \n    billing_address_country\n    \n, \n    \n    \n    billing_address_country_code\n    \n as \n    \n    billing_address_country_code\n    \n, \n    \n    \n    billing_address_first_name\n    \n as \n    \n    billing_address_first_name\n    \n, \n    \n    \n    billing_address_last_name\n    \n as \n    \n    billing_address_last_name\n    \n, \n    \n    \n    billing_address_latitude\n    \n as \n    \n    billing_address_latitude\n    \n, \n    \n    \n    billing_address_longitude\n    \n as \n    \n    billing_address_longitude\n    \n, \n    \n    \n    billing_address_name\n    \n as \n    \n    billing_address_name\n    \n, \n    \n    \n    billing_address_phone\n    \n as \n    \n    billing_address_phone\n    \n, \n    \n    \n    billing_address_province\n    \n as \n    \n    billing_address_province\n    \n, \n    \n    \n    billing_address_province_code\n    \n as \n    \n    billing_address_province_code\n    \n, \n    \n    \n    billing_address_zip\n    \n as \n    \n    billing_address_zip\n    \n, \n    \n    \n    browser_ip\n    \n as \n    \n    browser_ip\n    \n, \n    \n    \n    buyer_accepts_marketing\n    \n as \n    \n    buyer_accepts_marketing\n    \n, \n    \n    \n    total_shipping_price_set\n    \n as \n    \n    total_shipping_price_set\n    \n, \n    \n    \n    shipping_address_address_1\n    \n as \n    \n    shipping_address_address_1\n    \n, \n    \n    \n    shipping_address_address_2\n    \n as \n    \n    shipping_address_address_2\n    \n, \n    \n    \n    shipping_address_city\n    \n as \n    \n    shipping_address_city\n    \n, \n    \n    \n    shipping_address_company\n    \n as \n    \n    shipping_address_company\n    \n, \n    \n    \n    shipping_address_country\n    \n as \n    \n    shipping_address_country\n    \n, \n    \n    \n    shipping_address_country_code\n    \n as \n    \n    shipping_address_country_code\n    \n, \n    \n    \n    shipping_address_first_name\n    \n as \n    \n    shipping_address_first_name\n    \n, \n    \n    \n    shipping_address_last_name\n    \n as \n    \n    shipping_address_last_name\n    \n, \n    \n    \n    shipping_address_latitude\n    \n as \n    \n    shipping_address_latitude\n    \n, \n    \n    \n    shipping_address_longitude\n    \n as \n    \n    shipping_address_longitude\n    \n, \n    \n    \n    shipping_address_name\n    \n as \n    \n    shipping_address_name\n    \n, \n    \n    \n    shipping_address_phone\n    \n as \n    \n    shipping_address_phone\n    \n, \n    \n    \n    shipping_address_province\n    \n as \n    \n    shipping_address_province\n    \n, \n    \n    \n    shipping_address_province_code\n    \n as \n    \n    shipping_address_province_code\n    \n, \n    \n    \n    shipping_address_zip\n    \n as \n    \n    shipping_address_zip\n    \n, \n    \n    \n    test\n    \n as \n    \n    test\n    \n, \n    \n    \n    token\n    \n as \n    \n    token\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    cast(null as INT64) as \n    \n    app_id\n    \n , \n    cast(null as INT64) as \n    \n    checkout_id\n    \n , \n    cast(null as string) as \n    \n    client_details_user_agent\n    \n , \n    cast(null as string) as \n    \n    customer_locale\n    \n , \n    cast(null as string) as \n    \n    order_status_url\n    \n , \n    cast(null as string) as \n    \n    presentment_currency\n    \n , \n    cast(null as boolean) as \n    \n    confirmed\n    \n \n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n\n),\n\nfinal as (\n\n    select \n        id as order_id,\n        user_id,\n        total_discounts,\n        total_discounts_set,\n        total_line_items_price,\n        total_line_items_price_set,\n        total_price,\n        total_price_set,\n        total_tax_set,\n        total_tax,\n        source_name,\n        subtotal_price,\n        taxes_included as has_taxes_included,\n        total_weight,\n        total_tip_received,\n        landing_site_base_url,\n        location_id,\n        name,\n        note,\n        number,\n        order_number,\n        cancel_reason,\n        cart_token,\n        checkout_token,\n        timestamp(datetime(cast(created_at as timestamp), 'UTC')) as created_timestamp,\n        timestamp(datetime(cast(cancelled_at as timestamp), 'UTC')) as cancelled_timestamp,\n        timestamp(datetime(cast(closed_at as timestamp), 'UTC')) as closed_timestamp,\n        timestamp(datetime(cast(processed_at as timestamp), 'UTC')) as processed_timestamp,\n        timestamp(datetime(cast(updated_at as timestamp), 'UTC')) as updated_timestamp,\n        currency,\n        customer_id,\n        lower(email) as email,\n        financial_status,\n        fulfillment_status,\n        referring_site,\n        billing_address_address_1,\n        billing_address_address_2,\n        billing_address_city,\n        billing_address_company,\n        billing_address_country,\n        billing_address_country_code,\n        billing_address_first_name,\n        billing_address_last_name,\n        billing_address_latitude,\n        billing_address_longitude,\n        billing_address_name,\n        billing_address_phone,\n        billing_address_province,\n        billing_address_province_code,\n        billing_address_zip,\n        browser_ip,\n        total_shipping_price_set,\n        shipping_address_address_1,\n        shipping_address_address_2,\n        shipping_address_city,\n        shipping_address_company,\n        shipping_address_country,\n        shipping_address_country_code,\n        shipping_address_first_name,\n        shipping_address_last_name,\n        shipping_address_latitude,\n        shipping_address_longitude,\n        shipping_address_name,\n        shipping_address_phone,\n        shipping_address_province,\n        shipping_address_province_code,\n        shipping_address_zip,\n        token,\n        app_id,\n        checkout_id,\n        client_details_user_agent,\n        customer_locale,\n        order_status_url,\n        presentment_currency,\n        test as is_test_order,\n        _fivetran_deleted as is_deleted,\n        buyer_accepts_marketing as has_buyer_accepted_marketing,\n        confirmed as is_confirmed,\n        timestamp(datetime(cast(_fivetran_synced as timestamp), 'UTC')) as _fivetran_synced,\n        source_relation\n\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final\nwhere not coalesce(is_test_order, false)\nand not coalesce(is_deleted, false)", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__order`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:36.778040Z", "completed_at": "2024-06-07T20:32:37.192974Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:37.193537Z", "completed_at": "2024-06-07T20:32:37.193545Z"}], "thread_id": "Thread-1", "execution_time": 0.4166290760040283, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__order_url_tag", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__order_url_tag_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    key\n    \n as \n    \n    key\n    \n, \n    \n    \n    order_id\n    \n as \n    \n    order_id\n    \n, \n    \n    \n    value\n    \n as \n    \n    value\n    \n\n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        order_id,\n        key,\n        value,\n        timestamp(datetime(cast(_fivetran_synced as timestamp), 'UTC')) as _fivetran_synced,\n        source_relation\n        \n    from fields\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__order_url_tag`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:36.850573Z", "completed_at": "2024-06-07T20:32:37.250592Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:37.251153Z", "completed_at": "2024-06-07T20:32:37.251160Z"}], "thread_id": "Thread-4", "execution_time": 0.40213489532470703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__price_rule", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__price_rule_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    allocation_limit\n    \n as \n    \n    allocation_limit\n    \n, \n    \n    \n    allocation_method\n    \n as \n    \n    allocation_method\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    customer_selection\n    \n as \n    \n    customer_selection\n    \n, \n    \n    \n    ends_at\n    \n as \n    \n    ends_at\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    once_per_customer\n    \n as \n    \n    once_per_customer\n    \n, \n    \n    \n    prerequisite_quantity_range\n    \n as \n    \n    prerequisite_quantity_range\n    \n, \n    \n    \n    prerequisite_shipping_price_range\n    \n as \n    \n    prerequisite_shipping_price_range\n    \n, \n    \n    \n    prerequisite_subtotal_range\n    \n as \n    \n    prerequisite_subtotal_range\n    \n, \n    \n    \n    prerequisite_to_entitlement_purchase_prerequisite_amount\n    \n as \n    \n    prerequisite_to_entitlement_purchase_prerequisite_amount\n    \n, \n    \n    \n    quantity_ratio_entitled_quantity\n    \n as \n    \n    quantity_ratio_entitled_quantity\n    \n, \n    \n    \n    quantity_ratio_prerequisite_quantity\n    \n as \n    \n    quantity_ratio_prerequisite_quantity\n    \n, \n    \n    \n    starts_at\n    \n as \n    \n    starts_at\n    \n, \n    \n    \n    target_selection\n    \n as \n    \n    target_selection\n    \n, \n    \n    \n    target_type\n    \n as \n    \n    target_type\n    \n, \n    \n    \n    title\n    \n as \n    \n    title\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    usage_limit\n    \n as \n    \n    usage_limit\n    \n, \n    \n    \n    value\n    \n as \n    \n    value\n    \n, \n    \n    \n    value_type\n    \n as \n    \n    value_type\n    \n\n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        id as price_rule_id,\n        allocation_limit,\n        allocation_method,\n        customer_selection,\n        once_per_customer as is_once_per_customer,\n        prerequisite_quantity_range as prereq_min_quantity,\n        prerequisite_shipping_price_range as prereq_max_shipping_price,\n        prerequisite_subtotal_range as prereq_min_subtotal,\n        prerequisite_to_entitlement_purchase_prerequisite_amount as prereq_min_purchase_quantity_for_entitlement,\n        quantity_ratio_entitled_quantity as prereq_buy_x_get_this,\n        quantity_ratio_prerequisite_quantity as prereq_buy_this_get_y,\n        target_selection,\n        target_type,\n        title,\n        usage_limit,\n        value,\n        value_type,\n        timestamp(datetime(cast(starts_at as timestamp), 'UTC')) as starts_at,\n        timestamp(datetime(cast(ends_at as timestamp), 'UTC')) as ends_at,\n        timestamp(datetime(cast(created_at as timestamp), 'UTC')) as created_at,\n        timestamp(datetime(cast(updated_at as timestamp), 'UTC')) as updated_at,\n        timestamp(datetime(cast(_fivetran_synced as timestamp), 'UTC')) as _fivetran_synced,\n        source_relation\n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__price_rule`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:36.889584Z", "completed_at": "2024-06-07T20:32:37.326137Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:37.326664Z", "completed_at": "2024-06-07T20:32:37.326671Z"}], "thread_id": "Thread-2", "execution_time": 0.4382641315460205, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__product_image", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__product_image_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    height\n    \n as \n    \n    height\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    position\n    \n as \n    \n    position\n    \n, \n    \n    \n    product_id\n    \n as \n    \n    product_id\n    \n, \n    \n    \n    src\n    \n as \n    \n    src\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    variant_ids\n    \n as \n    \n    variant_ids\n    \n, \n    \n    \n    width\n    \n as \n    \n    width\n    \n\n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        id as product_image_id,\n        product_id,\n        height,\n        position,\n        src,\n        variant_ids,\n        width,\n        timestamp(datetime(cast(created_at as timestamp), 'UTC')) as created_at,\n        timestamp(datetime(cast(updated_at as timestamp), 'UTC')) as updated_at,\n        timestamp(datetime(cast(_fivetran_synced as timestamp), 'UTC')) as _fivetran_synced,\n        source_relation\n\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__product_image`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:36.950409Z", "completed_at": "2024-06-07T20:32:37.358165Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:37.358735Z", "completed_at": "2024-06-07T20:32:37.358743Z"}], "thread_id": "Thread-3", "execution_time": 0.4097249507904053, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__product_tag", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__product_tag_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    index\n    \n as \n    \n    index\n    \n, \n    \n    \n    product_id\n    \n as \n    \n    product_id\n    \n, \n    \n    \n    value\n    \n as \n    \n    value\n    \n\n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        product_id,\n        index,\n        value,\n        timestamp(datetime(cast(_fivetran_synced as timestamp), 'UTC')) as _fivetran_synced,\n        source_relation\n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__product_tag`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:37.253074Z", "completed_at": "2024-06-07T20:32:37.586547Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:37.587090Z", "completed_at": "2024-06-07T20:32:37.587097Z"}], "thread_id": "Thread-4", "execution_time": 0.33521318435668945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__product_variant", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__product_variant_tmp`\n\n),\n\nfields as (\n\n    select\n    \n        \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    product_id\n    \n as \n    \n    product_id\n    \n, \n    \n    \n    inventory_item_id\n    \n as \n    \n    inventory_item_id\n    \n, \n    \n    \n    image_id\n    \n as \n    \n    image_id\n    \n, \n    \n    \n    title\n    \n as \n    \n    title\n    \n, \n    \n    \n    price\n    \n as \n    \n    price\n    \n, \n    \n    \n    sku\n    \n as \n    \n    sku\n    \n, \n    \n    \n    position\n    \n as \n    \n    position\n    \n, \n    \n    \n    inventory_policy\n    \n as \n    \n    inventory_policy\n    \n, \n    \n    \n    compare_at_price\n    \n as \n    \n    compare_at_price\n    \n, \n    \n    \n    fulfillment_service\n    \n as \n    \n    fulfillment_service\n    \n, \n    \n    \n    inventory_management\n    \n as \n    \n    inventory_management\n    \n, \n    \n    \n    taxable\n    \n as \n    \n    taxable\n    \n, \n    \n    \n    barcode\n    \n as \n    \n    barcode\n    \n, \n    \n    \n    grams\n    \n as \n    \n    grams\n    \n, \n    \n    \n    old_inventory_quantity\n    \n as \n    \n    old_inventory_quantity\n    \n, \n    \n    \n    inventory_quantity\n    \n as \n    \n    inventory_quantity\n    \n, \n    \n    \n    weight\n    \n as \n    \n    weight\n    \n, \n    \n    \n    weight_unit\n    \n as \n    \n    weight_unit\n    \n, \n    \n    \n    option_1\n    \n as \n    \n    option_1\n    \n, \n    \n    \n    option_2\n    \n as \n    \n    option_2\n    \n, \n    \n    \n    option_3\n    \n as \n    \n    option_3\n    \n, \n    \n    \n    tax_code\n    \n as \n    \n    tax_code\n    \n\n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n\n),\n\nfinal as (\n\n    select\n        id as variant_id,\n        product_id,\n        inventory_item_id,\n        image_id,\n        title,\n        price,\n        sku,\n        position,\n        inventory_policy,\n        compare_at_price,\n        fulfillment_service,\n        inventory_management,\n        taxable as is_taxable,\n        barcode,\n        grams,\n        coalesce(inventory_quantity, old_inventory_quantity) as inventory_quantity,\n        weight,\n        weight_unit,\n        option_1,\n        option_2,\n        option_3,\n        tax_code,\n        timestamp(datetime(cast(created_at as timestamp), 'UTC')) as created_timestamp,\n        timestamp(datetime(cast(updated_at as timestamp), 'UTC')) as updated_timestamp,\n        timestamp(datetime(cast(_fivetran_synced as timestamp), 'UTC')) as _fivetran_synced,\n        source_relation\n\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__product_variant`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:37.195516Z", "completed_at": "2024-06-07T20:32:37.603027Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:37.603564Z", "completed_at": "2024-06-07T20:32:37.603571Z"}], "thread_id": "Thread-1", "execution_time": 0.4092841148376465, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__product", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__product_tmp`\n\n),\n\nfields as (\n\n    select\n    \n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    handle\n    \n as \n    \n    handle\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    product_type\n    \n as \n    \n    product_type\n    \n, \n    \n    \n    published_at\n    \n as \n    \n    published_at\n    \n, \n    \n    \n    published_scope\n    \n as \n    \n    published_scope\n    \n, \n    \n    \n    title\n    \n as \n    \n    title\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    vendor\n    \n as \n    \n    vendor\n    \n, \n    cast(null as string) as \n    \n    status\n    \n \n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n\n),\n\nfinal as (\n    \n    select\n        id as product_id,\n        handle,\n        product_type,\n        published_scope,\n        title,\n        vendor,\n        status,\n        _fivetran_deleted as is_deleted,\n        timestamp(datetime(cast(created_at as timestamp), 'UTC')) as created_timestamp,\n        timestamp(datetime(cast(updated_at as timestamp), 'UTC')) as updated_timestamp,\n        timestamp(datetime(cast(published_at as timestamp), 'UTC')) as published_timestamp,\n        timestamp(datetime(cast(_fivetran_synced as timestamp), 'UTC')) as _fivetran_synced,\n        source_relation\n\n        \n\n\n\n\n\nfrom fields\n\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__product`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:37.328419Z", "completed_at": "2024-06-07T20:32:37.715134Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:37.715674Z", "completed_at": "2024-06-07T20:32:37.715681Z"}], "thread_id": "Thread-2", "execution_time": 0.38843321800231934, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__refund", "compiled": true, "compiled_code": "-- this model will be all NULL until you have made a refund in Shopify\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__refund_tmp`\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    note\n    \n as \n    \n    note\n    \n, \n    \n    \n    order_id\n    \n as \n    \n    order_id\n    \n, \n    \n    \n    processed_at\n    \n as \n    \n    processed_at\n    \n, \n    \n    \n    restock\n    \n as \n    \n    restock\n    \n, \n    \n    \n    total_duties_set\n    \n as \n    \n    total_duties_set\n    \n, \n    \n    \n    user_id\n    \n as \n    \n    user_id\n    \n\n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n        \n    from base\n),\n\nfinal as (\n\n    select\n        id as refund_id,\n        note,\n        order_id,\n        restock,\n        total_duties_set,\n        user_id,\n        timestamp(datetime(cast(created_at as timestamp), 'UTC')) as created_at,\n        timestamp(datetime(cast(processed_at as timestamp), 'UTC')) as processed_at,\n        timestamp(datetime(cast(_fivetran_synced as timestamp), 'UTC')) as _fivetran_synced,\n        source_relation\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__refund`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:37.360631Z", "completed_at": "2024-06-07T20:32:37.781424Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:37.781961Z", "completed_at": "2024-06-07T20:32:37.781968Z"}], "thread_id": "Thread-3", "execution_time": 0.42255115509033203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__shop", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__shop_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    address_1\n    \n as \n    \n    address_1\n    \n, \n    \n    \n    address_2\n    \n as \n    \n    address_2\n    \n, \n    \n    \n    checkout_api_supported\n    \n as \n    \n    checkout_api_supported\n    \n, \n    \n    \n    city\n    \n as \n    \n    city\n    \n, \n    \n    \n    cookie_consent_level\n    \n as \n    \n    cookie_consent_level\n    \n, \n    \n    \n    country\n    \n as \n    \n    country\n    \n, \n    \n    \n    country_code\n    \n as \n    \n    country_code\n    \n, \n    \n    \n    country_name\n    \n as \n    \n    country_name\n    \n, \n    \n    \n    county_taxes\n    \n as \n    \n    county_taxes\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    customer_email\n    \n as \n    \n    customer_email\n    \n, \n    \n    \n    domain\n    \n as \n    \n    domain\n    \n, \n    \n    \n    eligible_for_card_reader_giveaway\n    \n as \n    \n    eligible_for_card_reader_giveaway\n    \n, \n    \n    \n    eligible_for_payments\n    \n as \n    \n    eligible_for_payments\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    enabled_presentment_currencies\n    \n as \n    \n    enabled_presentment_currencies\n    \n, \n    \n    \n    google_apps_domain\n    \n as \n    \n    google_apps_domain\n    \n, \n    \n    \n    google_apps_login_enabled\n    \n as \n    \n    google_apps_login_enabled\n    \n, \n    \n    \n    has_discounts\n    \n as \n    \n    has_discounts\n    \n, \n    \n    \n    has_gift_cards\n    \n as \n    \n    has_gift_cards\n    \n, \n    \n    \n    has_storefront\n    \n as \n    \n    has_storefront\n    \n, \n    \n    \n    iana_timezone\n    \n as \n    \n    iana_timezone\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    latitude\n    \n as \n    \n    latitude\n    \n, \n    \n    \n    longitude\n    \n as \n    \n    longitude\n    \n, \n    \n    \n    money_format\n    \n as \n    \n    money_format\n    \n, \n    \n    \n    money_in_emails_format\n    \n as \n    \n    money_in_emails_format\n    \n, \n    \n    \n    money_with_currency_format\n    \n as \n    \n    money_with_currency_format\n    \n, \n    \n    \n    money_with_currency_in_emails_format\n    \n as \n    \n    money_with_currency_in_emails_format\n    \n, \n    \n    \n    myshopify_domain\n    \n as \n    \n    myshopify_domain\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    password_enabled\n    \n as \n    \n    password_enabled\n    \n, \n    \n    \n    phone\n    \n as \n    \n    phone\n    \n, \n    \n    \n    plan_display_name\n    \n as \n    \n    plan_display_name\n    \n, \n    \n    \n    plan_name\n    \n as \n    \n    plan_name\n    \n, \n    \n    \n    pre_launch_enabled\n    \n as \n    \n    pre_launch_enabled\n    \n, \n    \n    \n    primary_locale\n    \n as \n    \n    primary_locale\n    \n, \n    \n    \n    province\n    \n as \n    \n    province\n    \n, \n    \n    \n    province_code\n    \n as \n    \n    province_code\n    \n, \n    \n    \n    requires_extra_payments_agreement\n    \n as \n    \n    requires_extra_payments_agreement\n    \n, \n    \n    \n    setup_required\n    \n as \n    \n    setup_required\n    \n, \n    \n    \n    shop_owner\n    \n as \n    \n    shop_owner\n    \n, \n    \n    \n    source\n    \n as \n    \n    source\n    \n, \n    \n    \n    tax_shipping\n    \n as \n    \n    tax_shipping\n    \n, \n    \n    \n    taxes_included\n    \n as \n    \n    taxes_included\n    \n, \n    \n    \n    timezone\n    \n as \n    \n    timezone\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    weight_unit\n    \n as \n    \n    weight_unit\n    \n, \n    \n    \n    zip\n    \n as \n    \n    zip\n    \n\n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        id as shop_id,\n        name,\n        _fivetran_deleted as is_deleted,\n        address_1,\n        address_2,\n        city,\n        province,\n        province_code,\n        country,\n        country_code,\n        country_name,\n        zip,\n        latitude,\n        longitude,\n        case when county_taxes is null then false else county_taxes end as has_county_taxes,\n        currency,\n        enabled_presentment_currencies,\n        customer_email,\n        email,\n        domain,\n        phone,\n        timezone,\n        iana_timezone,\n        primary_locale,\n        weight_unit,\n        myshopify_domain,\n        cookie_consent_level,\n        shop_owner,\n        source,\n        tax_shipping as has_shipping_taxes,\n        case when taxes_included is null then false else taxes_included end as has_taxes_included_in_price,\n        has_discounts,\n        has_gift_cards,\n        has_storefront,\n        checkout_api_supported as has_checkout_api_supported,\n        eligible_for_card_reader_giveaway as is_eligible_for_card_reader_giveaway,\n        eligible_for_payments as is_eligible_for_payments,\n        google_apps_domain,\n        case when google_apps_login_enabled is null then false else google_apps_login_enabled end as is_google_apps_login_enabled,\n        money_format,\n        money_in_emails_format,\n        money_with_currency_format,\n        money_with_currency_in_emails_format,\n        plan_display_name,\n        plan_name,\n        password_enabled as is_password_enabled,\n        pre_launch_enabled as is_pre_launch_enabled,\n        requires_extra_payments_agreement as is_extra_payments_agreement_required,\n        setup_required as is_setup_required,\n        timestamp(datetime(cast(created_at as timestamp), 'UTC')) as created_at,\n        timestamp(datetime(cast(updated_at as timestamp), 'UTC')) as updated_at,\n        timestamp(datetime(cast(_fivetran_synced as timestamp), 'UTC')) as _fivetran_synced,\n        source_relation\n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__shop`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:37.783827Z", "completed_at": "2024-06-07T20:32:37.793445Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:37.793991Z", "completed_at": "2024-06-07T20:32:37.793996Z"}], "thread_id": "Thread-3", "execution_time": 0.011320114135742188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__abandoned_checkout_shipping_line_checkout_id__index__source_relation.adf831caac", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        checkout_id, index, source_relation\n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__abandoned_checkout_shipping_line`\n    group by checkout_id, index, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:37.795728Z", "completed_at": "2024-06-07T20:32:37.799665Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:37.800202Z", "completed_at": "2024-06-07T20:32:37.800207Z"}], "thread_id": "Thread-3", "execution_time": 0.005562782287597656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__abandoned_checkout_discount_code_checkout_id__code__source_relation.7c343c0e84", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        checkout_id, code, source_relation\n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__abandoned_checkout_discount_code`\n    group by checkout_id, code, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:37.801884Z", "completed_at": "2024-06-07T20:32:37.808645Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:37.809172Z", "completed_at": "2024-06-07T20:32:37.809178Z"}], "thread_id": "Thread-3", "execution_time": 0.008376121520996094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__abandoned_checkout_discount_code_checkout_id.c00e9d48a7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect checkout_id\nfrom `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__abandoned_checkout_discount_code`\nwhere checkout_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:37.810890Z", "completed_at": "2024-06-07T20:32:37.814986Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:37.815501Z", "completed_at": "2024-06-07T20:32:37.815505Z"}], "thread_id": "Thread-3", "execution_time": 0.005694866180419922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__collection_product_collection_id__product_id__source_relation.2a7693423e", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        collection_id, product_id, source_relation\n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__collection_product`\n    group by collection_id, product_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:37.817168Z", "completed_at": "2024-06-07T20:32:37.820543Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:37.821053Z", "completed_at": "2024-06-07T20:32:37.821057Z"}], "thread_id": "Thread-3", "execution_time": 0.004960060119628906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__collection_product_collection_id.8bf72f774a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collection_id\nfrom `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__collection_product`\nwhere collection_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:37.822735Z", "completed_at": "2024-06-07T20:32:37.826128Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:37.826632Z", "completed_at": "2024-06-07T20:32:37.826637Z"}], "thread_id": "Thread-3", "execution_time": 0.00495600700378418, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__collection_product_product_id.1e720211b1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect product_id\nfrom `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__collection_product`\nwhere product_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:37.828278Z", "completed_at": "2024-06-07T20:32:37.832303Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:37.832823Z", "completed_at": "2024-06-07T20:32:37.832828Z"}], "thread_id": "Thread-3", "execution_time": 0.005616188049316406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__abandoned_checkout_checkout_id__source_relation.46f03b4b58", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        checkout_id, source_relation\n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__abandoned_checkout`\n    group by checkout_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:37.834500Z", "completed_at": "2024-06-07T20:32:37.917166Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:37.917696Z", "completed_at": "2024-06-07T20:32:37.917703Z"}], "thread_id": "Thread-3", "execution_time": 0.08426785469055176, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__abandoned_checkout_checkout_id.7904acc8db", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect checkout_id\nfrom `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__abandoned_checkout`\nwhere checkout_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:37.919361Z", "completed_at": "2024-06-07T20:32:37.923218Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:37.923743Z", "completed_at": "2024-06-07T20:32:37.923748Z"}], "thread_id": "Thread-3", "execution_time": 0.005450010299682617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__discount_code_discount_code_id__source_relation.cdfb802172", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        discount_code_id, source_relation\n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__discount_code`\n    group by discount_code_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:37.925421Z", "completed_at": "2024-06-07T20:32:37.928812Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:37.929314Z", "completed_at": "2024-06-07T20:32:37.929319Z"}], "thread_id": "Thread-3", "execution_time": 0.004973173141479492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__discount_code_discount_code_id.a5590b867e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect discount_code_id\nfrom `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__discount_code`\nwhere discount_code_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:37.930987Z", "completed_at": "2024-06-07T20:32:37.935424Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:37.935936Z", "completed_at": "2024-06-07T20:32:37.935940Z"}], "thread_id": "Thread-3", "execution_time": 0.006016969680786133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__customer_customer_id__source_relation.1b2185db25", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        customer_id, source_relation\n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__customer`\n    group by customer_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:37.937613Z", "completed_at": "2024-06-07T20:32:37.941019Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:37.941543Z", "completed_at": "2024-06-07T20:32:37.941548Z"}], "thread_id": "Thread-3", "execution_time": 0.0051000118255615234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__collection_collection_id__source_relation.1df832a878", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        collection_id, source_relation\n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__collection`\n    group by collection_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:37.943314Z", "completed_at": "2024-06-07T20:32:37.946666Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:37.947173Z", "completed_at": "2024-06-07T20:32:37.947178Z"}], "thread_id": "Thread-3", "execution_time": 0.005014896392822266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__collection_collection_id.96b2719af2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collection_id\nfrom `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__collection`\nwhere collection_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:37.948936Z", "completed_at": "2024-06-07T20:32:37.952303Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:37.952819Z", "completed_at": "2024-06-07T20:32:37.952824Z"}], "thread_id": "Thread-3", "execution_time": 0.0050296783447265625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__customer_tag_customer_id__index__source_relation.a145b36d0f", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        customer_id, index, source_relation\n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__customer_tag`\n    group by customer_id, index, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:37.954561Z", "completed_at": "2024-06-07T20:32:37.958808Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:37.959308Z", "completed_at": "2024-06-07T20:32:37.959313Z"}], "thread_id": "Thread-3", "execution_time": 0.005819797515869141, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__customer_tag_customer_id.c532ce5351", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_id\nfrom `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__customer_tag`\nwhere customer_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:37.960985Z", "completed_at": "2024-06-07T20:32:37.964349Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:37.964853Z", "completed_at": "2024-06-07T20:32:37.964858Z"}], "thread_id": "Thread-3", "execution_time": 0.00503087043762207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__customer_tag_index.1db05a64dd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect index\nfrom `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__customer_tag`\nwhere index is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:37.966623Z", "completed_at": "2024-06-07T20:32:37.970382Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:37.970903Z", "completed_at": "2024-06-07T20:32:37.970908Z"}], "thread_id": "Thread-3", "execution_time": 0.0053479671478271484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__inventory_item_inventory_item_id__source_relation.efb946be84", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        inventory_item_id, source_relation\n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__inventory_item`\n    group by inventory_item_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:37.972574Z", "completed_at": "2024-06-07T20:32:37.976031Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:37.983237Z", "completed_at": "2024-06-07T20:32:37.983245Z"}], "thread_id": "Thread-3", "execution_time": 0.012268781661987305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__inventory_item_inventory_item_id.ebb8e84fbe", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect inventory_item_id\nfrom `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__inventory_item`\nwhere inventory_item_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:37.605317Z", "completed_at": "2024-06-07T20:32:37.990643Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:37.991203Z", "completed_at": "2024-06-07T20:32:37.991208Z"}], "thread_id": "Thread-1", "execution_time": 0.38706398010253906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__tender_transaction", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__tender_transaction_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    order_id\n    \n as \n    \n    order_id\n    \n, \n    \n    \n    payment_method\n    \n as \n    \n    payment_method\n    \n, \n    \n    \n    processed_at\n    \n as \n    \n    processed_at\n    \n, \n    \n    \n    remote_reference\n    \n as \n    \n    remote_reference\n    \n, \n    \n    \n    test\n    \n as \n    \n    test\n    \n, \n    \n    \n    user_id\n    \n as \n    \n    user_id\n    \n\n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        id as transaction_id,\n        order_id,\n        amount,\n        currency,\n        payment_method,\n        remote_reference,\n        user_id,\n        timestamp(datetime(cast(processed_at as timestamp), 'UTC')) as processed_at,\n        timestamp(datetime(cast(_fivetran_synced as timestamp), 'UTC')) as _fivetran_synced,\n        source_relation\n\n    from fields\n    where not coalesce(test, false)\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__tender_transaction`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:37.985671Z", "completed_at": "2024-06-07T20:32:37.992313Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:37.993577Z", "completed_at": "2024-06-07T20:32:37.993580Z"}], "thread_id": "Thread-3", "execution_time": 0.012486934661865234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__inventory_level_inventory_item_id__location_id__source_relation.30e02799e7", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        inventory_item_id, location_id, source_relation\n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__inventory_level`\n    group by inventory_item_id, location_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:37.993851Z", "completed_at": "2024-06-07T20:32:38.008421Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:38.008974Z", "completed_at": "2024-06-07T20:32:38.008982Z"}], "thread_id": "Thread-1", "execution_time": 0.01683807373046875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__inventory_level_inventory_item_id.fccf494b8e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect inventory_item_id\nfrom `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__inventory_level`\nwhere inventory_item_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:37.588783Z", "completed_at": "2024-06-07T20:32:38.016348Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:38.019247Z", "completed_at": "2024-06-07T20:32:38.019255Z"}], "thread_id": "Thread-4", "execution_time": 0.43193912506103516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__tax_line", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__tax_line_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    index\n    \n as \n    \n    index\n    \n, \n    \n    \n    order_line_id\n    \n as \n    \n    order_line_id\n    \n, \n    \n    \n    price\n    \n as \n    \n    price\n    \n, \n    \n    \n    price_set\n    \n as \n    \n    price_set\n    \n, \n    \n    \n    rate\n    \n as \n    \n    rate\n    \n, \n    \n    \n    title\n    \n as \n    \n    title\n    \n\n\n\n    \n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        index,\n        order_line_id,\n        price,\n        price_set,\n        rate,\n        title,\n        timestamp(datetime(cast(_fivetran_synced as timestamp), 'UTC')) as _fivetran_synced,\n        source_relation\n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__tax_line`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:37.999171Z", "completed_at": "2024-06-07T20:32:38.019592Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:38.021089Z", "completed_at": "2024-06-07T20:32:38.021094Z"}], "thread_id": "Thread-3", "execution_time": 0.023626089096069336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__inventory_level_location_id.92e79be57f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect location_id\nfrom `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__inventory_level`\nwhere location_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:38.010695Z", "completed_at": "2024-06-07T20:32:38.022638Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:38.028630Z", "completed_at": "2024-06-07T20:32:38.028636Z"}], "thread_id": "Thread-1", "execution_time": 0.019325971603393555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.accepted_values_stg_shopify__fulfillment_status__pending__open__success__cancelled__error__failure.7c48600b70", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        status as value_field,\n        count(*) as n_records\n\n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__fulfillment`\n    group by status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'pending','open','success','cancelled','error','failure'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:38.023181Z", "completed_at": "2024-06-07T20:32:38.033320Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:38.034644Z", "completed_at": "2024-06-07T20:32:38.034649Z"}], "thread_id": "Thread-4", "execution_time": 0.017349958419799805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__fulfillment_fulfillment_id__source_relation.680798d67a", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        fulfillment_id, source_relation\n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__fulfillment`\n    group by fulfillment_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:38.029731Z", "completed_at": "2024-06-07T20:32:38.038291Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:38.039720Z", "completed_at": "2024-06-07T20:32:38.039725Z"}], "thread_id": "Thread-3", "execution_time": 0.01243281364440918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__fulfillment_fulfillment_id.ef5030632e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect fulfillment_id\nfrom `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__fulfillment`\nwhere fulfillment_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:38.034923Z", "completed_at": "2024-06-07T20:32:38.040909Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:38.045729Z", "completed_at": "2024-06-07T20:32:38.045734Z"}], "thread_id": "Thread-1", "execution_time": 0.012850284576416016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__location_location_id__source_relation.d3455164b9", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        location_id, source_relation\n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__location`\n    group by location_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:38.041948Z", "completed_at": "2024-06-07T20:32:38.052339Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:38.055719Z", "completed_at": "2024-06-07T20:32:38.055725Z"}], "thread_id": "Thread-4", "execution_time": 0.016472816467285156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__location_location_id.ee4166d1bf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect location_id\nfrom `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__location`\nwhere location_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:38.046913Z", "completed_at": "2024-06-07T20:32:38.060954Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:38.062494Z", "completed_at": "2024-06-07T20:32:38.062498Z"}], "thread_id": "Thread-3", "execution_time": 0.02174091339111328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.accepted_values_stg_shopify__fulfillment_event_status__attempted_delivery__delayed__delivered__failure__in_transit__out_for_delivery__ready_for_pickup__picked_up__label_printed__label_purchased__confirmed.6be9843e27", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        status as value_field,\n        count(*) as n_records\n\n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__fulfillment_event`\n    group by status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'attempted_delivery','delayed','delivered','failure','in_transit','out_for_delivery','ready_for_pickup','picked_up','label_printed','label_purchased','confirmed'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:38.056803Z", "completed_at": "2024-06-07T20:32:38.062209Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:38.067432Z", "completed_at": "2024-06-07T20:32:38.067436Z"}], "thread_id": "Thread-1", "execution_time": 0.013002157211303711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__fulfillment_event_fulfillment_event_id__source_relation.bbccfe999a", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        fulfillment_event_id, source_relation\n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__fulfillment_event`\n    group by fulfillment_event_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:38.062781Z", "completed_at": "2024-06-07T20:32:38.068567Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:38.070409Z", "completed_at": "2024-06-07T20:32:38.070413Z"}], "thread_id": "Thread-4", "execution_time": 0.013190746307373047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__metafield_metafield_id__source_relation.f74f7735ca", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        metafield_id, source_relation\n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__metafield`\n    group by metafield_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:38.070684Z", "completed_at": "2024-06-07T20:32:38.080126Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:38.085118Z", "completed_at": "2024-06-07T20:32:38.085123Z"}], "thread_id": "Thread-3", "execution_time": 0.017056941986083984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__metafield_metafield_id.456551b3c6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect metafield_id\nfrom `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__metafield`\nwhere metafield_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:38.074834Z", "completed_at": "2024-06-07T20:32:38.080891Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:38.086234Z", "completed_at": "2024-06-07T20:32:38.086237Z"}], "thread_id": "Thread-1", "execution_time": 0.0170137882232666, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__order_adjustment_order_adjustment_id__source_relation.00b7d10cb0", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        order_adjustment_id, source_relation\n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__order_adjustment`\n    group by order_adjustment_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:38.081153Z", "completed_at": "2024-06-07T20:32:38.087819Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:38.092557Z", "completed_at": "2024-06-07T20:32:38.092563Z"}], "thread_id": "Thread-4", "execution_time": 0.01369023323059082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__order_note_attribute_order_id__name__source_relation.b214a3d1c0", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        order_id, name, source_relation\n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__order_note_attribute`\n    group by order_id, name, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:38.089266Z", "completed_at": "2024-06-07T20:32:38.098059Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:38.103097Z", "completed_at": "2024-06-07T20:32:38.103103Z"}], "thread_id": "Thread-3", "execution_time": 0.01646113395690918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__order_note_attribute_name.1c77264446", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect name\nfrom `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__order_note_attribute`\nwhere name is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:38.093690Z", "completed_at": "2024-06-07T20:32:38.102779Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:38.104188Z", "completed_at": "2024-06-07T20:32:38.104191Z"}], "thread_id": "Thread-1", "execution_time": 0.016338109970092773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__order_note_attribute_order_id.d710018375", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_id\nfrom `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__order_note_attribute`\nwhere order_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:38.098364Z", "completed_at": "2024-06-07T20:32:38.104701Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:38.106686Z", "completed_at": "2024-06-07T20:32:38.106690Z"}], "thread_id": "Thread-4", "execution_time": 0.013510942459106445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__order_discount_code_order_id__index__source_relation.7887dafb26", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        order_id, index, source_relation\n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__order_discount_code`\n    group by order_id, index, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:38.107344Z", "completed_at": "2024-06-07T20:32:38.115724Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:38.120344Z", "completed_at": "2024-06-07T20:32:38.120350Z"}], "thread_id": "Thread-3", "execution_time": 0.015530824661254883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__order_discount_code_code.067f3e6d0f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect code\nfrom `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__order_discount_code`\nwhere code is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:38.111769Z", "completed_at": "2024-06-07T20:32:38.120021Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:38.121410Z", "completed_at": "2024-06-07T20:32:38.121414Z"}], "thread_id": "Thread-1", "execution_time": 0.015465259552001953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__order_discount_code_order_id.ca7b6ffa4d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_id\nfrom `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__order_discount_code`\nwhere order_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:38.116028Z", "completed_at": "2024-06-07T20:32:38.121944Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:38.123897Z", "completed_at": "2024-06-07T20:32:38.123902Z"}], "thread_id": "Thread-4", "execution_time": 0.014400959014892578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__order_line_refund_order_line_refund_id__source_relation.1877420c29", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        order_line_refund_id, source_relation\n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__order_line_refund`\n    group by order_line_refund_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:38.124587Z", "completed_at": "2024-06-07T20:32:38.134119Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:38.138549Z", "completed_at": "2024-06-07T20:32:38.138555Z"}], "thread_id": "Thread-3", "execution_time": 0.01660895347595215, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__order_shipping_line_order_shipping_line_id__source_relation.6d1c3ae933", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        order_shipping_line_id, source_relation\n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__order_shipping_line`\n    group by order_shipping_line_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:38.130312Z", "completed_at": "2024-06-07T20:32:38.138837Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:38.140892Z", "completed_at": "2024-06-07T20:32:38.140896Z"}], "thread_id": "Thread-1", "execution_time": 0.01797795295715332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__order_shipping_line_order_shipping_line_id.37ad762613", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_shipping_line_id\nfrom `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__order_shipping_line`\nwhere order_shipping_line_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:38.134900Z", "completed_at": "2024-06-07T20:32:38.140565Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:38.142723Z", "completed_at": "2024-06-07T20:32:38.142726Z"}], "thread_id": "Thread-4", "execution_time": 0.019514799118041992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__order_line_order_line_id__source_relation.c2797e7a9c", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        order_line_id, source_relation\n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__order_line`\n    group by order_line_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:38.143287Z", "completed_at": "2024-06-07T20:32:38.172108Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:38.176563Z", "completed_at": "2024-06-07T20:32:38.176570Z"}], "thread_id": "Thread-3", "execution_time": 0.0364537239074707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__order_shipping_tax_line_order_shipping_line_id__index__source_relation.f13c5fef8d", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        order_shipping_line_id, index, source_relation\n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__order_shipping_tax_line`\n    group by order_shipping_line_id, index, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:37.717479Z", "completed_at": "2024-06-07T20:32:38.172918Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:38.178230Z", "completed_at": "2024-06-07T20:32:38.178234Z"}], "thread_id": "Thread-2", "execution_time": 0.46270203590393066, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.shopify_source.stg_shopify__transaction", "compiled": true, "compiled_code": "with base as (\n\n    select * from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__transaction_tmp`\n\n),\n\nfields as (\n\n    select\n\n        \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    order_id\n    \n as \n    \n    order_id\n    \n, \n    \n    \n    refund_id\n    \n as \n    \n    refund_id\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    processed_at\n    \n as \n    \n    processed_at\n    \n, \n    \n    \n    device_id\n    \n as \n    \n    device_id\n    \n, \n    \n    \n    gateway\n    \n as \n    \n    gateway\n    \n, \n    \n    \n    source_name\n    \n as \n    \n    source_name\n    \n, \n    \n    \n    message\n    \n as \n    \n    message\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    location_id\n    \n as \n    \n    location_id\n    \n, \n    \n    \n    parent_id\n    \n as \n    \n    parent_id\n    \n, \n    \n    \n    payment_avs_result_code\n    \n as \n    \n    payment_avs_result_code\n    \n, \n    \n    \n    payment_credit_card_bin\n    \n as \n    \n    payment_credit_card_bin\n    \n, \n    \n    \n    payment_cvv_result_code\n    \n as \n    \n    payment_cvv_result_code\n    \n, \n    \n    \n    payment_credit_card_number\n    \n as \n    \n    payment_credit_card_number\n    \n, \n    \n    \n    payment_credit_card_company\n    \n as \n    \n    payment_credit_card_company\n    \n, \n    \n    \n    kind\n    \n as \n    \n    kind\n    \n, \n    \n    \n    receipt\n    \n as \n    \n    receipt\n    \n, \n    \n    \n    currency_exchange_id\n    \n as \n    \n    currency_exchange_id\n    \n, \n    \n    \n    currency_exchange_adjustment\n    \n as \n    \n    currency_exchange_adjustment\n    \n, \n    \n    \n    currency_exchange_original_amount\n    \n as \n    \n    currency_exchange_original_amount\n    \n, \n    \n    \n    currency_exchange_final_amount\n    \n as \n    \n    currency_exchange_final_amount\n    \n, \n    \n    \n    currency_exchange_currency\n    \n as \n    \n    currency_exchange_currency\n    \n, \n    \n    \n    error_code\n    \n as \n    \n    error_code\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    test\n    \n as \n    \n    test\n    \n, \n    \n    \n    user_id\n    \n as \n    \n    user_id\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    cast(null as timestamp) as \n    \n    authorization_expires_at\n    \n , \n    \n    \n    authorization\n    \n as authorization_code \n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n\n),\n\nfinal as (\n\n    select \n        id as transaction_id,\n        order_id,\n        refund_id,\n        amount,\n        device_id,\n        gateway,\n        source_name,\n        message,\n        currency,\n        location_id,\n        parent_id,\n        payment_avs_result_code,\n        payment_credit_card_bin,\n        payment_cvv_result_code,\n        payment_credit_card_number,\n        payment_credit_card_company,\n        kind,\n        receipt,\n        currency_exchange_id,\n        currency_exchange_adjustment,\n        currency_exchange_original_amount,\n        currency_exchange_final_amount,\n        currency_exchange_currency,\n        error_code,\n        status,\n        user_id,\n        authorization_code,\n        timestamp(datetime(cast(created_at as timestamp), 'UTC')) as created_timestamp,\n        timestamp(datetime(cast(processed_at as timestamp), 'UTC')) as processed_timestamp,\n        timestamp(datetime(cast(authorization_expires_at as timestamp), 'UTC')) as authorization_expires_at,\n        timestamp(datetime(cast(_fivetran_synced as timestamp), 'UTC')) as _fivetran_synced,\n        source_relation\n\n        \n\n\n\n\n\n    from fields\n    where not coalesce(test, false)\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__transaction`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:38.168639Z", "completed_at": "2024-06-07T20:32:38.176857Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:38.179055Z", "completed_at": "2024-06-07T20:32:38.179058Z"}], "thread_id": "Thread-1", "execution_time": 0.015629053115844727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__order_shipping_tax_line_index.fd09a295cd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect index\nfrom `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__order_shipping_tax_line`\nwhere index is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:38.173185Z", "completed_at": "2024-06-07T20:32:38.178803Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:38.181584Z", "completed_at": "2024-06-07T20:32:38.181587Z"}], "thread_id": "Thread-4", "execution_time": 0.017902135848999023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__order_shipping_tax_line_order_shipping_line_id.0fcfb55295", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_shipping_line_id\nfrom `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__order_shipping_tax_line`\nwhere order_shipping_line_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:38.182518Z", "completed_at": "2024-06-07T20:32:38.195269Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:38.199580Z", "completed_at": "2024-06-07T20:32:38.199587Z"}], "thread_id": "Thread-3", "execution_time": 0.020697832107543945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__order_tag_order_id__index__source_relation.9a2443bd07", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        order_id, index, source_relation\n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__order_tag`\n    group by order_id, index, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:38.187619Z", "completed_at": "2024-06-07T20:32:38.199884Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:38.201768Z", "completed_at": "2024-06-07T20:32:38.201773Z"}], "thread_id": "Thread-2", "execution_time": 0.02125072479248047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__order_tag_index.c8a0f2d6a2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect index\nfrom `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__order_tag`\nwhere index is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:38.192061Z", "completed_at": "2024-06-07T20:32:38.201132Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:38.203952Z", "completed_at": "2024-06-07T20:32:38.203957Z"}], "thread_id": "Thread-1", "execution_time": 0.018837928771972656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__order_tag_order_id.cfe1531ec6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_id\nfrom `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__order_tag`\nwhere order_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:38.196187Z", "completed_at": "2024-06-07T20:32:38.202030Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:38.204787Z", "completed_at": "2024-06-07T20:32:38.204790Z"}], "thread_id": "Thread-4", "execution_time": 0.01861882209777832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__order_order_id__source_relation.81d10381c1", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        order_id, source_relation\n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__order`\n    group by order_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:38.205585Z", "completed_at": "2024-06-07T20:32:38.216912Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:38.225449Z", "completed_at": "2024-06-07T20:32:38.225456Z"}], "thread_id": "Thread-3", "execution_time": 0.023735761642456055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__order_url_tag_order_id__key__source_relation.568d75c0cf", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        order_id, key, source_relation\n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__order_url_tag`\n    group by order_id, key, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:38.211888Z", "completed_at": "2024-06-07T20:32:38.221078Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:38.226637Z", "completed_at": "2024-06-07T20:32:38.226640Z"}], "thread_id": "Thread-2", "execution_time": 0.018043041229248047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__order_url_tag_key.4644eec325", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect key\nfrom `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__order_url_tag`\nwhere key is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:38.217505Z", "completed_at": "2024-06-07T20:32:38.226881Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:38.229421Z", "completed_at": "2024-06-07T20:32:38.229425Z"}], "thread_id": "Thread-1", "execution_time": 0.019333839416503906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__order_url_tag_order_id.84a8f408d1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_id\nfrom `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__order_url_tag`\nwhere order_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:38.221340Z", "completed_at": "2024-06-07T20:32:38.227981Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:38.230334Z", "completed_at": "2024-06-07T20:32:38.230337Z"}], "thread_id": "Thread-4", "execution_time": 0.01950383186340332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.accepted_values_stg_shopify__price_rule_target_type__line_item__shipping_line.921059c008", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        target_type as value_field,\n        count(*) as n_records\n\n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__price_rule`\n    group by target_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'line_item','shipping_line'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:38.231116Z", "completed_at": "2024-06-07T20:32:38.242095Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:38.250328Z", "completed_at": "2024-06-07T20:32:38.250335Z"}], "thread_id": "Thread-3", "execution_time": 0.022674083709716797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.accepted_values_stg_shopify__price_rule_value_type__percentage__fixed_amount.65eceed909", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        value_type as value_field,\n        count(*) as n_records\n\n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__price_rule`\n    group by value_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'percentage','fixed_amount'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:38.236436Z", "completed_at": "2024-06-07T20:32:38.243095Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:38.251571Z", "completed_at": "2024-06-07T20:32:38.251575Z"}], "thread_id": "Thread-2", "execution_time": 0.02288198471069336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__price_rule_price_rule_id__source_relation.56ce313bee", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        price_rule_id, source_relation\n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__price_rule`\n    group by price_rule_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:38.243359Z", "completed_at": "2024-06-07T20:32:38.252249Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:38.254886Z", "completed_at": "2024-06-07T20:32:38.254890Z"}], "thread_id": "Thread-1", "execution_time": 0.018373966217041016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__price_rule_price_rule_id.a7160b00e0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect price_rule_id\nfrom `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__price_rule`\nwhere price_rule_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:38.246692Z", "completed_at": "2024-06-07T20:32:38.253635Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:38.259057Z", "completed_at": "2024-06-07T20:32:38.259061Z"}], "thread_id": "Thread-4", "execution_time": 0.01872420310974121, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__product_image_product_image_id__product_id__source_relation.ab95cde6f9", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        product_image_id, product_id, source_relation\n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__product_image`\n    group by product_image_id, product_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:38.255543Z", "completed_at": "2024-06-07T20:32:38.265601Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:38.267827Z", "completed_at": "2024-06-07T20:32:38.267833Z"}], "thread_id": "Thread-3", "execution_time": 0.02172112464904785, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__product_image_product_image_id.911df72b9c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect product_image_id\nfrom `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__product_image`\nwhere product_image_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:38.261049Z", "completed_at": "2024-06-07T20:32:38.267551Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:38.275343Z", "completed_at": "2024-06-07T20:32:38.275348Z"}], "thread_id": "Thread-2", "execution_time": 0.021054983139038086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__product_tag_product_id__index__source_relation.995253e0cc", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        product_id, index, source_relation\n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__product_tag`\n    group by product_id, index, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:38.268105Z", "completed_at": "2024-06-07T20:32:38.276522Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:38.278779Z", "completed_at": "2024-06-07T20:32:38.278783Z"}], "thread_id": "Thread-1", "execution_time": 0.017632007598876953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__product_tag_index.fb66bd9019", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect index\nfrom `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__product_tag`\nwhere index is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:38.271291Z", "completed_at": "2024-06-07T20:32:38.277170Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:38.282760Z", "completed_at": "2024-06-07T20:32:38.282764Z"}], "thread_id": "Thread-4", "execution_time": 0.01773810386657715, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__product_tag_product_id.2b27a85ed3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect product_id\nfrom `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__product_tag`\nwhere product_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:38.279032Z", "completed_at": "2024-06-07T20:32:38.289296Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:38.291400Z", "completed_at": "2024-06-07T20:32:38.291405Z"}], "thread_id": "Thread-3", "execution_time": 0.022696971893310547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__product_variant_variant_id__source_relation.7506695ec0", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        variant_id, source_relation\n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__product_variant`\n    group by variant_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:38.284425Z", "completed_at": "2024-06-07T20:32:38.291139Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:38.299967Z", "completed_at": "2024-06-07T20:32:38.299971Z"}], "thread_id": "Thread-2", "execution_time": 0.022692203521728516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__product_product_id__source_relation.48b32ab6a2", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        product_id, source_relation\n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__product`\n    group by product_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:38.295460Z", "completed_at": "2024-06-07T20:32:38.300626Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:38.302998Z", "completed_at": "2024-06-07T20:32:38.303002Z"}], "thread_id": "Thread-4", "execution_time": 0.01743912696838379, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__shop_shop_id__source_relation.29a0875415", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        shop_id, source_relation\n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__shop`\n    group by shop_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:38.291676Z", "completed_at": "2024-06-07T20:32:38.301389Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:38.303660Z", "completed_at": "2024-06-07T20:32:38.303662Z"}], "thread_id": "Thread-1", "execution_time": 0.018657922744750977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__refund_refund_id__source_relation.cd4dbc2b35", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        refund_id, source_relation\n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__refund`\n    group by refund_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:38.303922Z", "completed_at": "2024-06-07T20:32:38.314176Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:38.318949Z", "completed_at": "2024-06-07T20:32:38.318955Z"}], "thread_id": "Thread-3", "execution_time": 0.021266937255859375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__shop_shop_id.42e70e2fbe", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect shop_id\nfrom `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__shop`\nwhere shop_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:38.308916Z", "completed_at": "2024-06-07T20:32:38.319220Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:38.323898Z", "completed_at": "2024-06-07T20:32:38.323903Z"}], "thread_id": "Thread-2", "execution_time": 0.022207975387573242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__tender_transaction_transaction_id__source_relation.96e8ff578b", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        transaction_id, source_relation\n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__tender_transaction`\n    group by transaction_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:38.315643Z", "completed_at": "2024-06-07T20:32:38.324182Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:38.326554Z", "completed_at": "2024-06-07T20:32:38.326558Z"}], "thread_id": "Thread-4", "execution_time": 0.01689910888671875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.not_null_stg_shopify__tender_transaction_transaction_id.61935430b1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_id\nfrom `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__tender_transaction`\nwhere transaction_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:38.319511Z", "completed_at": "2024-06-07T20:32:38.325015Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:38.330166Z", "completed_at": "2024-06-07T20:32:38.330170Z"}], "thread_id": "Thread-1", "execution_time": 0.016740083694458008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__tax_line_order_line_id__index__source_relation.f01b294800", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        order_line_id, index, source_relation\n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__tax_line`\n    group by order_line_id, index, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-07T20:32:38.326843Z", "completed_at": "2024-06-07T20:32:38.331751Z"}, {"name": "execute", "started_at": "2024-06-07T20:32:38.332247Z", "completed_at": "2024-06-07T20:32:38.332251Z"}], "thread_id": "Thread-3", "execution_time": 0.008224725723266602, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.shopify_source.dbt_utils_unique_combination_of_columns_stg_shopify__transaction_transaction_id__source_relation.d55a33652a", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        transaction_id, source_relation\n    from `dbt-package-testing`.`shopify_source_tests_shopify_source`.`stg_shopify__transaction`\n    group by transaction_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}], "elapsed_time": 5.605384349822998, "args": {"project_dir": "/Users/jamie.rodriguez/Desktop/dbt_repos/Shopify/dbt_shopify_source/integration_tests", "select": [], "profiles_dir": "/Users/jamie.rodriguez/.dbt", "log_path": "/Users/jamie.rodriguez/Desktop/dbt_repos/Shopify/dbt_shopify_source/integration_tests/logs", "indirect_selection": "eager", "version_check": true, "log_format": "default", "partial_parse": true, "macro_debugging": false, "print": true, "log_level": "info", "warn_error_options": {"include": [], "exclude": []}, "use_colors_file": true, "exclude": [], "defer": false, "log_format_file": "debug", "static": false, "printer_width": 80, "quiet": false, "favor_state": false, "use_colors": true, "which": "generate", "strict_mode": false, "static_parser": true, "invocation_command": "dbt docs generate", "vars": {}, "cache_selected_only": false, "log_level_file": "debug", "send_anonymous_usage_stats": true, "empty_catalog": false, "compile": true, "log_file_max_bytes": 10485760, "introspect": true, "show_resource_report": false, "write_json": true, "partial_parse_file_diff": true, "populate_cache": true, "enable_legacy_logger": false}}