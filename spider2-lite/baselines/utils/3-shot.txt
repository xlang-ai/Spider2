/* Some example questions and corresponding SQL queries are provided as follows: */
/* Question: Calculate the conversion rate from product list pages to product detail pages for all sessions at January 2nd, 2021. */
/* SQL query: */
-- pulling user page views from GA4 events
WITH base_table AS (
-- pulls relevant columns from relevant dates to decrease the size of data scanned
  SELECT
    event_name,
    event_date,
    event_timestamp,
    user_pseudo_id,
    user_id,
    device,
    geo,
    traffic_source,
    event_params,
    user_properties
  FROM
    `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_*`
  WHERE
    _table_suffix = '20210102'
  AND event_name IN ('page_view')
)
, unnested_events AS (
-- unnests event parameters to get to relevant keys and values
  SELECT
    event_date AS date,
    event_timestamp AS event_timestamp_microseconds,
    user_pseudo_id,
    MAX(CASE WHEN c.key = 'ga_session_id' THEN c.value.int_value END) AS visitID,
    MAX(CASE WHEN c.key = 'ga_session_number' THEN c.value.int_value END) AS visitNumber,
    MAX(CASE WHEN c.key = 'page_title' THEN c.value.string_value END) AS page_title,
    MAX(CASE WHEN c.key = 'page_location' THEN c.value.string_value END) AS page_location
  FROM 
    base_table,
    UNNEST (event_params) c
  GROUP BY 1,2,3
)

, unnested_events_categorised AS (
-- categorizing Page Titles into PDPs and PLPs
  SELECT
  *,
  CASE WHEN ARRAY_LENGTH(SPLIT(page_location, '/')) >= 5 
            AND
            CONTAINS_SUBSTR(ARRAY_REVERSE(SPLIT(page_location, '/'))[SAFE_OFFSET(0)], '+')
            AND (LOWER(SPLIT(page_location, '/')[SAFE_OFFSET(4)]) IN 
                                        ('accessories','apparel','brands','campus+collection','drinkware',
                                          'electronics','google+redesign',
                                          'lifestyle','nest','new+2015+logo','notebooks+journals',
                                          'office','shop+by+brand','small+goods','stationery','wearables'
                                          )
                  OR
                  LOWER(SPLIT(page_location, '/')[SAFE_OFFSET(3)]) IN 
                                        ('accessories','apparel','brands','campus+collection','drinkware',
                                          'electronics','google+redesign',
                                          'lifestyle','nest','new+2015+logo','notebooks+journals',
                                          'office','shop+by+brand','small+goods','stationery','wearables'
                                          )
            )
            THEN 'PDP'
            WHEN NOT(CONTAINS_SUBSTR(ARRAY_REVERSE(SPLIT(page_location, '/'))[SAFE_OFFSET(0)], '+'))
            AND (LOWER(SPLIT(page_location, '/')[SAFE_OFFSET(4)]) IN 
                                        ('accessories','apparel','brands','campus+collection','drinkware',
                                          'electronics','google+redesign',
                                          'lifestyle','nest','new+2015+logo','notebooks+journals',
                                          'office','shop+by+brand','small+goods','stationery','wearables'
                                          )
                  OR 
                  LOWER(SPLIT(page_location, '/')[SAFE_OFFSET(3)]) IN 
                                          ('accessories','apparel','brands','campus+collection','drinkware',
                                            'electronics','google+redesign',
                                            'lifestyle','nest','new+2015+logo','notebooks+journals',
                                            'office','shop+by+brand','small+goods','stationery','wearables'
                                            )
            )
            THEN 'PLP'
        ELSE page_title
        END AS page_title_adjusted 

  FROM 
    unnested_events
)


, ranked_screens AS (
  SELECT
    *,
    LAG(page_title_adjusted,1) OVER (PARTITION BY  user_pseudo_id, visitID ORDER BY event_timestamp_microseconds ASC) previous_page,
    LEAD(page_title_adjusted,1) OVER (PARTITION BY  user_pseudo_id, visitID ORDER BY event_timestamp_microseconds ASC)  next_page
  FROM 
    unnested_events_categorised

)

,PLPtoPDPTransitions AS (
  SELECT
    user_pseudo_id,
    visitID
  FROM
    ranked_screens
  WHERE
    page_title_adjusted = 'PLP' AND next_page = 'PDP'
)

,TotalPLPViews AS (
  SELECT
    COUNT(*) AS total_plp_views
  FROM
    ranked_screens
  WHERE
    page_title_adjusted = 'PLP'
)

,TotalTransitions AS (
  SELECT
    COUNT(*) AS total_transitions
  FROM
    PLPtoPDPTransitions
)

SELECT
  (total_transitions * 100.0) / total_plp_views AS percentage
FROM
  TotalTransitions, TotalPLPViews;

/* Question: For US B2 patents granted in the first seven days of January 2018, tell me the publication number of each patent and the number of backward citations it has received in the SEA category. */
/* SQL query: */
WITH patents_sample AS (               -- name of our table
SELECT 
  t1.publication_number, 
  t1.application_number 
FROM 
  `patents-public-data.patents.publications` t1 
WHERE 
  country_code = 'US'                                                        -- only consider US patents
  AND grant_date between 20180101 AND 20180107                               -- grant dates between 2002 and 2006
  AND grant_date != 0                                                        -- only consider granted patents
  AND publication_number LIKE '%B2%'                                         -- only consider patents with kind code B2
)

SELECT
  t1.publication_number,
  -- count disctinct application numbers cited by our focal patent
  COUNT(DISTINCT t3.application_number) AS backward_citations
FROM
  patents_sample t1
LEFT OUTER JOIN (
  SELECT
    -- the publication number in the joined table is the citing publication number
    x2.publication_number AS citing_publication_number,
    -- the publication number in the unnested citation record is the cited publication number
    citation_u.publication_number AS cited_publication_number,
    -- the category in the unnested citation record is the category of the cited publication
    citation_u.category AS cited_publication_category
  FROM
    `patents-public-data.patents.publications` x2,
    UNNEST(citation) AS citation_u ) t2
ON
  t2.citing_publication_number = t1.publication_number
  -- citation category has to contain 'SEA'
  AND CONTAINS_SUBSTR(t2.cited_publication_category, 'SEA')
  -- one more join to publications table to get the application number
LEFT OUTER JOIN
  `patents-public-data.patents.publications` t3
ON
  t2.cited_publication_number = t3.publication_number
GROUP BY
  t1.publication_number
ORDER BY
  t1.publication_number

/* Question: What are the monthly statistics for new StackOverflow users created in 2021, including the percentage of new users who asked questions and the percentage of those who asked questions and then answered questions within their first 30 days? */
/* SQL query: */
DECLARE yr, conversion_window INT64;
SET (yr, conversion_window) = (2021, 30);

WITH users AS (
  SELECT *
  FROM `bigquery-public-data.stackoverflow.users`
  WHERE EXTRACT(YEAR FROM creation_date) = yr
),

users_questions AS (
  SELECT 
    u.display_name, 
    u.id AS user_id, 
    u.creation_date AS signup, 
    COUNT(q.id) AS questions, 
    MIN(q.creation_date) AS first_question
  FROM users u
  LEFT JOIN `bigquery-public-data.stackoverflow.posts_questions` q 
    ON q.owner_user_id = u.id 
    AND DATE_DIFF(q.creation_date, u.creation_date, DAY) <= conversion_window
  GROUP BY 
    u.display_name, 
    u.id, 
    u.creation_date
),

users_questions_answers AS (
  SELECT 
    display_name, 
    user_id, 
    signup, 
    questions, 
    first_question, 
    COUNT(a.id) AS answers_after_question
  FROM users_questions uq
  LEFT JOIN `bigquery-public-data.stackoverflow.posts_answers` a 
    ON a.owner_user_id = uq.user_id 
    AND a.creation_date > uq.first_question
    AND DATE_DIFF(a.creation_date, uq.first_question, DAY) <= conversion_window
  GROUP BY 
    display_name, 
    user_id, 
    signup, 
    questions, 
    first_question
)

SELECT 
  EXTRACT(MONTH FROM signup) AS month,
  COUNT(user_id) AS new_users,
  COUNT(DISTINCT CASE WHEN questions > 0 THEN user_id ELSE NULL END) AS asked,
  ROUND(COUNT(DISTINCT CASE WHEN questions > 0 THEN user_id ELSE NULL END) / COUNT(user_id) * 100, 2) AS pct_asked,
  COUNT(DISTINCT CASE WHEN answers_after_question > 0 THEN user_id ELSE NULL END) AS then_answered,
  ROUND(COUNT(DISTINCT CASE WHEN answers_after_question > 0 THEN user_id ELSE NULL END) / COUNT(user_id) * 100, 2) AS pct_then_answered
FROM users_questions_answers
GROUP BY 
  EXTRACT(MONTH FROM signup)
ORDER BY 
  month ASC;