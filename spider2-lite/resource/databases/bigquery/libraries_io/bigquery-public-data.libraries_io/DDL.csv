table_name,ddl
repositories,"CREATE TABLE `bigquery-public-data.libraries_io.repositories`
(
  id INT64 OPTIONS(description=""he unique primary key of the repository in the Libraries.io database.""),
  host_type STRING OPTIONS(description=""Which website the repository is hosted on either GitHub GitLab or Bitbucket.""),
  name_with_owner STRING OPTIONS(description=""The repository name and owner seperated by a slash also maps to the url slug on the given repository host e.g. librariesio/libraries.io.""),
  description STRING OPTIONS(description=""Description of repository.""),
  fork BOOL OPTIONS(description=""Is the repository a fork of another.""),
  created_timestamp TIMESTAMP OPTIONS(description=""Timestamp of when the repository was created on the host.""),
  updated_timestamp TIMESTAMP OPTIONS(description=""Timestamp of when the repository was last saved by Libraries.io.""),
  last_pushed_timestamp TIMESTAMP OPTIONS(description=""Timestamp of when the repository was last pushed to only available for GitHub repositories.""),
  homepage_url STRING OPTIONS(description=""URL of a declared homepage or other website for the repository.""),
  size INT64 OPTIONS(description=""Size of the repository in kilobytes only available for GitHub and Bitbucket.""),
  stars_count INT64 OPTIONS(description=""Number of stars on the repository only available for GitHub and GitLab.""),
  language STRING OPTIONS(description=""Primary programming language the project is written in only available for GitHub and Bitbucket.""),
  issues_enabled BOOL OPTIONS(description=""Is the bug tracker enabled for this repository?.""),
  wiki_enabled BOOL OPTIONS(description=""Is the wiki enabled for this repository?.""),
  pages_enabled BOOL OPTIONS(description=""Is GitHub pages enabled for this repository? only possible for GitHub.""),
  forks_count INT64 OPTIONS(description=""Number of forks of this repository.""),
  mirror_url STRING OPTIONS(description=""URL of the repositroy of which this is a mirror of only present if this repository is a mirror of another.""),
  open_issues_count INT64 OPTIONS(description=""Number of open issues on the repository bug tracker only available for GitHub and GitLab.""),
  default_branch STRING OPTIONS(description=""Primary branch of the repository.""),
  watchers_count INT64 OPTIONS(description=""Number of subscribers to all notifications for the repository only available for GitHub and Bitbucket.""),
  uuid STRING OPTIONS(description=""ID of the repository on the remote host not unique between GitLab and GitHub repositories.""),
  fork_source_name_with_owner STRING OPTIONS(description=""If the repository is a fork the repository name and owner seperated by a slash of the repository if was forked from.""),
  license STRING OPTIONS(description=""SPDX identifier of the license of the repository only available for GitHub repositories.""),
  contributors_count INT64 OPTIONS(description=""Number of unique contributors that have committed to the default branch.""),
  readme_filename STRING OPTIONS(description=""If a readme file has been detected the full name of the readme file e.g README.md.""),
  changelog_filename STRING OPTIONS(description=""If a changelog file has been detected the full name of the changelog file e.g changelog.txt.""),
  contributing_guidelines_filename STRING OPTIONS(description=""If a contributing guidelines file has been detected the full name of the contributing guidelines file e.g contributing.md.""),
  license_filename STRING OPTIONS(description=""If a license file has been detected the full name of the license file e.g LICENSE.""),
  code_of_conduct_filename STRING OPTIONS(description=""If a code of conduct file has been detected the full name of the code of conduct file e.g code_of_conduct.md.""),
  security_threat_model_filename STRING OPTIONS(description=""If a Security Threat Model file has been detected the full name of the Security Threat Model file e.g threatmodel.md.""),
  security_audit_filename STRING OPTIONS(description=""If a Security Audit file has been detected the full name of the Security Audit file e.g security.md.""),
  status STRING OPTIONS(description=""Either Active Deprecated Unmaintained Help Wanted Removed no value also means active. Updated when detected by Libraries.io or su. manually by Libraries.io user via \""repo suggection\"" feature.""),
  last_synced_timestamp TIMESTAMP OPTIONS(description=""Timestamp of when Libraries.io last synced the repository from the host API.""),
  sourcerank INT64 OPTIONS(description=""Libraries.io defined score based on quality popularity and community metrics.""),
  display_name STRING OPTIONS(description=""Display name for the repository only available for GitLab repositories.""),
  scm_type STRING OPTIONS(description=""Type of source control repository uses always \""git\"" for GitHub and GitLab.""),
  pull_requests_enabled STRING OPTIONS(description=""Are pull requests enabled for this repository? Only available for GitLab repositories.""),
  logo_url STRING OPTIONS(description=""Custom logo url for repository only available for GitLab repositories.""),
  keywords STRING OPTIONS(description=""Comma separated array of keywords called \""topics\"" on GitHub only available for GitHub and GitLab.""),
  an STRING OPTIONS(description="""")
);"
dependencies,"CREATE TABLE `bigquery-public-data.libraries_io.dependencies`
(
  id INT64 OPTIONS(description=""The unique primary key of the dependency in the Libraries.io database.""),
  platform STRING OPTIONS(description=""The name of the Package manager the dependency is available on.""),
  project_name STRING OPTIONS(description=""The name of the project the dependency belongs to.""),
  project_id INT64 OPTIONS(description=""The unique primary key of the project for this dependency in the Libraries.io database.""),
  version_number STRING OPTIONS(description=""The number of the version that the dependency belongs to.""),
  version_id INT64 OPTIONS(description=""The unique primary key of the version for this dependency in the Libraries.io database.""),
  dependency_name STRING OPTIONS(description=""The name of the project that the dependency specifies.""),
  dependency_platform STRING OPTIONS(description=""The name of the package manager that the project that the dependency specifies is available from (only different for Atom).""),
  dependency_kind STRING OPTIONS(description=""The type of dependency, often declared for the phase of usage, e.g. runtime, test, development, build.""),
  optional_dependency STRING OPTIONS(description=""Is the dependency optional?.""),
  dependency_requirements STRING OPTIONS(description=""The version or range of versions that the dependency specifies, resolution of that to a particular version is package manager specific.""),
  dependency_project_id INT64 OPTIONS(description=""The unique primary key of the project for this dependency in the Libraries.io database."")
);"
projects,"CREATE TABLE `bigquery-public-data.libraries_io.projects`
(
  id INT64 OPTIONS(description=""The unique primary key of the project in the Libraries.io database.""),
  platform STRING OPTIONS(description=""The name of the Package manager the project is available on.""),
  name STRING OPTIONS(description=""The name of the project, unique by Platform (case sensitive).""),
  created_timestamp TIMESTAMP OPTIONS(description=""The timestamp of when Libraries.io first discovered the project.""),
  updated_timestamp TIMESTAMP OPTIONS(description=""The timestamp of when Libraries.io last saved a change to the project.""),
  description STRING OPTIONS(description=""Description provided by the package manager, falling back to description from repository if empty.""),
  keywords STRING OPTIONS(description=""Comma separated array of keywords if supported by package manager.""),
  homepage_url STRING OPTIONS(description=""URL of webpage or repository as provided by package managers that support it.""),
  licenses STRING OPTIONS(description=""Comma separated array of SPDX identifiers for licenses declared in package manager meta data or submitted manually by Libraries.io user via \""project suggection\"" feature.""),
  repository_url STRING OPTIONS(description=""URL of source code repository declared in package manager metadata or submitted manually by Libraries.io user via \""project suggection\"" feature.""),
  versions_count INT64 OPTIONS(description=""Number of published versions of the project found by Libraries.io.""),
  sourcerank INT64 OPTIONS(description=""Libraries.io defined score based on quality, popularity and community metrics.""),
  latest_release_publish_timestamp TIMESTAMP OPTIONS(description=""Time of the latest release detected by Libraries.io (ordered by semver, falling back to publish date for invalid semver).""),
  latest_release_number STRING OPTIONS(description=""Version number of the latest release detected by Libraries.io (ordered by semver, falling back to publish date for invalid semver).""),
  package_manager_id INT64 OPTIONS(description=""Unique ID of project from package manager API, only currently used by PlatformIO.""),
  dependent_projects_count INT64 OPTIONS(description=""Number of other projects that declare the project as a dependency in one or more of their versions.""),
  language STRING OPTIONS(description=""Primary programming language the project is written in, pulled from the repository if source is hosted on GitHub.""),
  status STRING OPTIONS(description=""Either Active, Deprecated, Unmaintained, Help Wanted, Removed, no value also means active. Updated when detected by Libraries.io or submitted manually by Libraries.io user via \""project suggection\"" feature.""),
  last_synced_timestamp TIMESTAMP OPTIONS(description=""Timestamp of when Libraries.io last synced the project from it's package manager API.""),
  dependent_repositories_count INT64 OPTIONS(description=""The total count of open source repositories that list the project as a dependency as detected by Libraries.io.""),
  repository_id INT64 OPTIONS(description=""The unique primary key of the repository for this project in the Libraries.io database."")
);"
versions,"CREATE TABLE `bigquery-public-data.libraries_io.versions`
(
  id INT64 OPTIONS(description=""The unique primary key of the version in the Libraries.io database.""),
  platform STRING OPTIONS(description=""The name of the Package manager the version is available on.""),
  project_name STRING OPTIONS(description=""The name of the project the version belongs to.""),
  project_id INT64 OPTIONS(description=""The unique primary key of the project for this version in the Libraries.io database.""),
  number STRING OPTIONS(description=""The number of the release often confirms to semantic versioning.""),
  published_timestamp TIMESTAMP OPTIONS(description=""The timestamp of when the version was published.""),
  created_timestamp TIMESTAMP OPTIONS(description=""The timestamp of when the version was first detected by Libraries.io.""),
  updated_timestamp TIMESTAMP OPTIONS(description=""The timestamp of when the version was last saved by Libraries.io."")
);"
projects_with_repository_fields,"CREATE TABLE `bigquery-public-data.libraries_io.projects_with_repository_fields`
(
  id INT64 OPTIONS(description=""The unique primary key of the project in the Libraries.io database.""),
  platform STRING OPTIONS(description=""The name of the Package manager the project is available on.""),
  name STRING OPTIONS(description=""The name of the project, unique by Platform (case sensitive).""),
  created_timestamp TIMESTAMP OPTIONS(description=""The timestamp of when Libraries.io first discovered the project.""),
  updated_timestamp TIMESTAMP OPTIONS(description=""The timestamp of when Libraries.io last saved a change to the project.""),
  description STRING OPTIONS(description=""Description provided by the package manager, falling back to description from repository if empty.""),
  keywords STRING OPTIONS(description=""Comma separated array of keywords if supported by package manager.""),
  homepage_url STRING OPTIONS(description=""URL of webpage or repository as provided by package managers that support it.""),
  licenses STRING OPTIONS(description=""Comma separated array of SPDX identifiers for licenses declared in package manager meta data or submitted manually by Libraries.io user via \""project suggection\"" feature.""),
  repository_url STRING OPTIONS(description=""URL of source code repository declared in package manager metadata or submitted manually by Libraries.io user via \""project suggection\"" feature.""),
  versions_count INT64 OPTIONS(description=""Number of published versions of the project found by Libraries.io.""),
  sourcerank INT64 OPTIONS(description=""Libraries.io defined score based on quality, popularity and community metrics.""),
  latest_release_publish_timestamp TIMESTAMP OPTIONS(description=""Time of the latest release detected by Libraries.io (ordered by semver, falling back to publish date for invalid semver).""),
  latest_release_number STRING OPTIONS(description=""Version number of the latest release detected by Libraries.io (ordered by semver, falling back to publish date for invalid semver).""),
  package_manager_id INT64 OPTIONS(description=""Unique ID of project from package manager API, only currently used by PlatformIO.""),
  dependent_projects_count INT64 OPTIONS(description=""Number of other projects that declare the project as a dependency in one or more of their versions.""),
  language STRING OPTIONS(description=""Primary programming language the project is written in, pulled from the repository if source is hosted on GitHub.""),
  status STRING OPTIONS(description=""Either Active, Deprecated, Unmaintained, Help Wanted, Removed, no value also means active. Updated when detected by Libraries.io or submitted manually by Libraries.io user via \""project suggection\"" feature.""),
  last_synced_timestamp TIMESTAMP OPTIONS(description=""Timestamp of when Libraries.io last synced the project from it's package manager API.""),
  dependent_repositories_count INT64 OPTIONS(description=""The total count of open source repositories that list the project as a dependency as detected by Libraries.io.""),
  repository_id INT64 OPTIONS(description=""The unique primary key of the repository for this project in the Libraries.io database.""),
  repository_host_type STRING OPTIONS(description=""Which website the repository is hosted on, either GitHub, GitLab or Bitbucket.""),
  repository_name_with_owner STRING OPTIONS(description=""The repository name and owner seperated by a slash, also maps to the url slug on the given repository host e.g. librariesio/libraries.io.""),
  repository_description STRING OPTIONS(description=""Description of repository.""),
  repository_fork BOOL OPTIONS(description=""Is the repository a fork of another.""),
  repository_created_timestamp TIMESTAMP OPTIONS(description=""Timestamp of when the repository was created on the host.""),
  repository_updated_timestamp TIMESTAMP OPTIONS(description=""Timestamp of when the repository was last saved by Libraries.io.""),
  repository_last_pushed_timestamp TIMESTAMP OPTIONS(description=""Timestamp of when the repository was last pushed to, only available for GitHub repositories.""),
  repository_homepage_url STRING OPTIONS(description=""URL of a declared homepage or other website for the repository.""),
  repository_size INT64 OPTIONS(description=""Size of the repository in kilobytes, only available for GitHub and Bitbucket.""),
  repository_stars_count INT64 OPTIONS(description=""Number of stars on the repository, only available for GitHub and GitLab.""),
  repository_language STRING OPTIONS(description=""Primary programming language the project is written in, only available for GitHub and Bitbucket.""),
  repository_issues_enabled BOOL OPTIONS(description=""Is the bug tracker enabled for this repository?.""),
  repository_wiki_enabled BOOL OPTIONS(description=""Is the wiki enabled for this repository?.""),
  repository_pages_enabled BOOL OPTIONS(description=""Is GitHub pages enabled for this repository? only possible for GitHub.""),
  repository_forks_count INT64 OPTIONS(description=""Number of forks of this repository.""),
  repository_mirror_url STRING OPTIONS(description=""URL of the repositroy of which this is a mirror of, only present if this repository is a mirror of another.""),
  repository_open_issues_count INT64 OPTIONS(description=""Number of open issues on the repository bug tracker, only available for GitHub and GitLab.""),
  repository_default_branch STRING OPTIONS(description=""Primary branch of the repository.""),
  repository_watchers_count INT64 OPTIONS(description=""Number of subscribers to all notifications for the repository, only available for GitHub and Bitbucket.""),
  repository_uuid STRING OPTIONS(description=""ID of the repository on the remote host, not unique between GitLab and GitHub repositories.""),
  repository_fork_source_name_with_owner STRING OPTIONS(description=""If the repository is a fork, the repository name and owner seperated by a slash of the repository if was forked from.""),
  repository_license STRING OPTIONS(description=""SPDX identifier of the license of the repository, only available for GitHub repositories.""),
  repository_contributors_count INT64 OPTIONS(description=""Number of unique contributors that have committed to the default branch.""),
  repository_readme_filename STRING OPTIONS(description=""If a readme file has been detected, the full name of the readme file, e.g README.md.""),
  repository_changelog_filename STRING OPTIONS(description=""If a changelog file has been detected, the full name of the changelog file, e.g changelog.txt.""),
  repository_contributing_guidelines_filename STRING OPTIONS(description=""If a contributing guidelines file has been detected, the full name of the contributing guidelines file, e.g contributing.md.""),
  repository_license_filename STRING OPTIONS(description=""If a license file has been detected, the full name of the license file, e.g LICENSE.""),
  repository_code_of_conduct_filename STRING OPTIONS(description=""If a code of conduct file has been detected, the full name of the code of conduct file, e.g code_of_conduct.md.""),
  repository_security_threat_model_filename STRING OPTIONS(description=""If a Security Threat Model file has been detected, the full name of the Security Threat Model file, e.g threatmodel.md.""),
  repository_security_audit_filename STRING OPTIONS(description=""If a Security Audit file has been detected, the full name of the Security Audit file, e.g security.md.""),
  repository_status STRING OPTIONS(description=""Either Active, Deprecated, Unmaintained, Help Wanted, Removed, no value also means active. Updated when detected by Libraries.io or su. manually by Libraries.io user via \""repo suggection\"" feature.""),
  repository_last_synced_timestamp STRING OPTIONS(description=""Timestamp of when Libraries.io last synced the repository from the host API.""),
  repository_sourcerank INT64 OPTIONS(description=""Libraries.io defined score based on quality, popularity and community metrics.""),
  repository_display_name STRING OPTIONS(description=""Display name for the repository, only available for GitLab repositories.""),
  repository_scm_type STRING OPTIONS(description=""Type of source control repository uses, always \""git\"" for GitHub and GitLab.""),
  repository_pull_requests_enabled STRING OPTIONS(description=""Are pull requests enabled for this repository? Only available for GitLab repositories.""),
  repository_logo_url STRING OPTIONS(description=""Custom logo url for repository, only available for GitLab repositories.""),
  repository_keywords STRING OPTIONS(description=""Comma separated array of keywords, called \""topics\"" on GitHub, only available for GitHub and GitLab.""),
  bh STRING OPTIONS(description="""")
);"
repository_dependencies,"CREATE TABLE `bigquery-public-data.libraries_io.repository_dependencies`
(
  id INT64 OPTIONS(description=""The unique primary key of the repository dependency in the Libraries.io database.""),
  host_type STRING OPTIONS(description=""Which website the dependencys repository is hosted on, either GitHub, GitLab or Bitbucket.""),
  repository_name_with_owner STRING OPTIONS(description=""The repository name and owner seperated by a slash, also maps to the url slug on the given repository host e.g. librariesio/libraries.io.""),
  repository_id INT64 OPTIONS(description=""The unique primary key of the repository for this dependency in the Libraries.io database.""),
  manifest_platform STRING OPTIONS(description=""Which package manager the dependency listed in the manifest should use.""),
  manifest_filepath STRING OPTIONS(description=""Path to the file where the dependency is declared within the repository.""),
  git_branch STRING OPTIONS(description=""Which branch was the manifest loaded from the repository.""),
  manifest_kind STRING OPTIONS(description=""Either manifest or lockfile, manifests are written by humans, lockfiles contain full resolved dependency tree.""),
  optional STRING OPTIONS(description=""Is the dependency optional?.""),
  dependency_project_name STRING OPTIONS(description=""The name of the project that the dependency specifies.""),
  dependency_requirements STRING OPTIONS(description=""The version or range of versions that the dependency specifies, resolution of that to a particular version is package manager specific.""),
  dependency_kind STRING OPTIONS(description=""The type of dependency, often declared for the phase of usage, e.g. runtime, test, development, build.""),
  dependency_project_id INT64 OPTIONS(description=""The unique primary key of the project for this dependency in the Libraries.io database."")
);"
tags,"CREATE TABLE `bigquery-public-data.libraries_io.tags`
(
  id INT64 OPTIONS(description=""The unique primary key of the tag in the Libraries.io database.""),
  host_type STRING OPTIONS(description=""Which website the tags repository is hosted on, either GitHub, GitLab or Bitbucket.""),
  repository_name_with_owner STRING OPTIONS(description=""The repository name and owner seperated by a slash, also maps to the url slug on the given repository host e.g. librariesio/libraries.io.""),
  repository_id INT64 OPTIONS(description=""The unique primary key of the repository for this tag in the Libraries.io database.""),
  tag_name STRING OPTIONS(description=""The name of the tag often is a version number but could be any freeform string.""),
  tag_git_sha STRING OPTIONS(description=""Sha of the object that the tag is pointing at in the repository.""),
  tag_published_timestamp TIMESTAMP OPTIONS(description=""The timestamp of when the tag was published.""),
  tag_created_timestamp TIMESTAMP OPTIONS(description=""The timestamp of when the tag was first saved by Libraries.io.""),
  tag_updated_timestamp TIMESTAMP OPTIONS(description=""The timestamp of when the tag was last saved by Libraries.io."")
);"
