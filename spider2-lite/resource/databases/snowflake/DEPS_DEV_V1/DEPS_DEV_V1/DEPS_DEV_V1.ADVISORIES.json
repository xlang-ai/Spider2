{
    "table_name": "ADVISORIES",
    "table_fullname": "DEPS_DEV_V1.DEPS_DEV_V1.ADVISORIES",
    "column_names": [
        "CVSS3Score",
        "Aliases",
        "GitHubSeverity",
        "SourceID",
        "Source",
        "ReferenceURLs",
        "Packages",
        "Description",
        "Disclosed",
        "SourceURL",
        "SnapshotAt",
        "Severity",
        "Title"
    ],
    "column_types": [
        "NUMBER",
        "VARIANT",
        "TEXT",
        "TEXT",
        "TEXT",
        "VARIANT",
        "VARIANT",
        "TEXT",
        "NUMBER",
        "TEXT",
        "NUMBER",
        "TEXT",
        "TEXT"
    ],
    "description": [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
    ],
    "sample_rows": [
        {
            "SnapshotAt": 1694466085316347,
            "Source": "OSV",
            "SourceID": "GHSA-v24h-pjjv-mcp6",
            "SourceURL": "https://osv.dev/vulnerability/GHSA-v24h-pjjv-mcp6",
            "Title": "Denial of service in Tendermint",
            "Description": "### Description\n\n**Denial of Service 1**\n\nTendermint 0.33.2 and earlier does not limit the number of P2P connection requests. For each p2p connection, Tendermint allocates XXX bytes. Even though this memory is garbage collected once the connection is terminated (due to duplicate IP or reaching a maximum number of inbound peers), temporary memory spikes can lead to OOM (Out-Of-Memory) exceptions. \n\nTendermint 0.33.3 (and 0.32.10) limits the total number of P2P incoming connection requests to to `p2p.max_num_inbound_peers + len(p2p.unconditional_peer_ids)`.\n\nNotes:\n\n- Tendermint does not rate limit P2P connection requests per IP (an attacker can saturate all the inbound slots);\n- Tendermint does not rate limit HTTP(S) requests. If you expose any RPC endpoints to the public, please make sure to put in place some protection (https://www.nginx.com/blog/rate-limiting-nginx/). We may implement this in the future (https://github.com/tendermint/tendermint/issues/1696).\n\n**Denial of Service 2**\n\nTendermint 0.33.2 and earlier does not reclaim `activeID` of a peer after it's removed in `Mempool` reactor. This does not happen all the time. It only happens when a connection fails (for any reason) before the `Peer` is created and added to all reactors. `RemovePeer` is therefore called before `AddPeer`, which leads to always growing memory (`activeIDs` map). The `activeIDs` map has a maximum size of 65535 and the node will panic if this map reaches the maximum. An attacker can create a lot of connection attempts (exploiting Denial of Service 1), which ultimately will lead to the node panicking.\n\nTendermint 0.33.3 (and 0.32.10) claims `activeID` for a peer in `InitPeer`, which is executed before `MConnection` is started.\n\nNotes: \n\n- `InitPeer` function was added to all reactors to combat a similar issue - https://github.com/tendermint/tendermint/issues/3338;\n- Denial of Service 2 is independent of Denial of Service 1 and can be executed without it.\n\n### Impact\n\n- All full nodes (except for validators who are behind closed networks)\n- Node's memory usage increases, then it panics either in the mempool or due to OOM.\n\n### Patches\n\n- v0.33.3\n- v0.32.10\n- v0.31.12\n\n### Workarounds\n\nNo workarounds.\n\n### References\n\n- https://hackerone.com/reports/820317 (not disclosed yet)\n- https://github.com/tendermint/tendermint/issues/3338\n- https://github.com/tendermint/tendermint/issues/1696\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [tendermint/tendermint](https://github.com/tendermint/tendermint)\n* Email us at [security@tendermint.com](mailto:security@tendermint.com)\n\nMore information can be found [here](https://tendermint.com/security/).\n\n### Credits\n\n- [fudongbai](https://hackerone.com/fudongbai) for discovering and reporting Denial of Service 2\n- Ethan Buchman (@ebuchman) for writing a test case for Denial of Service 2 and Tess Rinearson (@tessr) for fixing it\n- Anton Kaliaev (@melekes) for fixing Denial of Service 1",
            "ReferenceURLs": "[\n  \"https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2021/05/GHSA-v24h-pjjv-mcp6/GHSA-v24h-pjjv-mcp6.json\",\n  \"https://github.com/tendermint/tendermint\",\n  \"https://github.com/tendermint/tendermint/blob/master/CHANGELOG.md#denial-of-service-1\",\n  \"https://github.com/tendermint/tendermint/commit/e2d6859afd7dba4cf97c7f7d412e7d8fc908d1cd\",\n  \"https://github.com/tendermint/tendermint/issues/1696\",\n  \"https://github.com/tendermint/tendermint/issues/3338\",\n  \"https://github.com/tendermint/tendermint/security/advisories/GHSA-v24h-pjjv-mcp6\",\n  \"https://hackerone.com/reports/820317\",\n  \"https://nvd.nist.gov/vuln/detail/CVE-2020-5303\"\n]",
            "CVSS3Score": "3.100000000",
            "Severity": "UNKNOWN",
            "GitHubSeverity": "LOW",
            "Disclosed": 1622141049000000,
            "Packages": "[\n  {\n    \"AffectedVersions\": \"Introduced: 0.33.0, Fixed: 0.33.3, Introduced: 0, Fixed: 0.31.12, Introduced: 0.32.0, Fixed: 0.32.10\",\n    \"Name\": \"github.com/tendermint/tendermint/p2p\",\n    \"System\": \"GO\",\n    \"UnaffectedVersions\": \"\"\n  }\n]",
            "Aliases": "[]"
        },
        {
            "SnapshotAt": 1694466085316347,
            "Source": "OSV",
            "SourceID": "GHSA-r7wr-4w5q-55m6",
            "SourceURL": "https://osv.dev/vulnerability/GHSA-r7wr-4w5q-55m6",
            "Title": "Cilium vulnerable to information leakage via incorrect ReferenceGrant handling",
            "Description": "### Impact\n\nWhen the [Gateway API](https://docs.cilium.io/en/v1.13/network/servicemesh/gateway-api/gateway-api/) is enabled in Cilium, the absence of a check on the namespace in which a [ReferenceGrant](https://gateway-api.sigs.k8s.io/api-types/referencegrant/) is created could result in Cilium gaining visibility of secrets (including certificates) and services across namespaces.\n\nAn attacker on an affected cluster can configure Cilium to use cluster secrets or communicate with services that it should not have access to.\n\nGateway API functionality is disabled by default.\n\n### Patches\n\nThis vulnerability is fixed in Cilium release 1.13.4.\n\nCilium versions <1.13 are not affected.\n\n### Workarounds\n\nThere is no workaround to this issue.\n\n### Acknowledgements\nThe Cilium community has worked together with members of Isovalent to prepare these mitigations. Special thanks to @meyskens for investigating and fixing the issue.\n\n### For more information\nIf you have any questions or comments about this advisory, please reach out on [Slack](https://docs.cilium.io/en/latest/community/community/#slack).\n\nAs usual, if you think you found a related vulnerability, we strongly encourage you to report security vulnerabilities to our private security mailing list: [security@cilium.io](mailto:security@cilium.io) - first, before disclosing them in any public forums. This is a private mailing list where only members of the Cilium internal security team are subscribed to, and is treated as top priority.\n",
            "ReferenceURLs": "[\n  \"https://github.com/cilium/cilium\",\n  \"https://github.com/cilium/cilium/releases/tag/v1.13.4\",\n  \"https://github.com/cilium/cilium/security/advisories/GHSA-r7wr-4w5q-55m6\",\n  \"https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2023/06/GHSA-r7wr-4w5q-55m6/GHSA-r7wr-4w5q-55m6.json\",\n  \"https://nvd.nist.gov/vuln/detail/CVE-2023-34242\"\n]",
            "CVSS3Score": "3.400000000",
            "Severity": "UNKNOWN",
            "GitHubSeverity": "LOW",
            "Disclosed": 1686937676000000,
            "Packages": "[\n  {\n    \"AffectedVersions\": \"Introduced: 1.13.0, Fixed: 1.13.4\",\n    \"Name\": \"github.com/cilium/cilium\",\n    \"System\": \"GO\",\n    \"UnaffectedVersions\": \"\"\n  }\n]",
            "Aliases": "[]"
        },
        {
            "SnapshotAt": 1694466085316347,
            "Source": "OSV",
            "SourceID": "GHSA-68jh-rf6x-836f",
            "SourceURL": "https://osv.dev/vulnerability/GHSA-68jh-rf6x-836f",
            "Title": "@apollo/server vulnerable to unsafe application of Content Security Policy via reused nonces",
            "Description": "### Context\nContent Security Policies (CSP) are a defense-in-depth strategy against XSS attacks. Improper application of CSP isn't itself a vulnerability, but it does fail to prevent XSS in the event that there is a viable attack vector for an XSS attack.\n\n### Impact\nThere aren't any XSS attack vectors via the Apollo Server landing pages _known to Apollo_, so to our knowledge there is no impact. However, if there are existing XSS vectors that haven't been reported and patched, then all users of Apollo Server's landing pages have a vulnerability which won't be prevented by the current CSP implemented by the landing pages.\n\nPrior to version 4.7.1, there was no CSP implemented at all. However, the initial CSP implementation (4.7.1+) reused nonces. While this sufficiently resolved the issue w.r.t. scripts not running in Safari, it did not implement CSP in a safe or conventional way.\n\n### Patches\nThe issue is patched in the latest version of Apollo Server, v4.7.4. The changes can be reviewed in [the merge commit](https://github.com/apollographql/apollo-server/commit/0adaf80d1ee51d8c7e5fd863c04478536d15eb8c).\n\n### Workarounds\nThe landing page can be disabled completely until the patch can be upgraded to.\nhttps://www.apollographql.com/docs/apollo-server/api/plugin/landing-pages/#disabling-the-landing-page\n\n### References\nhttps://content-security-policy.com/nonce/",
            "ReferenceURLs": "[\n  \"https://github.com/apollographql/apollo-server\",\n  \"https://github.com/apollographql/apollo-server/commit/0adaf80d1ee51d8c7e5fd863c04478536d15eb8c\",\n  \"https://github.com/apollographql/apollo-server/security/advisories/GHSA-68jh-rf6x-836f\",\n  \"https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2023/06/GHSA-68jh-rf6x-836f/GHSA-68jh-rf6x-836f.json\"\n]",
            "CVSS3Score": null,
            "Severity": "UNKNOWN",
            "GitHubSeverity": "LOW",
            "Disclosed": 1686944453000000,
            "Packages": "[\n  {\n    \"AffectedVersions\": \"Introduced: 4.7.1, Fixed: 4.7.4\",\n    \"Name\": \"@apollo/server\",\n    \"System\": \"NPM\",\n    \"UnaffectedVersions\": \"\"\n  }\n]",
            "Aliases": "[]"
        },
        {
            "SnapshotAt": 1694466085316347,
            "Source": "OSV",
            "SourceID": "GHSA-6cpc-mj5c-m9rq",
            "SourceURL": "https://osv.dev/vulnerability/GHSA-6cpc-mj5c-m9rq",
            "Title": "Arbitrary File Write in cli",
            "Description": "Affected versions of `cli` use predictable temporary file names. If an attacker can create a symbolic link at the location of one of these temporarly file names, the attacker can arbitrarily write to any file that the user which owns the `cli` process has permission to write to.\n\n\n## Proof of Concept\n\nBy creating Symbolic Links at the following locations, the target of the link can be written to.\n```\nlock_file = '/tmp/' + cli.app + '.pid',\nlog_file = '/tmp/' + cli.app + '.log';\n```\n\n\n## Recommendation\n\nUpdate to version 1.0.0 or later.",
            "ReferenceURLs": "[\n  \"https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=809252\",\n  \"https://github.com/advisories/GHSA-6cpc-mj5c-m9rq\",\n  \"https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2019/02/GHSA-6cpc-mj5c-m9rq/GHSA-6cpc-mj5c-m9rq.json\",\n  \"https://github.com/node-js-libs/cli/issues/81\",\n  \"https://nvd.nist.gov/vuln/detail/CVE-2016-10538\",\n  \"https://www.npmjs.com/advisories/95\"\n]",
            "CVSS3Score": null,
            "Severity": "UNKNOWN",
            "GitHubSeverity": "LOW",
            "Disclosed": 1550533203000000,
            "Packages": "[\n  {\n    \"AffectedVersions\": \"Introduced: 0, Fixed: 1.0.0\",\n    \"Name\": \"cli\",\n    \"System\": \"NPM\",\n    \"UnaffectedVersions\": \"\"\n  }\n]",
            "Aliases": "[]"
        },
        {
            "SnapshotAt": 1694466085316347,
            "Source": "OSV",
            "SourceID": "GHSA-mq8j-3h7h-p8g7",
            "SourceURL": "https://osv.dev/vulnerability/GHSA-mq8j-3h7h-p8g7",
            "Title": "Compromised child renderer processes could obtain IPC access without nodeIntegrationInSubFrames being enabled",
            "Description": "### Impact\nThis vulnerability allows a renderer with JS execution to obtain access to a new renderer process with `nodeIntegrationInSubFrames` enabled which in turn allows effective access to `ipcRenderer`.\n\nPlease note the misleadingly named `nodeIntegrationInSubFrames` option does not implicitly grant Node.js access rather it depends on the existing `sandbox` setting.  If your application is sandboxed then `nodeIntegrationInSubFrames` just gives access to the sandboxed renderer APIs (which includes `ipcRenderer`).\n\nIf your application then additionally exposes IPC messages without IPC `senderFrame` validation that perform privileged actions or return confidential data this access to `ipcRenderer` can in turn compromise your application / user even with the sandbox enabled.\n\n### Patches\nThis has been patched and the following Electron versions contain the fix:\n\n* `18.0.0-beta.6`\n* `17.2.0`\n* `16.2.6`\n* `15.5.5`\n\n### Workarounds\nEnsure that all IPC message handlers appropriately validate `senderFrame` as per our [security tutorial here](https://github.com/electron/electron/blob/main/docs/tutorial/security.md#17-validate-the-sender-of-all-ipc-messages).\n\n### For more information\n\nIf you have any questions or comments about this advisory, email us at [security@electronjs.org](mailto:security@electronjs.org).",
            "ReferenceURLs": "[\n  \"https://github.com/electron/electron\",\n  \"https://github.com/electron/electron/security/advisories/GHSA-mq8j-3h7h-p8g7\",\n  \"https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2022/06/GHSA-mq8j-3h7h-p8g7/GHSA-mq8j-3h7h-p8g7.json\",\n  \"https://nvd.nist.gov/vuln/detail/CVE-2022-29247\"\n]",
            "CVSS3Score": "2.200000000",
            "Severity": "UNKNOWN",
            "GitHubSeverity": "LOW",
            "Disclosed": 1655421273000000,
            "Packages": "[\n  {\n    \"AffectedVersions\": \"Introduced: 0, Fixed: 15.5.5, Introduced: 16.0.0, Fixed: 16.2.6, Introduced: 17.0.0, Fixed: 17.2.0, Introduced: 18.0.0-beta.1, Fixed: 18.0.0-beta.6\",\n    \"Name\": \"electron\",\n    \"System\": \"NPM\",\n    \"UnaffectedVersions\": \"\"\n  }\n]",
            "Aliases": "[]"
        }
    ]
}