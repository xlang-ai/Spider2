## S2_CELLIDFROMPOINT

S2_CELLIDFROMPOINT(point_geography[, level => cell_level])

**Description**

Returns the [ S2 cell ID ](https://s2geometry.io/devguide/s2cell_hierarchy) covering a point ` GEOGRAPHY ` .

* The optional ` INT64 ` parameter ` level ` specifies the S2 cell level for the returned cell. Naming this argument is optional.

This is advanced functionality for interoperability with systems utilizing the
[ S2 Geometry Library ](https://s2geometry.io/) .

**Constraints**

* Returns the cell ID as a signed ` INT64 ` bit-equivalent to [ unsigned 64-bit integer representation ](https://s2geometry.io/devguide/s2cell_hierarchy) .
* Can return negative cell IDs.
* Valid S2 cell levels are 0 to 30.
* ` level ` defaults to 30 if not explicitly specified.
* The function only supports a single point GEOGRAPHY. Use the ` SAFE ` prefix if the input can be multipoint, linestring, polygon, or an empty ` GEOGRAPHY ` .
* To compute the covering of a complex ` GEOGRAPHY ` , use  S2_COVERINGCELLIDS  .

**Return type**

` INT64 `

**Example**


WITH data AS ( SELECT 1 AS id, ST_GEOGPOINT(-122, 47) AS geo UNION ALL
-- empty geography is not supported SELECT 2 AS id, ST_GEOGFROMTEXT('POINT EMPTY') AS geo UNION ALL
-- only points are supported SELECT 3 AS id, ST_GEOGFROMTEXT('LINESTRING(1 2, 3 4)') AS geo ) SELECT id,
SAFE.S2_CELLIDFROMPOINT(geo) cell30,
SAFE.S2_CELLIDFROMPOINT(geo, level => 10) cell10 FROM data;

/*----+---------------------+---------------------*
| id | cell30              | cell10              |
+----+---------------------+---------------------+
| 1  | 6093613931972369317 | 6093613287902019584 |
| 2  | NULL                | NULL                |
| 3  | NULL                | NULL                |
*----+---------------------+---------------------*/