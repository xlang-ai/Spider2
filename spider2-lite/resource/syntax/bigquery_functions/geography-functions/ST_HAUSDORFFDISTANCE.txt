## ST_HAUSDORFFDISTANCE

ST_HAUSDORFFDISTANCE(geography_1, geography_2)


ST_HAUSDORFFDISTANCE(geography_1, geography_2, directed=>{ TRUE | FALSE })

**Description**

Gets the discrete [ Hausdorff distance
](http://en.wikipedia.org/wiki/Hausdorff_distance) , which is the greatest of all the distances from a discrete point in one geography to the closest discrete point in another geography.

**Definitions**

* ` geography_1 ` : A ` GEOGRAPHY ` value that represents the first geography.
* ` geography_2 ` : A ` GEOGRAPHY ` value that represents the second geography.
* ` directed ` : Optional, required named argument that represents the type of computation to use on the input geographies. If this argument is not specified, ` directed=>FALSE ` is used by default.

* ` FALSE ` : The largest Hausdorff distance found in ( ` geography_1 ` , ` geography_2 ` ) and ( ` geography_2 ` , ` geography_1 ` ).

* ` TRUE ` (default): The Hausdorff distance for ( ` geography_1 ` , ` geography_2 ` ).

**Details**

If an input geography is ` NULL ` , the function returns ` NULL ` .

**Return type**

` FLOAT64 `

**Example**

The following query gets the Hausdorff distance between ` geo1 ` and ` geo2 `
:


WITH data AS ( SELECT ST_GEOGFROMTEXT('LINESTRING(20 70, 70 60, 10 70, 70 70)') AS geo1,
ST_GEOGFROMTEXT('LINESTRING(20 90, 30 90, 60 10, 90 10)') AS geo2 ) SELECT ST_HAUSDORFFDISTANCE(geo1, geo2, directed=>TRUE) AS distance FROM data;

/*--------------------+
| distance           |
+--------------------+
| 1688933.9832041925 |
+--------------------*/

The following query gets the Hausdorff distance between ` geo2 ` and ` geo1 `
:


WITH data AS ( SELECT ST_GEOGFROMTEXT('LINESTRING(20 70, 70 60, 10 70, 70 70)') AS geo1,
ST_GEOGFROMTEXT('LINESTRING(20 90, 30 90, 60 10, 90 10)') AS geo2 ) SELECT ST_HAUSDORFFDISTANCE(geo2, geo1, directed=>TRUE) AS distance FROM data;

/*--------------------+
| distance           |
+--------------------+
| 5802892.745488612  |
+--------------------*/

The following query gets the largest Hausdorff distance between ( ` geo1 ` and
` geo2 ` ) and ( ` geo2 ` and ` geo1 ` ):


WITH data AS ( SELECT ST_GEOGFROMTEXT('LINESTRING(20 70, 70 60, 10 70, 70 70)') AS geo1,
ST_GEOGFROMTEXT('LINESTRING(20 90, 30 90, 60 10, 90 10)') AS geo2 ) SELECT ST_HAUSDORFFDISTANCE(geo1, geo2, directed=>FALSE) AS distance FROM data;

/*--------------------+
| distance           |
+--------------------+
| 5802892.745488612  |
+--------------------*/

The following query produces the same results as the previous query because `
ST_HAUSDORFFDISTANCE ` uses ` directed=>FALSE ` by default.


WITH data AS ( SELECT ST_GEOGFROMTEXT('LINESTRING(20 70, 70 60, 10 70, 70 70)') AS geo1,
ST_GEOGFROMTEXT('LINESTRING(20 90, 30 90, 60 10, 90 10)') AS geo2 ) SELECT ST_HAUSDORFFDISTANCE(geo1, geo2) AS distance FROM data;