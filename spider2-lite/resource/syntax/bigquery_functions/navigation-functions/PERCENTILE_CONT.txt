## PERCENTILE_CONT

PERCENTILE_CONT (value_expression, percentile [{RESPECT | IGNORE} NULLS]) OVER over_clause

over_clause:
{ named_window | ( [ window_specification ] ) }

window_specification:
[ named_window ]
[ PARTITION BY partition_expression [, ...] ]


**Description**

Computes the specified percentile value for the value_expression, with linear interpolation.

This function ignores NULL values if ` RESPECT NULLS ` is absent. If ` RESPECT NULLS ` is present:

* Interpolation between two ` NULL ` values returns ` NULL ` .
* Interpolation between a ` NULL ` value and a non- ` NULL ` value returns the non- ` NULL ` value.

To learn more about the ` OVER ` clause and how to use it, see [ Window function calls ](/bigquery/docs/reference/standard-sql/window-function-calls) .

` PERCENTILE_CONT ` can be used with differential privacy. To learn more, see
[ Differentially private aggregate functions
](/bigquery/docs/reference/standard-sql/aggregate-dp-functions) .

**Supported Argument Types**

* ` value_expression ` and ` percentile ` must have one of the following types:
* ` NUMERIC `
* ` BIGNUMERIC `
* ` FLOAT64 `
* ` percentile ` must be a literal in the range ` [0, 1] ` .

**Return Data Type**

The return data type is determined by the argument types with the following table.

INPUT  |  ` NUMERIC ` |  ` BIGNUMERIC ` |  ` FLOAT64 `
---|---|---|---
` NUMERIC ` |  ` NUMERIC ` |  ` BIGNUMERIC ` |  ` FLOAT64 `
` BIGNUMERIC ` |  ` BIGNUMERIC ` |  ` BIGNUMERIC ` |  ` FLOAT64 `
` FLOAT64 ` |  ` FLOAT64 ` |  ` FLOAT64 ` |  ` FLOAT64 `

**Examples**

The following example computes the value for some percentiles from a column of values while ignoring nulls.


SELECT PERCENTILE_CONT(x, 0) OVER() AS min,
PERCENTILE_CONT(x, 0.01) OVER() AS percentile1,
PERCENTILE_CONT(x, 0.5) OVER() AS median,
PERCENTILE_CONT(x, 0.9) OVER() AS percentile90,
PERCENTILE_CONT(x, 1) OVER() AS max FROM UNNEST([0, 3, NULL, 1, 2]) AS x LIMIT 1;

/*-----+-------------+--------+--------------+-----*
| min | percentile1 | median | percentile90 | max |
+-----+-------------+--------+--------------+-----+
| 0   | 0.03        | 1.5    | 2.7          | 3   |
*-----+-------------+--------+--------------+-----*/

The following example computes the value for some percentiles from a column of values while respecting nulls.


SELECT PERCENTILE_CONT(x, 0 RESPECT NULLS) OVER() AS min,
PERCENTILE_CONT(x, 0.01 RESPECT NULLS) OVER() AS percentile1,
PERCENTILE_CONT(x, 0.5 RESPECT NULLS) OVER() AS median,
PERCENTILE_CONT(x, 0.9 RESPECT NULLS) OVER() AS percentile90,
PERCENTILE_CONT(x, 1 RESPECT NULLS) OVER() AS max FROM UNNEST([0, 3, NULL, 1, 2]) AS x LIMIT 1;

/*------+-------------+--------+--------------+-----*
| min  | percentile1 | median | percentile90 | max |
+------+-------------+--------+--------------+-----+
| NULL | 0           | 1      | 2.6          | 3   |
*------+-------------+--------+--------------+-----*/