## COVAR_SAMP

COVAR_SAMP( X1, X2 )
[ OVER over_clause ]

over_clause:
{ named_window | ( [ window_specification ] ) }

window_specification:
[ named_window ]
[ PARTITION BY partition_expression [, ...] ]
[ ORDER BY expression [ { ASC | DESC }  ] [, ...] ]
[ window_frame_clause ]


**Description**

Returns the sample [ covariance ](https://en.wikipedia.org/wiki/Covariance) of a set of number pairs. The first number is the dependent variable; the second number is the independent variable. The return result is between ` -Inf ` and
` +Inf ` .

All numeric types are supported. If the input is ` NUMERIC ` or ` BIGNUMERIC `
then the internal aggregation is stable with the final output converted to a `
FLOAT64 ` . Otherwise the input is converted to a ` FLOAT64 ` before aggregation, resulting in a potentially unstable result.

This function ignores any input pairs that contain one or more ` NULL `
values. If there are fewer than two input pairs without ` NULL ` values, this function returns ` NULL ` .

` NaN ` is produced if:

* Any input value is ` NaN `
* Any input value is positive infinity or negative infinity.

To learn more about the optional aggregate clauses that you can pass into this function, see [ Aggregate function calls ](/bigquery/docs/reference/standard-
sql/aggregate-function-calls) .

This function can be used with the [ ` AGGREGATION_THRESHOLD ` clause
](/bigquery/docs/reference/standard-sql/query-syntax#agg_threshold_clause) .

To learn more about the ` OVER ` clause and how to use it, see [ Window function calls ](/bigquery/docs/reference/standard-sql/window-function-calls) .

**Return Data Type**

` FLOAT64 `

**Examples**


SELECT COVAR_SAMP(y, x) AS results FROM UNNEST(
[
STRUCT(1.0 AS y, 1.0 AS x),
(2.0, 6.0),
(9.0, 3.0),
(2.0, 6.0),
(9.0, 3.0)])

/*---------*
| results |
+---------+
| -2.1    |
*---------*/


SELECT COVAR_SAMP(y, x) AS results FROM UNNEST(
[
STRUCT(1.0 AS y, 1.0 AS x),
(2.0, 6.0),
(9.0, 3.0),
(2.0, 6.0),
(NULL, 3.0)])

/*----------------------*
| results              |
+----------------------+
| --1.3333333333333333 |
*----------------------*/


SELECT COVAR_SAMP(y, x) AS results FROM UNNEST([STRUCT(1.0 AS y, NULL AS x),(9.0, 3.0)])

/*---------*
| results |
+---------+
| NULL    |
*---------*/


SELECT COVAR_SAMP(y, x) AS results FROM UNNEST([STRUCT(1.0 AS y, NULL AS x),(9.0, NULL)])

/*---------*
| results |
+---------+
| NULL    |
*---------*/


SELECT COVAR_SAMP(y, x) AS results FROM UNNEST(
[
STRUCT(1.0 AS y, 1.0 AS x),
(2.0, 6.0),
(9.0, 3.0),
(2.0, 6.0),
(CAST('Infinity' as FLOAT64), 3.0)])

/*---------*
| results |
+---------+
| NaN     |
*---------*/