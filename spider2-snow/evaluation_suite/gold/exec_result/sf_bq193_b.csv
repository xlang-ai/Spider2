line,frequency,languages_sorted
"* `adminPassword`: self-explanatory. Be aware that Azure requires passwords to have One upper case, one lower case, a special character, and a number",12,"Batchfile, Groovy, HCL, HTML, JavaScript, PHP, Perl, PowerShell, Python, Ruby, Shell, XSLT"
* `vmSize`: The type of VM that you want to use for the node. The default size is D1_v2 but you can change that if you expect to run workloads that require more RAM or CPU resources.,12,"Batchfile, Groovy, HCL, HTML, JavaScript, PHP, Perl, PowerShell, Python, Ruby, Shell, XSLT"
"    <img src=""http://armviz.io/visualizebutton.png""/>",12,"Batchfile, Groovy, HCL, HTML, JavaScript, PHP, Perl, PowerShell, Python, Ruby, Shell, XSLT"
 1. browse to https://portal.azure.com,12,"Batchfile, Groovy, HCL, HTML, JavaScript, PHP, Perl, PowerShell, Python, Ruby, Shell, XSLT"
</a>,12,"Batchfile, Groovy, HCL, HTML, JavaScript, PHP, Perl, PowerShell, Python, Ruby, Shell, XSLT"
* `vmDnsPrefix`: this is the public DNS name for the VM that you will use interact with your console. You just need to specify an unique name.,12,"Batchfile, Groovy, HCL, HTML, JavaScript, PHP, Perl, PowerShell, Python, Ruby, Shell, XSLT"
Once your deployment is complete you will be able to connect to the Emercoin public network.,12,"Batchfile, Groovy, HCL, HTML, JavaScript, PHP, Perl, PowerShell, Python, Ruby, Shell, XSLT"
* `adminUsername`: self-explanatory. This is the account you will use for connecting to the node,12,"Batchfile, Groovy, HCL, HTML, JavaScript, PHP, Perl, PowerShell, Python, Ruby, Shell, XSLT"
"<a href=""http://armviz.io/#/?load=https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Femercoin-ubuntu%2Fazuredeploy.json"" target=""_blank"">",12,"Batchfile, Groovy, HCL, HTML, JavaScript, PHP, Perl, PowerShell, Python, Ruby, Shell, XSLT"
This Microsoft Azure template deploys a single Emercoin client which will connect to the public Emercoin network.,12,"Batchfile, Groovy, HCL, HTML, JavaScript, PHP, Perl, PowerShell, Python, Ruby, Shell, XSLT"
" 3. then expand your resources, and public ip address of your node.",12,"Batchfile, Groovy, HCL, HTML, JavaScript, PHP, Perl, PowerShell, Python, Ruby, Shell, XSLT"
 2. Try to use the cli-client by `emc help` or `emc getinfo`,12,"Batchfile, Groovy, HCL, HTML, JavaScript, PHP, Perl, PowerShell, Python, Ruby, Shell, XSLT"
![Emercoin-Azure](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/emercoin-ubuntu/images/emercoin.png),12,"Batchfile, Groovy, HCL, HTML, JavaScript, PHP, Perl, PowerShell, Python, Ruby, Shell, XSLT"
1. Get your node's IP,12,"Batchfile, Groovy, HCL, HTML, JavaScript, PHP, Perl, PowerShell, Python, Ruby, Shell, XSLT"
" 3. Point your browser to the public ip of your node, sign in with `adminUsername` and `adminPassword` specified before (note that browser may show you a warning of bad certificate - it's OK, you may replace the self-signed certificates by yours at /etc/ssl/emc/emcweb*)",12,"Batchfile, Groovy, HCL, HTML, JavaScript, PHP, Perl, PowerShell, Python, Ruby, Shell, XSLT"
"When you launch the installation of the VM, you need to specify the following parameters:",12,"Batchfile, Groovy, HCL, HTML, JavaScript, PHP, Perl, PowerShell, Python, Ruby, Shell, XSLT"
" 2. then click browse all, followed by ""resource groups"", and choose your resource group",12,"Batchfile, Groovy, HCL, HTML, JavaScript, PHP, Perl, PowerShell, Python, Ruby, Shell, XSLT"
2. Connect to your node,12,"Batchfile, Groovy, HCL, HTML, JavaScript, PHP, Perl, PowerShell, Python, Ruby, Shell, XSLT"
[![Deploy to Azure](http://azuredeploy.net/deploybutton.png)](https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Femercoin-ubuntu%2Fazuredeploy.json),12,"Batchfile, Groovy, HCL, HTML, JavaScript, PHP, Perl, PowerShell, Python, Ruby, Shell, XSLT"
" 1. SSH to the public ip of your node as the user you specified for `adminUsername`, enter your `adminPassword`",12,"Batchfile, Groovy, HCL, HTML, JavaScript, PHP, Perl, PowerShell, Python, Ruby, Shell, XSLT"
==========,9,"ApacheConf, C++, CMake, CSS, HTML, Haskell, JavaScript, PHP, Shell"
```,8,"C++, C++, CMake, CMake, Haskell, Haskell, Shell, Shell"
"All of these plugins conform to the AMD specification.  However, that",7,"CSS, CoffeeScript, Dart, Java, JavaScript, Makefile, TypeScript"
Please see the wiki for information about using plugins.  If you're interested,7,"CSS, CoffeeScript, Dart, Java, JavaScript, Makefile, TypeScript"
curl.js loader plugins,7,"CSS, CoffeeScript, Dart, Java, JavaScript, Makefile, TypeScript"
on the wiki (TBD).,7,"CSS, CoffeeScript, Dart, Java, JavaScript, Makefile, TypeScript"
===,7,"CSS, CoffeeScript, Dart, Java, JavaScript, Makefile, TypeScript"
"builders.  Until the build-time API of AMD is finalized, there will be",7,"CSS, CoffeeScript, Dart, Java, JavaScript, Makefile, TypeScript"
json! (auto-detects xdomain and uses JSON-P),7,"CSS, CoffeeScript, Dart, Java, JavaScript, Makefile, TypeScript"
doesn't necessarily mean that they'll work with other AMD loaders or,7,"CSS, CoffeeScript, Dart, Java, JavaScript, Makefile, TypeScript"
domReady!,7,"CSS, CoffeeScript, Dart, Java, JavaScript, Makefile, TypeScript"
TODO:,7,"CSS, CoffeeScript, Dart, Java, JavaScript, Makefile, TypeScript"
link!,7,"CSS, CoffeeScript, Dart, Java, JavaScript, Makefile, TypeScript"
async!,7,"CSS, CoffeeScript, Dart, Java, JavaScript, Makefile, TypeScript"
"in creating your own plugins, please check out the Plugin Author's Guide",7,"CSS, CoffeeScript, Dart, Java, JavaScript, Makefile, TypeScript"
incompatibilities.,7,"CSS, CoffeeScript, Dart, Java, JavaScript, Makefile, TypeScript"
Modules that should work with any loader/builder:,7,"CSS, CoffeeScript, Dart, Java, JavaScript, Makefile, TypeScript"
js!,7,"CSS, CoffeeScript, Dart, Java, JavaScript, Makefile, TypeScript"
part of web applications and websites.,5,"ApacheConf, CSS, HTML, JavaScript, PHP"
 2. **Extract** (decompress) the downloaded file into the root of your website.,5,"ApacheConf, CSS, HTML, JavaScript, PHP"
The editor comes with a few sample pages that can be used to verify that,5,"ApacheConf, CSS, HTML, JavaScript, PHP"
The full editor documentation is available online at the following address:,5,"ApacheConf, CSS, HTML, JavaScript, PHP"
    sure you have the very latest version.,5,"ApacheConf, CSS, HTML, JavaScript, PHP"
"To test your installation, just call the following page at your website:",5,"ApacheConf, CSS, HTML, JavaScript, PHP"
place the files in whichever you want though.,5,"ApacheConf, CSS, HTML, JavaScript, PHP"
	http://<your site>/<CKEditor installation path>/samples/index.html,5,"ApacheConf, CSS, HTML, JavaScript, PHP"
"Copyright (c) 2003-2015, CKSource - Frederico Knabben. All rights reserved.",5,"ApacheConf, CSS, HTML, JavaScript, PHP"
CKEditor 4,5,"ApacheConf, CSS, HTML, JavaScript, PHP"
For example:,5,"ApacheConf, CSS, HTML, JavaScript, PHP"
http://docs.ckeditor.com,5,"ApacheConf, CSS, HTML, JavaScript, PHP"
	http://www.example.com/ckeditor/samples/index.html,5,"ApacheConf, CSS, HTML, JavaScript, PHP"
http://ckeditor.com - See LICENSE.md for license information.,5,"ApacheConf, CSS, HTML, JavaScript, PHP"
**Note:** CKEditor is by default installed in the `ckeditor` folder. You can,5,"ApacheConf, CSS, HTML, JavaScript, PHP"
installation proceeded properly. Take a look at the `samples` directory.,5,"ApacheConf, CSS, HTML, JavaScript, PHP"
 1. **Download** the latest version from the CKEditor website:,5,"ApacheConf, CSS, HTML, JavaScript, PHP"
CKEditor is a text editor to be used inside web pages. It's not a replacement,5,"ApacheConf, CSS, HTML, JavaScript, PHP"
Installing CKEditor is an easy task. Just follow these simple steps:,5,"ApacheConf, CSS, HTML, JavaScript, PHP"
"for desktop text editors like Word or OpenOffice, but a component to be used as",5,"ApacheConf, CSS, HTML, JavaScript, PHP"
"    http://ckeditor.com. You should have already completed this step, but be",5,"ApacheConf, CSS, HTML, JavaScript, PHP"
The other scripts in here are left for legacy purposes.,4,"C++, CMake, Haskell, Shell"
"3. **k3-dev** (~2.5 GB)  -- Larger container with additional library and application support (e.g. clang, ruby, vim, and others). It is based on debian:sid",4,"C++, CMake, Haskell, Shell"
docker build -f k3-dev -t damsl/k3-dev:<your_tag> .,4,"C++, CMake, Haskell, Shell"
  - GCC: 4.9.2,4,"C++, CMake, Haskell, Shell"
1. **k3-app** -- (~250MB) light-weight image to run a K3 program. Based on debian:jessie. It contains only the necessary dependency libraries.,4,"C++, CMake, Haskell, Shell"
"(Note: Docker build now has the -f option, so you don't have to call all docker files, ""Dockerfile"")",4,"C++, CMake, Haskell, Shell"
Dockerfiles are updated for three images:,4,"C++, CMake, Haskell, Shell"
<pre>,4,"C++, CMake, Haskell, Shell"
  - Boost: 1.57,4,"C++, CMake, Haskell, Shell"
2. **k3-compiler** -- (~2 GB) Image containing the GHC and GCC tool chains to compile a K3 program to binary. Based on debian:jessie,4,"C++, CMake, Haskell, Shell"
To build an image use the following command:,4,"C++, CMake, Haskell, Shell"
  - Mesos: 0.22.1</pre>,4,"C++, CMake, Haskell, Shell"
  - GHC: 7.10.1,4,"C++, CMake, Haskell, Shell"
K3 Dockerfiles,4,"C++, CMake, Haskell, Shell"
"The image ```damsl/k3-dev:vanilla``` which is pushed to the repo contains the K3 source built with no options. Feel free to pull, use, & re-build K3 with whatever options necessary (and re-push with a new tag if needed).",4,"C++, CMake, Haskell, Shell"
Build Dependency Versions:,4,"C++, CMake, Haskell, Shell"
