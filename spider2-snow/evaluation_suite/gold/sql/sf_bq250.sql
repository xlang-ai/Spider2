WITH singapore_hospitals AS (SELECT pl."osm_id", CASE WHEN pl."gdal_type" = 'points' THEN ST_GEOGFROMWKB(pl."geometry") ELSE ST_CENTROID(ST_GEOGFROMWKB(pl."geometry")) END as hospital_point FROM GEO_OPENSTREETMAP_WORLDPOP.GEO_OPENSTREETMAP.PLANET_LAYERS pl WHERE pl."layer_class" = 'poi_health' AND pl."layer_name" = 'hospital' AND pl."geometry" IS NOT NULL AND ST_X(CASE WHEN pl."gdal_type" = 'points' THEN ST_GEOGFROMWKB(pl."geometry") ELSE ST_CENTROID(ST_GEOGFROMWKB(pl."geometry")) END) BETWEEN 103.64 AND 103.99 AND ST_Y(CASE WHEN pl."gdal_type" = 'points' THEN ST_GEOGFROMWKB(pl."geometry") ELSE ST_CENTROID(ST_GEOGFROMWKB(pl."geometry")) END) BETWEEN 1.27 AND 1.45), singapore_population_grids AS (SELECT "geo_id", "population", "latitude_centroid", "longitude_centroid", ST_GEOGFROMWKB("geog") as grid_point FROM GEO_OPENSTREETMAP_WORLDPOP.WORLDPOP.POPULATION_GRID_1KM WHERE "alpha_3_code" = 'SGP' AND "last_updated" = '2020-01-01' AND "population" > 0), grid_distances AS (SELECT spg."geo_id", spg."population", MIN(ST_DISTANCE(spg.grid_point, sh.hospital_point)) as min_distance_to_hospital FROM singapore_population_grids spg CROSS JOIN singapore_hospitals sh GROUP BY spg."geo_id", spg."population"), max_distance AS (SELECT MAX(min_distance_to_hospital) as maximum_distance FROM grid_distances), farthest_grid AS (SELECT gd."geo_id", gd."population", gd.min_distance_to_hospital FROM grid_distances gd, max_distance md WHERE gd.min_distance_to_hospital = md.maximum_distance) SELECT SUM("population") as total_population FROM farthest_grid