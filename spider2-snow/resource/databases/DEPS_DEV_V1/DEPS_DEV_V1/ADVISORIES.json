{
    "table_name": "DEPS_DEV_V1.ADVISORIES",
    "table_fullname": "DEPS_DEV_V1.DEPS_DEV_V1.ADVISORIES",
    "column_names": [
        "ReferenceURLs",
        "CVSS3Score",
        "Packages",
        "Aliases",
        "SnapshotAt",
        "Severity",
        "GitHubSeverity",
        "SourceID",
        "Description",
        "SourceURL",
        "Disclosed",
        "Source",
        "Title"
    ],
    "column_types": [
        "VARIANT",
        "NUMBER",
        "VARIANT",
        "VARIANT",
        "NUMBER",
        "TEXT",
        "TEXT",
        "TEXT",
        "TEXT",
        "TEXT",
        "NUMBER",
        "TEXT",
        "TEXT"
    ],
    "description": [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
    ],
    "sample_rows": [
        {
            "SnapshotAt": 1694466085316347,
            "Source": "OSV",
            "SourceID": "GHSA-68jh-rf6x-836f",
            "SourceURL": "https://osv.dev/vulnerability/GHSA-68jh-rf6x-836f",
            "Title": "@apollo/server vulnerable to unsafe application of Content Security Policy via reused nonces",
            "Description": "### Context\nContent Security Policies (CSP) are a defense-in-depth strategy against XSS attacks. Improper application of CSP isn't itself a vulnerability, but it does fail to prevent XSS in the event that there is a viable attack vector for an XSS attack.\n\n### Impact\nThere aren't any XSS attack vectors via the Apollo Server landing pages _known to Apollo_, so to our knowledge there is no impact. However, if there are existing XSS vectors that haven't been reported and patched, then all users of Apollo Server's landing pages have a vulnerability which won't be prevented by the current CSP implemented by the landing pages.\n\nPrior to version 4.7.1, there was no CSP implemented at all. However, the initial CSP implementation (4.7.1+) reused nonces. While this sufficiently resolved the issue w.r.t. scripts not running in Safari, it did not implement CSP in a safe or conventional way.\n\n### Patches\nThe issue is patched in the latest version of Apollo Server, v4.7.4. The changes can be reviewed in [the merge commit](https://github.com/apollographql/apollo-server/commit/0adaf80d1ee51d8c7e5fd863c04478536d15eb8c).\n\n### Workarounds\nThe landing page can be disabled completely until the patch can be upgraded to.\nhttps://www.apollographql.com/docs/apollo-server/api/plugin/landing-pages/#disabling-the-landing-page\n\n### References\nhttps://content-security-policy.com/nonce/",
            "ReferenceURLs": "[\n  \"https://github.com/apollographql/apollo-server\",\n  \"https://github.com/apollographql/apollo-server/commit/0adaf80d1ee51d8c7e5fd863c04478536d15eb8c\",\n  \"https://github.com/apollographql/apollo-server/security/advisories/GHSA-68jh-rf6x-836f\",\n  \"https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2023/06/GHSA-68jh-rf6x-836f/GHSA-68jh-rf6x-836f.json\"\n]",
            "CVSS3Score": null,
            "Severity": "UNKNOWN",
            "GitHubSeverity": "LOW",
            "Disclosed": 1686944453000000,
            "Packages": "[\n  {\n    \"AffectedVersions\": \"Introduced: 4.7.1, Fixed: 4.7.4\",\n    \"Name\": \"@apollo/server\",\n    \"System\": \"NPM\",\n    \"UnaffectedVersions\": \"\"\n  }\n]",
            "Aliases": "[]"
        },
        {
            "SnapshotAt": 1694466085316347,
            "Source": "OSV",
            "SourceID": "GHSA-qvjr-x8fw-hghv",
            "SourceURL": "https://osv.dev/vulnerability/GHSA-qvjr-x8fw-hghv",
            "Title": "Credentials stored in plain text by Jenkins TraceTronic ECU-TEST Plugin",
            "Description": "TraceTronic ECU-TEST Plugin 2.23.1 and earlier stores credentials unencrypted in its global configuration file `de.tracetronic.jenkins.plugins.ecutest.report.atx.installation.ATXInstallation.xml` on the Jenkins controller as part of its configuration.\n\nThese credentials can be viewed by users with access to the Jenkins controller file system.\n\nTraceTronic ECU-TEST Plugin 2.24 adds a new option type for sensitive options. Previously stored credentials are migrated to that option type on Jenkins startup.",
            "ReferenceURLs": "[\n  \"https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2022/05/GHSA-qvjr-x8fw-hghv/GHSA-qvjr-x8fw-hghv.json\",\n  \"https://github.com/jenkinsci/ecutest-plugin\",\n  \"https://nvd.nist.gov/vuln/detail/CVE-2021-21612\",\n  \"https://www.jenkins.io/security/advisory/2021-01-13/#SECURITY-2057\"\n]",
            "CVSS3Score": "3.300000000",
            "Severity": "UNKNOWN",
            "GitHubSeverity": "LOW",
            "Disclosed": 1653413953000000,
            "Packages": "[\n  {\n    \"AffectedVersions\": \"Introduced: 0, Fixed: 2.24\",\n    \"Name\": \"de.tracetronic.jenkins.plugins:ecutest\",\n    \"System\": \"MAVEN\",\n    \"UnaffectedVersions\": \"\"\n  }\n]",
            "Aliases": "[]"
        },
        {
            "SnapshotAt": 1694466085316347,
            "Source": "OSV",
            "SourceID": "GHSA-2jxx-2x93-2q2f",
            "SourceURL": "https://osv.dev/vulnerability/GHSA-2jxx-2x93-2q2f",
            "Title": "Non-constant time webhook token comparison in Jenkins Generic Webhook Trigger Plugin",
            "Description": "Generic Webhook Trigger Plugin 1.84.1 and earlier does not use a constant-time comparison when checking whether the provided and expected webhook token are equal.\n\nThis could potentially allow attackers to use statistical methods to obtain a valid webhook token.\n\nGeneric Webhook Trigger Plugin 1.84.2 uses a constant-time comparison when validating the webhook token.",
            "ReferenceURLs": "[\n  \"http://www.openwall.com/lists/oss-security/2022/10/19/3\",\n  \"https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2022/10/GHSA-2jxx-2x93-2q2f/GHSA-2jxx-2x93-2q2f.json\",\n  \"https://github.com/jenkinsci/generic-webhook-trigger-plugin\",\n  \"https://nvd.nist.gov/vuln/detail/CVE-2022-43412\",\n  \"https://www.jenkins.io/security/advisory/2022-10-19/#SECURITY-2874\"\n]",
            "CVSS3Score": "3.700000000",
            "Severity": "UNKNOWN",
            "GitHubSeverity": "LOW",
            "Disclosed": 1666206022000000,
            "Packages": "[\n  {\n    \"AffectedVersions\": \"Introduced: 0, Fixed: 1.84.2\",\n    \"Name\": \"org.jenkins-ci.plugins:generic-webhook-trigger\",\n    \"System\": \"MAVEN\",\n    \"UnaffectedVersions\": \"\"\n  }\n]",
            "Aliases": "[]"
        },
        {
            "SnapshotAt": 1694466085316347,
            "Source": "OSV",
            "SourceID": "GHSA-qh54-9vc5-m9fg",
            "SourceURL": "https://osv.dev/vulnerability/GHSA-qh54-9vc5-m9fg",
            "Title": "MD5 hash support in github.com/foxcpp/maddy",
            "Description": "### Impact\n\nThis vulnerability affects maddy 0.5.1, 0.5.0 users using auth.shadow module\nand an extremely outdated system that still allows MD5 hashes in \n/etc/shadows.\n\n### Patches\n\nPatch is available as part of the 0.5.2 release.\n\n### Workarounds\n\nEnsure MD5 hashes are not present in /etc/shadow.\n",
            "ReferenceURLs": "[\n  \"https://github.com/foxcpp/maddy\",\n  \"https://github.com/foxcpp/maddy/security/advisories/GHSA-qh54-9vc5-m9fg\",\n  \"https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2021/10/GHSA-qh54-9vc5-m9fg/GHSA-qh54-9vc5-m9fg.json\"\n]",
            "CVSS3Score": "3.000000000",
            "Severity": "UNKNOWN",
            "GitHubSeverity": "LOW",
            "Disclosed": 1634054790000000,
            "Packages": "[\n  {\n    \"AffectedVersions\": \"Introduced: 0.5.0, Fixed: 0.5.2\",\n    \"Name\": \"github.com/foxcpp/maddy\",\n    \"System\": \"GO\",\n    \"UnaffectedVersions\": \"\"\n  }\n]",
            "Aliases": "[]"
        },
        {
            "SnapshotAt": 1694466085316347,
            "Source": "OSV",
            "SourceID": "GHSA-j47f-4232-hvv8",
            "SourceURL": "https://osv.dev/vulnerability/GHSA-j47f-4232-hvv8",
            "Title": "Heap out of bounds read in `RaggedCross`",
            "Description": "### Impact\nAn attacker can force accesses outside the bounds of heap allocated arrays by passing in invalid tensor values to `tf.raw_ops.RaggedCross`:\n\n```python\nimport tensorflow as tf\n\nragged_values = []\nragged_row_splits = [] \nsparse_indices = []\nsparse_values = []\nsparse_shape = []\n\ndense_inputs_elem = tf.constant([], shape=[92, 0], dtype=tf.int64)\ndense_inputs = [dense_inputs_elem]\n\ninput_order = \"R\"\nhashed_output = False\nnum_buckets = 0\nhash_key = 0 \n\ntf.raw_ops.RaggedCross(ragged_values=ragged_values,\n    ragged_row_splits=ragged_row_splits,\n    sparse_indices=sparse_indices,\n    sparse_values=sparse_values,\n    sparse_shape=sparse_shape,\n    dense_inputs=dense_inputs,\n    input_order=input_order,\n    hashed_output=hashed_output,\n    num_buckets=num_buckets,\n    hash_key=hash_key,\n    out_values_type=tf.int64,\n    out_row_splits_type=tf.int64)\n```\n\nThis is because the [implementation](https://github.com/tensorflow/tensorflow/blob/efea03b38fb8d3b81762237dc85e579cc5fc6e87/tensorflow/core/kernels/ragged_cross_op.cc#L456-L487) lacks validation for the user supplied arguments:\n\n```cc\nint next_ragged = 0;\nint next_sparse = 0;\nint next_dense = 0;\nfor (char c : input_order_) {\n  if (c == 'R') {\n    TF_RETURN_IF_ERROR(BuildRaggedFeatureReader(\n        ragged_values_list[next_ragged], ragged_splits_list[next_ragged],\n        features));\n    next_ragged++;\n  } else if (c == 'S') {\n    TF_RETURN_IF_ERROR(BuildSparseFeatureReader(\n        sparse_indices_list[next_sparse], sparse_values_list[next_sparse],\n        batch_size, features));\n    next_sparse++;\n  } else if (c == 'D') {\n    TF_RETURN_IF_ERROR(\n        BuildDenseFeatureReader(dense_list[next_dense++], features));\n  }\n  ...\n}\n```\n\nEach of the above branches call a helper function after accessing array elements via a `*_list[next_*]` pattern, followed by incrementing the `next_*` index. However, as there is no validation that the `next_*` values are in the valid range for the corresponding `*_list` arrays, this results in heap OOB reads.\n\n### Patches\nWe have patched the issue in GitHub commit [44b7f486c0143f68b56c34e2d01e146ee445134a](https://github.com/tensorflow/tensorflow/commit/44b7f486c0143f68b56c34e2d01e146ee445134a).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.",
            "ReferenceURLs": "[\n  \"https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2021/05/GHSA-j47f-4232-hvv8/GHSA-j47f-4232-hvv8.json\",\n  \"https://github.com/tensorflow/tensorflow/commit/44b7f486c0143f68b56c34e2d01e146ee445134a\",\n  \"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-j47f-4232-hvv8\",\n  \"https://nvd.nist.gov/vuln/detail/CVE-2021-29532\"\n]",
            "CVSS3Score": "2.500000000",
            "Severity": "UNKNOWN",
            "GitHubSeverity": "LOW",
            "Disclosed": 1621606937000000,
            "Packages": "[\n  {\n    \"AffectedVersions\": \"Introduced: 0, Fixed: 2.1.4, Introduced: 2.2.0, Fixed: 2.2.3, Introduced: 2.3.0, Fixed: 2.3.3, Introduced: 2.4.0, Fixed: 2.4.2\",\n    \"Name\": \"tensorflow\",\n    \"System\": \"PYPI\",\n    \"UnaffectedVersions\": \"\"\n  },\n  {\n    \"AffectedVersions\": \"Introduced: 0, Fixed: 2.1.4, Introduced: 2.2.0, Fixed: 2.2.3, Introduced: 2.3.0, Fixed: 2.3.3, Introduced: 2.4.0, Fixed: 2.4.2\",\n    \"Name\": \"tensorflow-cpu\",\n    \"System\": \"PYPI\",\n    \"UnaffectedVersions\": \"\"\n  },\n  {\n    \"AffectedVersions\": \"Introduced: 0, Fixed: 2.1.4, Introduced: 2.2.0, Fixed: 2.2.3, Introduced: 2.3.0, Fixed: 2.3.3, Introduced: 2.4.0, Fixed: 2.4.2\",\n    \"Name\": \"tensorflow-gpu\",\n    \"System\": \"PYPI\",\n    \"UnaffectedVersions\": \"\"\n  }\n]",
            "Aliases": "[]"
        }
    ]
}