{
    "table_name": "PYPI.DISTRIBUTION_METADATA",
    "table_fullname": "PYPI.PYPI.DISTRIBUTION_METADATA",
    "column_names": [
        "filename",
        "platform",
        "python_version",
        "upload_time",
        "path",
        "summary",
        "author",
        "obsoletes_dist",
        "download_url",
        "comment_text",
        "description_content_type",
        "author_email",
        "has_signature",
        "requires_python",
        "maintainer",
        "maintainer_email",
        "name",
        "sha256_digest",
        "keywords",
        "description",
        "requires_external",
        "classifiers",
        "requires",
        "project_urls",
        "license",
        "packagetype",
        "provides_dist",
        "md5_digest",
        "requires_dist",
        "blake2_256_digest",
        "uploaded_via",
        "provides",
        "size",
        "version",
        "home_page",
        "obsoletes",
        "metadata_version"
    ],
    "column_types": [
        "TEXT",
        "VARIANT",
        "TEXT",
        "NUMBER",
        "TEXT",
        "TEXT",
        "TEXT",
        "VARIANT",
        "TEXT",
        "TEXT",
        "TEXT",
        "TEXT",
        "BOOLEAN",
        "TEXT",
        "TEXT",
        "TEXT",
        "TEXT",
        "TEXT",
        "TEXT",
        "TEXT",
        "VARIANT",
        "VARIANT",
        "VARIANT",
        "VARIANT",
        "TEXT",
        "TEXT",
        "VARIANT",
        "TEXT",
        "VARIANT",
        "TEXT",
        "TEXT",
        "VARIANT",
        "NUMBER",
        "TEXT",
        "TEXT",
        "VARIANT",
        "TEXT"
    ],
    "description": [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
    ],
    "sample_rows": [
        {
            "metadata_version": "2.1",
            "name": "uttl.buildout",
            "version": "1.2.2",
            "summary": "Utilities for Buildout developed for Up There They Love.",
            "description": "uttl.buildout\n=============\n\nUtilities for [zc.buildout](buildout.org/) for different build systems on Windows, as used by [Up There They Love](https://uptheretheylove.com) for developing their titles.\n\n# Usage\n\nThe `uttl.buildout` package will be automatically installed from [PyPi](https://pypi.org/project/uttl.buildout/) using `easy_install` when you use it in your buildout configuration.\n\nYou can also clone the repository to disk and use the recipes directly without installing a package.\n\n    [buildout]\n    develop = C:\\Downloads\\uttl-buildout\n\nThe downside of this approach is that your configuration will be invalidated (and thus your dependencies rebuilt) when the recipes change.\n\n# Example\n\n    [buildout]\n    parts =\n        devenv\n        game\n\n    # find devenv executable from visual studio path\n\n    [devenv]\n    recipe = uttl.buildout:versioncheck\n    required-major = 2017\n    required-minor = 15\n    body = ... path = None\n        ... args = [ \n        ...   r'%ProgramFiles(x86)%\\Microsoft Visual Studio\\Installer\\vswhere.exe',\n        ...   '-version',\n        ...   '%s.0' % (self.options['required-minor']),\n        ...   '-property',\n        ...   'installationPath'\n        ... ]\n        ...\n        ... try:\n        ...   with subprocess.Popen(args, shell=True, stdout=subprocess.PIPE, stderr=subprocess.STDOUT) as proc:\n        ...     for line in iter(proc.stdout.readline, b''):\n        ...       path = os.path.abspath(str(line.rstrip(), encoding='ascii'))\n        ...       break\n        ... except FileNotFoundError:\n        ...   self.log.error('Visual Studio is not installed.')\n        ...   return (False, 0, 0, 0, '')\n        ...\n        ... if not path:\n        ...   self.log.error('Cannot find Visual Studio executable.')\n        ...   return (False, 0, 0, 0, '')\n        ...\n        ... path = os.path.abspath(path + r'\\Common7\\IDE\\devenv.com')\n        ... if not os.path.exists(path):\n        ...   self.log.error('Failed to find path to devenv.')\n        ...   return (False, 0, 0, 0, '')\n        ...\n        ... return (True, self.options['required-major'], self.options['required-minor'], 64, path)\n\n    # build game executable\n\n    [game]\n    recipe = uttl.buildout:devenv\n    executable = ${devenv:path}\n    solution = SSSG.sln\n    project = SSSG\n    build = Release\n\n# Recipes\n\nThe following recipes (scripts) for `zc.buildout` are available in this package:\n\n* [uttl.buildout.cmake](uttl/buildout/cmake/README.md) - Run CMake commands\n* [uttl.buildout.command](uttl/buildout/README.md) - Run an executable with arguments\n* [uttl.buildout.copyfile](uttl/buildout/copyfile/README.md) - Copy files between directories\n* [uttl.buildout.devenv](uttl/buildout/devenv/README.md) - Build projects with Visual Studio\n* [uttl.buildout.dotnet-restore](uttl/buildout/dotnet/restore/README.md) - Restore .NET packages using NuGet\n* [uttl.buildout.inklecate](uttl/buildout/inklecate/README.md) - Compile .ink files to JSON\n* [uttl.buildout.qmake](uttl/buildout/qmake/README.md) - Run QMake commands\n* [uttl.buildout.qtdeploy](uttl/buildout/qtdeploy/README.md) - Deploy Qt libraries\n* [uttl.buildout.versioncheck](uttl/buildout/versioncheck/README.md) - Get versioned executables\n\nCheck the source folders for detailed documentation about each recipe.\n\n# Building from source\n\nCheck that you're running at least Python 3.9:\n\n    D:\\Projects\\uttl-buildout>python --version\n    Python 3.9.5\n\nBuild and install egg on system:\n\n    python setup.py install\n\nCreate egg in `dist/` folder:\n\n    python setup.py bdist_egg\n\nInstall on your system using `easy_install`:\n\n    python -m easy_install -a dist\\uttl_buildout-1.0.0-py3.9.egg\n\nUpload packaged egg to repository:\n\n    python -m twine upload --repository pypi dist/*\n# Changes\n\n## 1.2.2 - 2021-09-30\n\n* Small fix to README in package\n\n## 1.2.1 - 2021-09-30\n\n* Command: Added missing `always-install` option to documentation\n* Command: Added `working-dir` option\n* CopyFile: Renamed `source-path`, `destination-path` to `-dir` (old names treated as synonymous)\n* CMake: Renamed `source-path`, `install-path`, `configure-path`, and `build-path` to `-dir` (old names treated as synonymous)\n* CMake: Added `working-dir` option\n* DotnetRestore: Fixed recipe being registered with the wrong name\n* DotnetRestore: Renamed `config-file` to `config-path` (old name treated as synonymous)\n* DotnetRestore: Renamed `packages-path` to `packages-dir` (old name treated as synonymous)\n* DotnetRestore: Added `working-dir` option\n* Devenv: Renamed `solution` to `solution-path` (old name treated as synonymous)\n* Devenv: Added `working-dir` option\n* Inklecate: Renamed `output-directory` to `output-dir` (old name treated as synonymous)\n* Inklecate: Renamed `input` to `inputs` (old name treated as synonymous)\n* Inklecate: Added `working-dir` option\n* QMake: Added `working-dir` option\n* QtDeploy: Added `dir`, `libraries-dir`, `plugins-dir`, `libraries`, `qml-dir`, `qml-import`, `plugins`, and `patch-qt` options\n* QtDeploy: Added `lib-` option to explicity add or skip libaries\n* QtDeploy: Added `working-dir` option\n* VersionCheck: Made `body` option mandatory\n\n\n## 1.2.0 - 2021-09-28\n\n* All: Added optional artefacts and arguments options\n* CMake: Made the path to source option mandatory to prevent user error\n* Command: New recipe for calling executables\n* CopyFile: Install files before copying them\n\n## 1.1.0 - 2021-09-27\n\n* All: Changed all options from snake_case to kebab-case\n* DotnetRestore: New recipe for invoking dotnet commands\n* CMake: Fixed source path option\n* CMake: Made target option a synonym for targets\n* CopyFile: Copies files if they do not exist or if they were modified\n* CopyFile: Added documentation\n* Devenv: Cleaned up script\n* Devenv: Added documentation\n* QMake: Fixed files option throwing an error\n* QMake: Expanded documentation\n* QMake: Fixed typos in documentation\n\n## 1.0.0 - 2021-09-26\n\n* Initial release\n\n# License\n\nMIT No Attribution\n\nCopyright 2021 Mr. Hands <mrhands31@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this\nsoftware and associated documentation files (the \"Software\"), to deal in the Software\nwithout restriction, including without limitation the rights to use, copy, modify,\nmerge, publish, distribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\nINCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
            "description_content_type": "text/markdown",
            "author": "Mr. Hands",
            "author_email": "mrhands31@gmail.com",
            "maintainer": null,
            "maintainer_email": null,
            "license": "MIT-0",
            "keywords": "buildout extension uttl cmake qmake qt copyfile version",
            "classifiers": "[\n  \"Framework :: Buildout\",\n  \"Intended Audience :: Developers\",\n  \"Topic :: Software Development :: Build Tools\",\n  \"License :: OSI Approved :: MIT No Attribution License (MIT-0)\"\n]",
            "platform": "[]",
            "home_page": "https://github.com/MrHands/uttl-buildout",
            "download_url": null,
            "requires_python": ">=3",
            "requires": "[]",
            "provides": "[]",
            "obsoletes": "[]",
            "requires_dist": "[]",
            "provides_dist": "[]",
            "obsoletes_dist": "[]",
            "requires_external": "[]",
            "project_urls": "[]",
            "uploaded_via": "twine/3.4.2 importlib_metadata/4.8.1 pkginfo/1.7.1 requests/2.26.0 requests-toolbelt/0.9.1 tqdm/4.62.3 CPython/3.9.1",
            "upload_time": 1632989731907552,
            "filename": "uttl.buildout-1.2.2-py3.9.egg",
            "size": 39065,
            "path": "e8/44/c7b6e88b860cdc7908b3be665c7f90eb818c715112ac3232017dc3bef31e/uttl.buildout-1.2.2-py3.9.egg",
            "python_version": "1.2.2",
            "packagetype": "bdist_egg",
            "comment_text": null,
            "has_signature": false,
            "md5_digest": "8703ae2cbeedb760a2e3100621ef5958",
            "sha256_digest": "989ecce3803b23bea32b212bc00d93e7ec9ca052aaf66062bb7321ffdb90ea98",
            "blake2_256_digest": "e844c7b6e88b860cdc7908b3be665c7f90eb818c715112ac3232017dc3bef31e"
        },
        {
            "metadata_version": "2.1",
            "name": "tfields",
            "version": "0.3.8",
            "summary": "Tensors, tensor fields, graphs, mesh manipulation, CAD and more on the basis of numpy.ndarrays. All objects keep track of their coordinate system. Symbolic math operations work for object manipulation.",
            "description": "=========================\nIntroduction to `tfields`\n=========================\n\n\n.. pypi\n.. image:: https://img.shields.io/pypi/v/tfields.svg\n    :target: https://pypi.python.org/pypi/tfields\n\n.. ci\n    .. image:: https://img.shields.io/travis/dboe/tfields.svg\n        :target: https://travis-ci.com/dboe/tfields\n.. image:: https://gitlab.mpcdf.mpg.de/dboe/tfields/badges/master/pipeline.svg\n    :target: https://gitlab.mpcdf.mpg.de/dboe/tfields/commits/master\n\n.. coverage\n.. image:: https://gitlab.mpcdf.mpg.de/dboe/tfields/badges/master/coverage.svg\n    :target: https://gitlab.mpcdf.mpg.de/dboe/tfields/commits/master\n\n.. readthedocs\n.. image:: https://readthedocs.org/projects/tfields/badge/?version=latest\n    :target: https://tfields.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation Status\n\n.. pyup crosschecks your dependencies. Github is default, gitlab more complicated: https://pyup.readthedocs.io/en/latest/readme.html#run-your-first-update \n    .. image:: https://pyup.io/repos/github/dboe/tfields/shield.svg\n        :target: https://pyup.io/repos/github/dboe/tfields/\n        :alt: Updates\n\n.. image:: https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&logoColor=white\n   :target: https://github.com/pre-commit/pre-commit\n   :alt: pre-commit\n\n\nTensors, tensor fields, graphs, mesh manipulation, CAD and more on the basis of numpy.ndarrays. All objects keep track of their coordinate system. Symbolic math operations work for object manipulation.\n\n\nLicensed under the ``MIT License``\n\nResources\n---------\n\n* Source code: https://gitlab.mpcdf.mpg.de/dboe/tfields\n* Documentation: https://tfields.readthedocs.io\n* Pypi: https://pypi.python.org/pypi/tfields\n\n\nFeatures\n--------\n\nThe following features should be highlighted:\n\n* Tensors\n* TensorFields\n* TensorMaps with fields\n* Mesh manipulation by graph theory\n* TODO\n\nMIT License\n\nCopyright (c) 2021, Daniel B\u00f6ckenhoff\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n",
            "description_content_type": "text/x-rst",
            "author": "Daniel B\u00f6ckenhoff",
            "author_email": "dboe@ipp.mpg.de",
            "maintainer": null,
            "maintainer_email": null,
            "license": "MIT License",
            "keywords": "tensors,tensor-fields,graphs,mesh,numpy,math",
            "classifiers": "[\n  \"Development Status :: 3 - Alpha\",\n  \"License :: OSI Approved :: MIT License\",\n  \"Programming Language :: Python\",\n  \"Programming Language :: Python :: 3\",\n  \"Programming Language :: Python :: 3.5\",\n  \"Programming Language :: Python :: 3.6\",\n  \"Programming Language :: Python :: 3.7\",\n  \"Programming Language :: Python :: 3.8\"\n]",
            "platform": "[]",
            "home_page": "https://gitlab.mpcdf.mpg.de/dboe/tfields",
            "download_url": null,
            "requires_python": ">=3.0",
            "requires": "[]",
            "provides": "[]",
            "obsoletes": "[]",
            "requires_dist": "[\n  \"six\",\n  \"numpy\",\n  \"sympy (<=1.6.2)\",\n  \"scipy\",\n  \"pathlib\",\n  \"rna (>=0.6.3)\",\n  \"sortedcontainers\",\n  \"sphinx (>=2.2.0) ; extra == 'all'\",\n  \"sphinx-rtd-theme (>=0.4.3) ; extra == 'all'\",\n  \"flake8 ; extra == 'all'\",\n  \"pylint ; extra == 'all'\",\n  \"pytest ; extra == 'all'\",\n  \"pytest-cov ; extra == 'all'\",\n  \"coverage ; extra == 'all'\",\n  \"pytest-shutil ; extra == 'all'\",\n  \"pytest-virtualenv ; extra == 'all'\",\n  \"pytest-fixture-config ; extra == 'all'\",\n  \"pytest-xdist ; extra == 'all'\",\n  \"matplotlib ; extra == 'all'\",\n  \"numpy-stl ; extra == 'all'\",\n  \"bumpversion (==1.0.0) ; extra == 'all'\",\n  \"twine ; extra == 'all'\",\n  \"sphinx ; extra == 'all'\",\n  \"pre-commit ; extra == 'all'\",\n  \"pre-commit-hooks ; extra == 'all'\",\n  \"cookiecutter-project-upgrader ; extra == 'all'\",\n  \"sphinx (>=2.2.0) ; extra == 'dev'\",\n  \"sphinx-rtd-theme (>=0.4.3) ; extra == 'dev'\",\n  \"flake8 ; extra == 'dev'\",\n  \"pylint ; extra == 'dev'\",\n  \"pytest ; extra == 'dev'\",\n  \"pytest-cov ; extra == 'dev'\",\n  \"coverage ; extra == 'dev'\",\n  \"pytest-shutil ; extra == 'dev'\",\n  \"pytest-virtualenv ; extra == 'dev'\",\n  \"pytest-fixture-config ; extra == 'dev'\",\n  \"pytest-xdist ; extra == 'dev'\",\n  \"matplotlib ; extra == 'dev'\",\n  \"numpy-stl ; extra == 'dev'\",\n  \"bumpversion (==1.0.0) ; extra == 'dev'\",\n  \"twine ; extra == 'dev'\",\n  \"sphinx ; extra == 'dev'\",\n  \"pre-commit ; extra == 'dev'\",\n  \"pre-commit-hooks ; extra == 'dev'\",\n  \"cookiecutter-project-upgrader ; extra == 'dev'\",\n  \"sphinx (>=2.2.0) ; extra == 'docs'\",\n  \"sphinx-rtd-theme (>=0.4.3) ; extra == 'docs'\",\n  \"numpy-stl ; extra == 'io'\",\n  \"flake8 ; extra == 'test'\",\n  \"pylint ; extra == 'test'\",\n  \"pytest ; extra == 'test'\",\n  \"pytest-cov ; extra == 'test'\",\n  \"coverage ; extra == 'test'\",\n  \"pytest-shutil ; extra == 'test'\",\n  \"pytest-virtualenv ; extra == 'test'\",\n  \"pytest-fixture-config ; extra == 'test'\",\n  \"pytest-xdist ; extra == 'test'\",\n  \"matplotlib ; extra == 'test'\"\n]",
            "provides_dist": "[]",
            "obsoletes_dist": "[]",
            "requires_external": "[]",
            "project_urls": "[\n  \"Documentation, https://tfields.readthedocs.io\",\n  \"Source, https://gitlab.mpcdf.mpg.de/dboe/tfields\"\n]",
            "uploaded_via": "twine/3.4.2 importlib_metadata/4.8.1 pkginfo/1.7.1 requests/2.23.0 requests-toolbelt/0.9.1 tqdm/4.62.2 CPython/3.7.1",
            "upload_time": 1631088517112669,
            "filename": "tfields-0.3.8-py2.py3-none-any.whl",
            "size": 77356,
            "path": "ef/0e/9155da518a32c9a461e4343e588f07655d7704419c8f6eec59f6ff3e5e4d/tfields-0.3.8-py2.py3-none-any.whl",
            "python_version": "py2.py3",
            "packagetype": "bdist_wheel",
            "comment_text": null,
            "has_signature": false,
            "md5_digest": "54cc7ab1539fdf39ff3d3241074cc5da",
            "sha256_digest": "096317182fa2aa1b3c324802d35df16b5e21d2bc47568afd3f1edc951cb03b9d",
            "blake2_256_digest": "ef0e9155da518a32c9a461e4343e588f07655d7704419c8f6eec59f6ff3e5e4d"
        },
        {
            "metadata_version": "2.1",
            "name": "Levenshtein",
            "version": "0.15.0",
            "summary": "Python extension for computing string edit distances and similarities.",
            "description": "# Levenshtein\n\n<p>\n  <a href=\"https://github.com/maxbachmann/Levenshtein/actions\">\n    <img src=\"https://github.com/maxbachmann/Levenshtein/workflows/Build/badge.svg\"\n         alt=\"Continous Integration\">\n  </a>\n  <a href=\"https://pypi.org/project/levenshtein/\">\n    <img src=\"https://img.shields.io/pypi/v/levenshtein\"\n         alt=\"PyPI package version\">\n  </a>\n  <a href=\"https://www.python.org\">\n    <img src=\"https://img.shields.io/pypi/pyversions/levenshtein\"\n         alt=\"Python versions\">\n  </a>\n  <a href=\"https://maxbachmann.github.io/Levenshtein\">\n    <img src=\"https://img.shields.io/badge/-documentation-blue\"\n         alt=\"Documentation\">\n  </a>\n  <a href=\"https://github.com/maxbachmann/Levenshtein/blob/main/COPYING\">\n    <img src=\"https://img.shields.io/github/license/maxbachmann/Levenshtein\"\n         alt=\"GitHub license\">\n  </a>\n</p>\n\n## Introduction\nThe Levenshtein Python C extension module contains functions for fast\ncomputation of:\n\n* Levenshtein (edit) distance, and edit operations\n* string similarity\n* approximate median strings, and generally string averaging\n* string sequence and set similarity\n\nThis is a fork of [ztane/python-Levenshtein](https://github.com/ztane/python-Levenshtein), since the original\nproject is no longer actively maintained.\n\n## Requirements\n* Python 2.7 or later\n\n## Installation\n```bash\npip install levenshtein\n```\n\n## Documentation\n\nThe documentation for the current version can be found at [https://maxbachmann.github.io/Levenshtein/](https://maxbachmann.github.io/Levenshtein/)\n\n## License\n\nLevenshtein is free software; you can redistribute it and/or modify it\nunder the terms of the GNU General Public License as published by the Free\nSoftware Foundation; either version 2 of the License, or (at your option)\nany later version.\n\nSee the file [COPYING](https://github.com/maxbachmann/Levenshtein/blob/main/COPYING) for the full text of GNU General Public License version 2.\n## Changelog\n\n### v0.15.0\n* Update SequenceMatcher interface to support the autojunk parameter\n\n### v0.14.0\n* Drop Python 2 support\n* Fixed free of non heap object due caused by zero offset on a heap object\n* Fixed warnings about missing type conversions\n* Fix segmentation fault in subtract_edit when incorrect input types are used\n* Fixed unchecked memory allocations\n* Implement distance/ratio/hamming/jaro/jaro_winkler\n  using rapidfuzz instead of providing a own implementation\n* Implement Wrapper for inverse/editops/opcodes/matching_blocks/subtract_edit/apply_edit\n  using Cython to simplify support for new Python versions\n\n### v0.13.0\n* Maintainership passed to Max Bachmann\n* use faster bitparallel implementations for distance and ratio\n* avoid string copies in distance, ratio and hamming\n* Fix usage of deprecated Unicode APIs in distance, ratio and hamming\n* Fixed incorrect window size inside Jaro and Jaro-Winkler implementation\n* Fixed incorrect exception messages\n* Removed unused functions and compiler specific hacks\n* Split the Python and C implementations to simplify building of\n  the C library\n* Fixed multiple bugs which prevented the use as C library, since some functions\n  only got defined when compiling for Python\n* Build and deliver python wheels for the library\n* Fixed incorrect allocation size in lev_editops_matching_blocks and\n  lev_opcodes_matching_blocks\n\n### v0.12.1\n* Fixed handling of numerous possible wraparounds in calculating the size\n  of memory allocations; incorrect handling of which could cause denial\n  of service or even possible remote code execution in previous versions\n  of the library.\n\n### v0.12.0\n* Fixed a bug in StringMatcher.StringMatcher.get_matching_blocks /\n  extract_editops for Python 3; now allow only `str` editops on\n  both Python 2 and Python 3, for simpler and working code.\n* Added documentation in the source distribution and in GIT\n* Fixed the package layout: renamed the .so/.dll to _levenshtein,\n  and made it reside inside a package, along with the StringMatcher\n  class.\n* Fixed spelling errors.\n\n### v0.11.2\n* Fixed a bug in setup.py: installation would fail on Python 3 if the locale\n  did not specify UTF-8 charset (Felix Yan).\n\n* Added COPYING, StringMatcher.py, gendoc.sh and NEWS in MANIFEST.in, as they\n  were missing from source distributions.\n\n### v0.11.1\n* Added Levenshtein.h to MANIFEST.in\n\n### v0.11.0\n* Python 3 support, maintainership passed to Antti Haapala\n\n### v0.10.2\n* Made python-Lehvenstein Git compatible and use setuptools for PyPi upload\n* Created HISTORY.txt and made README reST compatible\n\n### v0.10.1\n* apply_edit() broken for Unicodes was fixed (thanks to Radovan Garabik)\n* subtract_edit() function was added\n\n### v0.10.0\n* Hamming distance, Jaro similarity metric and Jaro-Winkler similarity\n      metric were added\n* ValueErrors raised on wrong argument types were fixed to TypeErrors\n\n### v0.9.0\n* a poor-but-fast generalized median method quickmedian() was added\n* some auxiliary functions added to the C api (lev_set_median_index,\n      lev_editops_normalize, ...)\n\n### v0.8.2\n* fixed missing `static' in the method list\n\n### v0.8.1\n* some compilation problems with non-gcc were fixed\n\nv0.8.0\n* median_improve(), a generalized median improving function, was added\n* an arbitrary length limitation imposed on greedy median() result was\n      removed\n* out of memory should be handled more gracefully (on systems w/o memory\n      overcomitting)\n* the documentation now passes doctest\n\n### v0.7.0\n* fixed greedy median() for Unicode characters > U+FFFF, it's now usable\n      with whatever integer type wchar_t happens to be\n* added missing MANIFEST\n* renamed exported C functions, all public names now have lev_, LEV_ or\n      Lev prefix; defined lev_byte, lev_wchar, and otherwise santinized\n      the (still unstable) C interface\n* added edit-ops group of functions, with two interfaces: native, useful\n      for string averaging, and difflib-like for interoperability\n* added an example SequenceMatcher-like class StringMatcher\n\n### v0.6.0\n* a segfault in seqratio()/setratio() on invalid input has been fixed\n      to an exception\n* optimized ratio() and distance() (about 20%)\n* Levenshtein.h header file was added to make it easier to actually use\n      it as a C library\n\n### v0.5.0\n* a segfault in setratio() was fixed\n* median() handles all empty strings situation more gracefully\n\n### v0.4.0\n* new functions seqratio() and setratio() computing similarity between\n      string sequences and sets\n* Levenshtein optimizations (affects all routines except median())\n* all Sequence objects are accepted, not just Lists\n\n### v0.3.0\n* setmedian() finding set median was added\n* median() initial overhead for Unicodes was reduced\n\n### v0.2.0\n* ratio() and distance() now accept both Strings and Unicodes\n* removed uratio() and udistance()\n* Levenshtein.c is now compilable as a C library (with -DNO_PYTHON)\n* a median() function finding approximate weighted median of a string\n      set was added\n\n### v0.1.0\n* Inital release\n\n\n\n",
            "description_content_type": "text/markdown",
            "author": "Max Bachmann",
            "author_email": "contact@maxbachmann.de",
            "maintainer": null,
            "maintainer_email": null,
            "license": "GPL",
            "keywords": null,
            "classifiers": "[\n  \"Programming Language :: Python :: 3\",\n  \"Programming Language :: Python :: 3.5\",\n  \"Programming Language :: Python :: 3.6\",\n  \"Programming Language :: Python :: 3.7\",\n  \"Programming Language :: Python :: 3.8\",\n  \"Programming Language :: Python :: 3.9\",\n  \"License :: OSI Approved :: GNU General Public License v2 or later (GPLv2+)\"\n]",
            "platform": "[]",
            "home_page": "https://github.com/maxbachmann/Levenshtein",
            "download_url": null,
            "requires_python": ">=3.5",
            "requires": "[]",
            "provides": "[]",
            "obsoletes": "[]",
            "requires_dist": "[\n  \"rapidfuzz (<1.7,>=1.5.1)\"\n]",
            "provides_dist": "[]",
            "obsoletes_dist": "[]",
            "requires_external": "[]",
            "project_urls": "[]",
            "uploaded_via": "twine/3.4.2 importlib_metadata/4.8.1 pkginfo/1.7.1 requests/2.26.0 requests-toolbelt/0.9.1 tqdm/4.62.2 CPython/3.9.7",
            "upload_time": 1631210509940688,
            "filename": "Levenshtein-0.15.0-cp36-cp36m-manylinux2010_i686.whl",
            "size": 103470,
            "path": "a8/57/70053a521f0822fd3c6c4ce590be8be253fabae5283f817824faca6d3bdf/Levenshtein-0.15.0-cp36-cp36m-manylinux2010_i686.whl",
            "python_version": "cp36",
            "packagetype": "bdist_wheel",
            "comment_text": null,
            "has_signature": false,
            "md5_digest": "9d4e9935f7a5fbd520c1d83366eb82c2",
            "sha256_digest": "3391e3ca6e16dcd850e40585e4a9c4c3df5932cff403e1b111ab8cfb99a227ba",
            "blake2_256_digest": "a85770053a521f0822fd3c6c4ce590be8be253fabae5283f817824faca6d3bdf"
        },
        {
            "metadata_version": "2.1",
            "name": "pyats.aetest",
            "version": "21.8.1",
            "summary": "pyATS AEtest: Testscript Engine",
            "description": "pyATS AEtest Component\n======================\n\npyATS is an end-to-end testing ecosystem, specializing in data-driven and \nreusable testing, and engineered to be suitable for Agile, rapid development \niterations. Extensible by design, pyATS enables developers start with small, \nsimple and linear test cases, and scale towards large, complex and asynchronous \ntest suites.\n\npyATS is initially developed internally in Cisco, and is now available to the\ngeneral public starting late 2017 through `Cisco DevNet`_. Visit the pyATS\nhome page at\n\n    https://developer.cisco.com/site/pyats/\n\n.. _Cisco DevNet: https://developer.cisco.com/\n\n\nAEtest Package\n--------------\n\nThis is a sub-component of pyATS that handles test script definition and\nexecution.\n\nRequirements\n------------\n\npyATS currently supports Python 3.4+ on Linux & Mac systems. Windows platforms\nare not yet supported.\n\nQuick Start\n-----------\n\n.. code-block:: console\n\n    # install pyats as a whole\n    $ pip install pyats\n\n    # to upgrade this package manually\n    $ pip install --upgrade pyats.aetest\n\n    # to install alpha/beta versions, add --pre\n    $ pip install --pre pyats.aetest\n\nFor more information on setting up your Python development environment,\nsuch as creating virtual environment and installing ``pip`` on your system, \nplease refer to `Virtual Environment and Packages`_ in Python tutorials.\n\n.. _Virtual Environment and Packages: https://docs.python.org/3/tutorial/venv.html\n\n",
            "description_content_type": null,
            "author": "Cisco Systems Inc.",
            "author_email": "pyats-support-ext@cisco.com",
            "maintainer": null,
            "maintainer_email": null,
            "license": "Apache 2.0",
            "keywords": "pyats aetest template script testing",
            "classifiers": "[\n  \"Development Status :: 6 - Mature\",\n  \"Development Status :: 5 - Production/Stable\",\n  \"Environment :: Console\",\n  \"Intended Audience :: Developers\",\n  \"Intended Audience :: Telecommunications Industry\",\n  \"Intended Audience :: Information Technology\",\n  \"Intended Audience :: System Administrators\",\n  \"License :: OSI Approved :: Apache Software License\",\n  \"Operating System :: MacOS\",\n  \"Operating System :: POSIX :: Linux\",\n  \"Programming Language :: Python :: 3.8\",\n  \"Programming Language :: Python :: 3.7\",\n  \"Programming Language :: Python :: 3.6\",\n  \"Programming Language :: Python :: 3.5\",\n  \"Programming Language :: Python :: 3 :: Only\",\n  \"Programming Language :: Python :: Implementation :: CPython\",\n  \"Topic :: Software Development :: Testing\",\n  \"Topic :: Software Development :: Build Tools\",\n  \"Topic :: Software Development :: Libraries\",\n  \"Topic :: Software Development :: Libraries :: Python Modules\"\n]",
            "platform": "[]",
            "home_page": "https://developer.cisco.com/pyats/",
            "download_url": null,
            "requires_python": ">=3.5",
            "requires": "[]",
            "provides": "[]",
            "obsoletes": "[]",
            "requires_dist": "[\n  \"pyats.results (<21.9.0,>=21.8.0)\",\n  \"pyats.log (<21.9.0,>=21.8.0)\",\n  \"pyats.aereport (<21.9.0,>=21.8.0)\",\n  \"pyats.datastructures (<21.9.0,>=21.8.0)\",\n  \"pyats.utils (<21.9.0,>=21.8.0)\",\n  \"pyyaml\",\n  \"jinja2 (<3.0)\",\n  \"Sphinx ; extra == 'dev'\",\n  \"sphinx-rtd-theme ; extra == 'dev'\"\n]",
            "provides_dist": "[]",
            "obsoletes_dist": "[]",
            "requires_external": "[]",
            "project_urls": "[]",
            "uploaded_via": "twine/3.2.0 pkginfo/1.5.0.1 requests/2.23.0 setuptools/57.4.0 requests-toolbelt/0.9.1 tqdm/4.46.0 CPython/3.6.12",
            "upload_time": 1630683608168273,
            "filename": "pyats.aetest-21.8.1-cp36-cp36m-macosx_10_10_x86_64.whl",
            "size": 1454946,
            "path": "6c/be/486c5e4c074aa25cc4048f4cd9d1f7cd5d17f88a5fe93e10600a778dbfaa/pyats.aetest-21.8.1-cp36-cp36m-macosx_10_10_x86_64.whl",
            "python_version": "cp36",
            "packagetype": "bdist_wheel",
            "comment_text": null,
            "has_signature": false,
            "md5_digest": "28efadd94c9f4e1de990e7c487036fe7",
            "sha256_digest": "0f3fa4b957a911f652476d67fc65c69164bb85d57a3eb6d867599d966c6df7e0",
            "blake2_256_digest": "6cbe486c5e4c074aa25cc4048f4cd9d1f7cd5d17f88a5fe93e10600a778dbfaa"
        },
        {
            "metadata_version": "2.1",
            "name": "BottleSessions",
            "version": "21.9.18",
            "summary": "Sessions middleware plug-in for Bottle",
            "description": "\n## BottleSessions\n\n**BottleSessions** is middleware providing web _sessions_ for the **[Bottle](http://bottlepy.org/docs/dev/)** *micro web-framework*.  \n\nThe goal of **BottleSessions** is to provide easy to use and flexible to configure sessions. The _defaults_ attempt to make sense for typical bottle web apps with little or no tuning.  \n\n**BottleSessions** is simple for the programmer to use in both *middleware* and route *views*. The ***Session*** is a superclass of a Python `dict`, accessible as an attribute added to the bottle **`request`** object as **`request.session`**. No special sauce is required to acquire or use the session.\n##### Using the session\nAs an extension to `dict` the *session* is *pythonic* and is used like any other `dict`:\n```python\n    user = request.session.get('user','Anonymous)\n    ...\n    request.session.update({\n            'groups':['sysadmin','employee'], \n            'ip': request.ip\n        })\n    request.session['timestamp'] = time.now()\n```\nMore details on using the `BottleSessions.Session` class are [available.](docs/SESSIONS.md)\n#### Installation\n\nInstall from pypi:\n```bash\npip install BottleSessions\n```\n#### BottleSessions Example \n\n```python\n#app.py:\n\nfrom BottleSessions import BottleSessions\nfrom bottle import Bottle, request\n\napp = Bottle()\nbtl = BottleSessions(app)\n\n@app.route('/set/<key>/<val>')\ndef set_sess(key,val=None):\n\n    request.session[key] = val\n    return {key: val}\n\n@app.route('/get/<key>')\ndef get_sess(key=None):\n\n    return {key: request.session.get(key,'does not exist')}\n\n@app.route('/')\ndef hello():\n    return 'hello world'\n\nif __name__ == '__main__':\n    app.run()\n#app.py:\n\nfrom BottleSessions import BottleSessions\nfrom bottle import Bottle, request\n\napp = Bottle()\nbtl = BottleSessions(app)\n\n@app.route('/set/<key>/<val>')\ndef set_sess(key,val=None):\n\n    request.session[key] = val\n    return {key: val}\n\n@app.route('/get/<key>')\ndef get_sess(key=None):\n\n    return {key: request.session.get(key,'does not exist')}\n\n@app.route('/')\ndef hello():\n    return 'hello world'\n\nif __name__ == '__main__':\n    app.run()\n\n```\nAnother sample app is [available here](examples/sample_session_app.py)\n\n#### BottleSession Defaults and Tuning\n\n**BottleSessions** default behavior provides a session/cookie life of 300 seconds after last update using a cookie named **bottlecookie** marked `Secure` and `http-only` with `path=/`. The sessions use the same lifetime and are stored in a memory based *cachelib* **SimpleCache**.\n\nThese defaults are useful for a range of micro-framework web apps Bottle is typically used for. However, different applications have differing session needs. Hence both cookies and sessions can be [easily customized](docs/OPTIONS.md) to suite a variety of uses.  \n\n#### Backing Store\nThe backing store is provided by [Pallets Project *cachelib* library](https://pypi.org/project/cachelib/) and uses **SimpleCache** as the default.  \n\n*cachelib* **FileSystemCache**, **RedisCache**, and **Memcached** classes are also supported and can be configured with class specific options:\n\n```python\n# config.py - FileSystemCache configuration\ncache_config = {\n    'cache_type': 'FileSystem',\n    'cache_dir' : './sess_dir',\n    'threshold': 2000,\n    # Additional configuration parameters\n    # per cachelib docs\n    }\n```\n```python\n# app.py initialization\n    ...\nfrom config import cache_config\nbtl = BottleSessions(app, session_backing=cache_config,\nsession_cookie='appcookie')\n```\nFurther information is [available on configuring session backing store](docs/BACKING.md) for differing needs and differing cache types.\n\n\n",
            "description_content_type": "text/markdown",
            "author": "gunville",
            "author_email": "rk13088@yahoo.com",
            "maintainer": null,
            "maintainer_email": null,
            "license": null,
            "keywords": "'bottle cachelib sessions redis memcached'",
            "classifiers": "[\n  \"Programming Language :: Python :: 3\",\n  \"License :: OSI Approved :: MIT License\",\n  \"Operating System :: OS Independent\",\n  \"Framework :: Bottle\"\n]",
            "platform": "[]",
            "home_page": "https://github.com/Glocktober/BottleSessions",
            "download_url": null,
            "requires_python": ">=3.6",
            "requires": "[]",
            "provides": "[]",
            "obsoletes": "[]",
            "requires_dist": "[\n  \"bottle (>=0.12.0)\",\n  \"cachelib (>=0.2.0)\"\n]",
            "provides_dist": "[]",
            "obsoletes_dist": "[]",
            "requires_external": "[]",
            "project_urls": "[\n  \"repo, https://github.com/Glocktober/BottleSessions\",\n  \"overview, https://github.com/Glocktober/BottleSessions/blob/main/README.md\"\n]",
            "uploaded_via": "twine/3.4.2 importlib_metadata/4.6.3 pkginfo/1.7.1 requests/2.26.0 requests-toolbelt/0.9.1 tqdm/4.62.0 CPython/3.9.6",
            "upload_time": 1632027763679760,
            "filename": "BottleSessions-21.9.18-py3-none-any.whl",
            "size": 10358,
            "path": "8f/e4/a4ea844c98004626ff60e7bd0d8c30acd98fa6dfbe71e719d7612b793939/BottleSessions-21.9.18-py3-none-any.whl",
            "python_version": "py3",
            "packagetype": "bdist_wheel",
            "comment_text": null,
            "has_signature": false,
            "md5_digest": "1eb33eb21f6c8970d41b40cb799e14c5",
            "sha256_digest": "a6aa647a0e8555954e025261515e03d1ec78dfce8bcbb2aa1c1dbdc21b8117aa",
            "blake2_256_digest": "8fe4a4ea844c98004626ff60e7bd0d8c30acd98fa6dfbe71e719d7612b793939"
        }
    ]
}